{
  "Qcoordinates": [
    [
      {
        "expr": "cr",
        "vars": "cr"
      },
      {
        "expr": "crd",
        "vars": "crd"
      },
      {
        "expr": "crdd",
        "vars": "crdd"
      }
    ],
    [
      {
        "expr": "trolley",
        "vars": "trolley"
      },
      {
        "expr": "trolleyd",
        "vars": "trolleyd"
      },
      {
        "expr": "trolleydd",
        "vars": "trolleydd"
      }
    ],
    [
      {
        "expr": "theta1",
        "vars": "theta1"
      },
      {
        "expr": "thetad1",
        "vars": "thetad1"
      },
      {
        "expr": "thetadd1",
        "vars": "thetadd1"
      }
    ],
    [
      {
        "expr": "phi1",
        "vars": "phi1"
      },
      {
        "expr": "phid1",
        "vars": "phid1"
      },
      {
        "expr": "phidd1",
        "vars": "phidd1"
      }
    ],
    [
      {
        "expr": "theta2",
        "vars": "theta2"
      },
      {
        "expr": "thetad2",
        "vars": "thetad2"
      },
      {
        "expr": "thetadd2",
        "vars": "thetadd2"
      }
    ],
    [
      {
        "expr": "phi2",
        "vars": "phi2"
      },
      {
        "expr": "phid2",
        "vars": "phid2"
      },
      {
        "expr": "phidd2",
        "vars": "phidd2"
      }
    ],
    [
      {
        "expr": "theta3",
        "vars": "theta3"
      },
      {
        "expr": "thetad3",
        "vars": "thetad3"
      },
      {
        "expr": "thetadd3",
        "vars": "thetadd3"
      }
    ],
    [
      {
        "expr": "phi3",
        "vars": "phi3"
      },
      {
        "expr": "phid3",
        "vars": "phid3"
      },
      {
        "expr": "phidd3",
        "vars": "phidd3"
      }
    ]
  ],
  "initconditions": [
    [
      0,
      0,
      0
    ],
    [
      0,
      0,
      0
    ],
    [
      0,
      0,
      0
    ],
    [
      0,
      0,
      0
    ],
    [
      0,
      0,
      0
    ],
    [
      0,
      0,
      0
    ],
    [
      0,
      0,
      0
    ],
    [
      0,
      0,
      0
    ],
    [
      0,
      0,
      0
    ],
    [
      0,
      0,
      0
    ],
    [
      0,
      0,
      0
    ],
    [
      0,
      0,
      0
    ],
    [
      0,
      0,
      0
    ],
    [
      0,
      0,
      0
    ],
    [
      0,
      0,
      0
    ],
    [
      0,
      0,
      0
    ],
    [
      0,
      0,
      0
    ],
    [
      0,
      0,
      0
    ],
    [
      0,
      0,
      0
    ],
    [
      0,
      0,
      0
    ]
  ],
  "rotations": [
    {
      "axis": 3,
      "vars": "cr"
    },
    {
      "axis": 0,
      "vars": ""
    },
    {
      "axis": 3,
      "vars": "theta1"
    },
    {
      "axis": 1,
      "vars": "phi1"
    },
    {
      "axis": 0,
      "vars": ""
    },
    {
      "axis": 3,
      "vars": "theta2"
    },
    {
      "axis": 1,
      "vars": "phi2"
    },
    {
      "axis": 0,
      "vars": ""
    },
    {
      "axis": 3,
      "vars": "theta3"
    },
    {
      "axis": 1,
      "vars": "phi3"
    },
    {
      "axis": 0,
      "vars": ""
    }
  ],
  "Mstar": [
    [
      {
        "expr": "2*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1))*(41*Math.cos(phi1)*Math.sin(phi2) + 41*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + 3*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))*((Math.cos(phi1)*Math.cos(phi2))/40 - (Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))/40) + ((61*Math.cos(cr))/20 + (117*Math.sin(cr))/5 - 5*Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 5*Math.sin(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) - 5*Math.cos(phi3)*(10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 50*Math.cos(cr + theta1)*Math.sin(phi1) + 50*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1))*((61*Math.cos(cr))/100 + (117*Math.sin(cr))/25 - Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) - Math.cos(phi3)*(10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 10*Math.cos(cr + theta1)*Math.sin(phi1) + 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + (3*Math.cos(phi1)**2)/40 + 82*Math.sin(phi1)**2 + 3*((61*Math.cos(cr))/20 + (117*Math.sin(cr))/5 - 5*Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 50*Math.cos(cr + theta1)*Math.sin(phi1) + 50*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1))*((61*Math.cos(cr))/100 + (117*Math.sin(cr))/25 - Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.cos(cr + theta1)*Math.sin(phi1) + 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + (Math.sin(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2))*(41*Math.sin(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + 41*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2)) + (Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3))*(41*Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - 41*Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) + 3*((61*Math.cos(cr))/20 + (117*Math.sin(cr))/5 + 50*Math.cos(cr + theta1)*Math.sin(phi1))*((61*Math.cos(cr))/100 + (117*Math.sin(cr))/25 + 10*Math.cos(cr + theta1)*Math.sin(phi1)) + 3*((61*Math.sin(cr))/20 - (117*Math.cos(cr))/5 + 5*Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 50*Math.sin(cr + theta1)*Math.sin(phi1) + 50*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1))*((61*Math.sin(cr))/100 - (117*Math.cos(cr))/25 + Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.sin(phi1) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + ((61*Math.sin(cr))/20 - (117*Math.cos(cr))/5 + 5*Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 5*Math.sin(phi3)*(10*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) + 5*Math.cos(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 50*Math.sin(cr + theta1)*Math.sin(phi1) + 50*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1))*((61*Math.sin(cr))/100 - (117*Math.cos(cr))/25 + Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.sin(phi3)*(10*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) + Math.cos(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 10*Math.sin(cr + theta1)*Math.sin(phi1) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 3*((61*Math.sin(cr))/20 - (117*Math.cos(cr))/5 + 50*Math.sin(cr + theta1)*Math.sin(phi1))*((61*Math.sin(cr))/100 - (117*Math.cos(cr))/25 + 10*Math.sin(cr + theta1)*Math.sin(phi1)) + 2*(Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2) + Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3))*(41*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2) + 41*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3) + 41*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3)) + 2*((61*Math.cos(cr))/20 + (117*Math.sin(cr))/5)*((61*Math.cos(cr))/100 + (117*Math.sin(cr))/25) + 2*((117*Math.cos(cr))/5 - (61*Math.sin(cr))/20)*((117*Math.cos(cr))/25 - (61*Math.sin(cr))/100) + ((117*Math.cos(cr))/25 - (61*Math.sin(cr))/100)*(78624*Math.cos(cr) - 10248*Math.sin(cr)) + ((61*Math.cos(cr))/100 + (117*Math.sin(cr))/25)*(10248*Math.cos(cr) + 78624*Math.sin(cr)) + ((117*Math.cos(cr))/25 - (61*Math.sin(cr))/100)*(687960*Math.cos(cr) - 89670*Math.sin(cr)) + ((61*Math.cos(cr))/100 + (117*Math.sin(cr))/25)*(89670*Math.cos(cr) + 687960*Math.sin(cr)) + 41*Math.cos(theta2)**2*Math.sin(phi1)**2 + 123*Math.sin(phi1)**2*Math.sin(theta2)**2 + 2*(Math.cos(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) + Math.sin(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))*(41*Math.cos(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) + 41*Math.sin(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))) + 2*(Math.sin(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) - Math.cos(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))*((Math.sin(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)))/40 - (Math.cos(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))/40) + 486824041/40",
        "vars": [
          "cr",
          "phi1",
          "phi2",
          "phi3",
          "theta1",
          "theta2",
          "theta3"
        ]
      },
      {
        "expr": "2*((117*Math.cos(cr))/5 - (61*Math.sin(cr))/20)*(Math.sin(cr) + cr*Math.cos(cr)) - 3*(Math.cos(cr) - cr*Math.sin(cr))*((61*Math.cos(cr))/20 + (117*Math.sin(cr))/5 - 5*Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 50*Math.cos(cr + theta1)*Math.sin(phi1) + 50*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) - 3*(Math.cos(cr) - cr*Math.sin(cr))*((61*Math.cos(cr))/20 + (117*Math.sin(cr))/5 + 50*Math.cos(cr + theta1)*Math.sin(phi1)) - 3*(Math.sin(cr) + cr*Math.cos(cr))*((61*Math.sin(cr))/20 - (117*Math.cos(cr))/5 + 5*Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 50*Math.sin(cr + theta1)*Math.sin(phi1) + 50*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) - (Math.sin(cr) + cr*Math.cos(cr))*((61*Math.sin(cr))/20 - (117*Math.cos(cr))/5 + 5*Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 5*Math.sin(phi3)*(10*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) + 5*Math.cos(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 50*Math.sin(cr + theta1)*Math.sin(phi1) + 50*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) - 3*(Math.sin(cr) + cr*Math.cos(cr))*((61*Math.sin(cr))/20 - (117*Math.cos(cr))/5 + 50*Math.sin(cr + theta1)*Math.sin(phi1)) - (Math.cos(cr) - cr*Math.sin(cr))*((61*Math.cos(cr))/20 + (117*Math.sin(cr))/5 - 5*Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 5*Math.sin(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) - 5*Math.cos(phi3)*(10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 50*Math.cos(cr + theta1)*Math.sin(phi1) + 50*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) - 2*((61*Math.cos(cr))/20 + (117*Math.sin(cr))/5)*(Math.cos(cr) - cr*Math.sin(cr)) + (78624*Math.cos(cr) - 10248*Math.sin(cr))*(Math.sin(cr) + cr*Math.cos(cr)) - (10248*Math.cos(cr) + 78624*Math.sin(cr))*(Math.cos(cr) - cr*Math.sin(cr))",
        "vars": [
          "cr",
          "phi1",
          "phi2",
          "phi3",
          "theta1",
          "theta2",
          "theta3"
        ]
      },
      {
        "expr": "3*(10*Math.cos(cr + theta1)*Math.sin(phi1) - Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1))*((61*Math.cos(cr))/20 + (117*Math.sin(cr))/5 - 5*Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 50*Math.cos(cr + theta1)*Math.sin(phi1) + 50*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 2*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1))*(41*Math.cos(phi1)*Math.sin(phi2) + 41*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + 3*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))*((Math.cos(phi1)*Math.cos(phi2))/40 - (Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))/40) + (3*Math.cos(phi1)**2)/40 + 82*Math.sin(phi1)**2 + 3*(Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.sin(phi1) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1))*((61*Math.sin(cr))/20 - (117*Math.cos(cr))/5 + 5*Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 50*Math.sin(cr + theta1)*Math.sin(phi1) + 50*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + (Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.sin(phi3)*(10*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) + Math.cos(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 10*Math.sin(cr + theta1)*Math.sin(phi1) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1))*((61*Math.sin(cr))/20 - (117*Math.cos(cr))/5 + 5*Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 5*Math.sin(phi3)*(10*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) + 5*Math.cos(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 50*Math.sin(cr + theta1)*Math.sin(phi1) + 50*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + (Math.sin(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2))*(41*Math.sin(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + 41*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2)) + (Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3))*(41*Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - 41*Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) + 2*(Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2) + Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3))*(41*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2) + 41*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3) + 41*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3)) - (Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.sin(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) + Math.cos(phi3)*(10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) - 10*Math.cos(cr + theta1)*Math.sin(phi1) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1))*((61*Math.cos(cr))/20 + (117*Math.sin(cr))/5 - 5*Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 5*Math.sin(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) - 5*Math.cos(phi3)*(10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 50*Math.cos(cr + theta1)*Math.sin(phi1) + 50*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 41*Math.cos(theta2)**2*Math.sin(phi1)**2 + 123*Math.sin(phi1)**2*Math.sin(theta2)**2 + 2*(Math.cos(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) + Math.sin(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))*(41*Math.cos(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) + 41*Math.sin(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))) + 2*(Math.sin(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) - Math.cos(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))*((Math.sin(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)))/40 - (Math.cos(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))/40) + 30*Math.cos(cr + theta1)*Math.sin(phi1)*((61*Math.cos(cr))/20 + (117*Math.sin(cr))/5 + 50*Math.cos(cr + theta1)*Math.sin(phi1)) + 30*Math.sin(cr + theta1)*Math.sin(phi1)*((61*Math.sin(cr))/20 - (117*Math.cos(cr))/5 + 50*Math.sin(cr + theta1)*Math.sin(phi1)) + 1/40",
        "vars": [
          "cr",
          "phi1",
          "phi2",
          "phi3",
          "theta1",
          "theta2",
          "theta3"
        ]
      },
      {
        "expr": "2*(Math.cos(theta2)*Math.cos(theta3) - Math.cos(phi2)*Math.sin(theta2)*Math.sin(theta3))*(41*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2) + 41*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3) + 41*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3)) - 2*(Math.sin(phi3)*(Math.cos(theta2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta3)*Math.sin(theta2)) + Math.cos(phi3)*Math.sin(phi2)*Math.sin(theta2))*((Math.sin(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)))/40 - (Math.cos(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))/40) - 2*(Math.cos(phi3)*(Math.cos(theta2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta3)*Math.sin(theta2)) - Math.sin(phi2)*Math.sin(phi3)*Math.sin(theta2))*(41*Math.cos(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) + 41*Math.sin(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))) - (41*Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - 41*Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3))*(Math.cos(theta2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta3)*Math.sin(theta2)) + (41*Math.sin(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + 41*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2))*(Math.cos(theta2)*Math.cos(theta3) - Math.cos(phi2)*Math.sin(theta2)*Math.sin(theta3)) + 82*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta2) + 3*Math.sin(cr + theta1)*(10*Math.cos(phi1) + 10*Math.cos(phi1)*Math.cos(phi2) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))*((61*Math.cos(cr))/20 + (117*Math.sin(cr))/5 - 5*Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 50*Math.cos(cr + theta1)*Math.sin(phi1) + 50*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + Math.sin(cr + theta1)*((61*Math.cos(cr))/20 + (117*Math.sin(cr))/5 - 5*Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 5*Math.sin(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) - 5*Math.cos(phi3)*(10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 50*Math.cos(cr + theta1)*Math.sin(phi1) + 50*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1))*(10*Math.cos(phi1) + 10*Math.cos(phi1)*Math.cos(phi2) + 10*Math.cos(phi1)*Math.cos(phi2)*Math.cos(phi3) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 10*Math.cos(phi3)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 10*Math.cos(phi1)*Math.cos(theta3)*Math.sin(phi2)*Math.sin(phi3) + 10*Math.sin(phi1)*Math.sin(phi3)*Math.sin(theta2)*Math.sin(theta3) - 10*Math.cos(phi2)*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi1)*Math.sin(phi3)) - 3*Math.cos(cr + theta1)*(10*Math.cos(phi1) + 10*Math.cos(phi1)*Math.cos(phi2) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))*((61*Math.sin(cr))/20 - (117*Math.cos(cr))/5 + 5*Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 50*Math.sin(cr + theta1)*Math.sin(phi1) + 50*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) - Math.cos(cr + theta1)*((61*Math.sin(cr))/20 - (117*Math.cos(cr))/5 + 5*Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 5*Math.sin(phi3)*(10*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) + 5*Math.cos(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 50*Math.sin(cr + theta1)*Math.sin(phi1) + 50*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1))*(10*Math.cos(phi1) + 10*Math.cos(phi1)*Math.cos(phi2) + 10*Math.cos(phi1)*Math.cos(phi2)*Math.cos(phi3) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 10*Math.cos(phi3)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 10*Math.cos(phi1)*Math.cos(theta3)*Math.sin(phi2)*Math.sin(phi3) + 10*Math.sin(phi1)*Math.sin(phi3)*Math.sin(theta2)*Math.sin(theta3) - 10*Math.cos(phi2)*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi1)*Math.sin(phi3)) - 30*Math.cos(cr + theta1)*Math.cos(phi1)*((61*Math.sin(cr))/20 - (117*Math.cos(cr))/5 + 50*Math.sin(cr + theta1)*Math.sin(phi1)) + 30*Math.sin(cr + theta1)*Math.cos(phi1)*((61*Math.cos(cr))/20 + (117*Math.sin(cr))/5 + 50*Math.cos(cr + theta1)*Math.sin(phi1)) - 2*Math.cos(phi2)*Math.sin(theta2)*(41*Math.cos(phi1)*Math.sin(phi2) + 41*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + 3*Math.sin(phi2)*Math.sin(theta2)*((Math.cos(phi1)*Math.cos(phi2))/40 - (Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))/40)",
        "vars": [
          "cr",
          "phi1",
          "phi2",
          "phi3",
          "theta1",
          "theta2",
          "theta3"
        ]
      },
      {
        "expr": "Math.cos(phi1)/40 + 2*(41*Math.cos(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) + 41*Math.sin(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))*(Math.cos(phi2)*Math.sin(phi3) + Math.cos(phi3)*Math.cos(theta3)*Math.sin(phi2)) - 2*((Math.sin(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)))/40 - (Math.cos(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))/40)*(Math.cos(phi2)*Math.cos(phi3) - Math.cos(theta3)*Math.sin(phi2)*Math.sin(phi3)) + (Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.cos(theta2) - 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) - Math.sin(phi3)*(10*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(phi2)*Math.cos(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) + Math.cos(phi3)*Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.cos(theta2) - 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)))*((61*Math.cos(cr))/20 + (117*Math.sin(cr))/5 - 5*Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 5*Math.sin(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) - 5*Math.cos(phi3)*(10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 50*Math.cos(cr + theta1)*Math.sin(phi1) + 50*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + (Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.cos(theta2) + 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) - Math.sin(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(phi2)*Math.cos(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) + Math.cos(phi3)*Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.cos(theta2) + 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)))*((61*Math.sin(cr))/20 - (117*Math.cos(cr))/5 + 5*Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 5*Math.sin(phi3)*(10*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) + 5*Math.cos(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 50*Math.sin(cr + theta1)*Math.sin(phi1) + 50*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 3*Math.cos(phi2)*((Math.cos(phi1)*Math.cos(phi2))/40 - (Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))/40) + 2*Math.sin(phi2)*(41*Math.cos(phi1)*Math.sin(phi2) + 41*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + Math.cos(theta3)*Math.sin(phi2)*(41*Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - 41*Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) + Math.sin(phi2)*Math.sin(theta3)*(41*Math.sin(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + 41*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2)) + 2*Math.sin(phi2)*Math.sin(theta3)*(41*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2) + 41*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3) + 41*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3)) + 3*Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.cos(theta2) - 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))*((61*Math.cos(cr))/20 + (117*Math.sin(cr))/5 - 5*Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 50*Math.cos(cr + theta1)*Math.sin(phi1) + 50*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 3*Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.cos(theta2) + 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))*((61*Math.sin(cr))/20 - (117*Math.cos(cr))/5 + 5*Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 50*Math.sin(cr + theta1)*Math.sin(phi1) + 50*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1))",
        "vars": [
          "cr",
          "phi1",
          "phi2",
          "phi3",
          "theta1",
          "theta2",
          "theta3"
        ]
      },
      {
        "expr": "(Math.cos(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(phi3)*(10*Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)) - Math.cos(theta3)*Math.sin(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) - 10*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))*((61*Math.cos(cr))/20 + (117*Math.sin(cr))/5 - 5*Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 5*Math.sin(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) - 5*Math.cos(phi3)*(10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 50*Math.cos(cr + theta1)*Math.sin(phi1) + 50*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 82*Math.sin(phi1)*Math.sin(theta2) + (Math.cos(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(phi3)*(10*Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)) - Math.cos(theta3)*Math.sin(phi3)*(10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 10*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))*((61*Math.sin(cr))/20 - (117*Math.cos(cr))/5 + 5*Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 5*Math.sin(phi3)*(10*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) + 5*Math.cos(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 50*Math.sin(cr + theta1)*Math.sin(phi1) + 50*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 3*(Math.cos(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))*((61*Math.cos(cr))/20 + (117*Math.sin(cr))/5 - 5*Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 50*Math.cos(cr + theta1)*Math.sin(phi1) + 50*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + Math.cos(theta3)*(41*Math.sin(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + 41*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2)) + 3*(Math.cos(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))*((61*Math.sin(cr))/20 - (117*Math.cos(cr))/5 + 5*Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 50*Math.sin(cr + theta1)*Math.sin(phi1) + 50*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) - Math.sin(theta3)*(41*Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - 41*Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) + 2*Math.cos(theta3)*(41*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2) + 41*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3) + 41*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3)) - 2*Math.cos(phi3)*Math.sin(theta3)*(41*Math.cos(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) + 41*Math.sin(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))) - 2*Math.sin(phi3)*Math.sin(theta3)*((Math.sin(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)))/40 - (Math.cos(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))/40)",
        "vars": [
          "cr",
          "phi1",
          "phi2",
          "phi3",
          "theta1",
          "theta2",
          "theta3"
        ]
      },
      {
        "expr": "(Math.cos(phi1)*Math.cos(phi2))/40 - 2*Math.cos(phi3)*((Math.sin(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)))/40 - (Math.cos(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))/40) + 2*Math.sin(phi3)*(41*Math.cos(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) + 41*Math.sin(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))) + Math.sin(phi3)*(10*Math.cos(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) - 10*Math.sin(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)))*((61*Math.sin(cr))/20 - (117*Math.cos(cr))/5 + 5*Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 5*Math.sin(phi3)*(10*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) + 5*Math.cos(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 50*Math.sin(cr + theta1)*Math.sin(phi1) + 50*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + Math.sin(phi3)*(10*Math.cos(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) - 10*Math.sin(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)))*((61*Math.cos(cr))/20 + (117*Math.sin(cr))/5 - 5*Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 5*Math.sin(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) - 5*Math.cos(phi3)*(10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 50*Math.cos(cr + theta1)*Math.sin(phi1) + 50*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) - (Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))/40",
        "vars": [
          "cr",
          "phi1",
          "phi2",
          "phi3",
          "theta1",
          "theta2",
          "theta3"
        ]
      },
      {
        "expr": "(Math.cos(phi3)*(10*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) - Math.sin(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)))*((61*Math.cos(cr))/20 + (117*Math.sin(cr))/5 - 5*Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 5*Math.sin(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) - 5*Math.cos(phi3)*(10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 50*Math.cos(cr + theta1)*Math.sin(phi1) + 50*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + (Math.cos(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) - Math.sin(phi3)*(10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)))*((61*Math.sin(cr))/20 - (117*Math.cos(cr))/5 + 5*Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 5*Math.sin(phi3)*(10*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) + 5*Math.cos(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 50*Math.sin(cr + theta1)*Math.sin(phi1) + 50*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 82*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2) + 82*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3) + 82*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3)",
        "vars": [
          "cr",
          "phi1",
          "phi2",
          "phi3",
          "theta1",
          "theta2",
          "theta3"
        ]
      }
    ],
    [
      {
        "expr": "2*(5*Math.sin(cr) + 5*cr*Math.cos(cr))*((117*Math.cos(cr))/25 - (61*Math.sin(cr))/100) - 3*(5*Math.cos(cr) - 5*cr*Math.sin(cr))*((61*Math.cos(cr))/100 + (117*Math.sin(cr))/25 + 10*Math.cos(cr + theta1)*Math.sin(phi1)) - 3*(5*Math.sin(cr) + 5*cr*Math.cos(cr))*((61*Math.sin(cr))/100 - (117*Math.cos(cr))/25 + Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.sin(phi1) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) - (5*Math.sin(cr) + 5*cr*Math.cos(cr))*((61*Math.sin(cr))/100 - (117*Math.cos(cr))/25 + Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.sin(phi3)*(10*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) + Math.cos(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 10*Math.sin(cr + theta1)*Math.sin(phi1) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) - 3*(5*Math.sin(cr) + 5*cr*Math.cos(cr))*((61*Math.sin(cr))/100 - (117*Math.cos(cr))/25 + 10*Math.sin(cr + theta1)*Math.sin(phi1)) - 2*(5*Math.cos(cr) - 5*cr*Math.sin(cr))*((61*Math.cos(cr))/100 + (117*Math.sin(cr))/25) - 3*(5*Math.cos(cr) - 5*cr*Math.sin(cr))*((61*Math.cos(cr))/100 + (117*Math.sin(cr))/25 - Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.cos(cr + theta1)*Math.sin(phi1) + 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) - (16800*Math.cos(cr) - 16800*cr*Math.sin(cr))*((61*Math.cos(cr))/100 + (117*Math.sin(cr))/25) + (16800*Math.sin(cr) + 16800*cr*Math.cos(cr))*((117*Math.cos(cr))/25 - (61*Math.sin(cr))/100) - (5*Math.cos(cr) - 5*cr*Math.sin(cr))*((61*Math.cos(cr))/100 + (117*Math.sin(cr))/25 - Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) - Math.cos(phi3)*(10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 10*Math.cos(cr + theta1)*Math.sin(phi1) + 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1))",
        "vars": [
          "cr",
          "phi1",
          "phi2",
          "phi3",
          "theta1",
          "theta2",
          "theta3"
        ]
      },
      {
        "expr": "9*(5*Math.sin(cr) + 5*cr*Math.cos(cr))*(Math.sin(cr) + cr*Math.cos(cr)) + 9*(5*Math.cos(cr) - 5*cr*Math.sin(cr))*(Math.cos(cr) - cr*Math.sin(cr)) + (16800*Math.sin(cr) + 16800*cr*Math.cos(cr))*(Math.sin(cr) + cr*Math.cos(cr)) + (16800*Math.cos(cr) - 16800*cr*Math.sin(cr))*(Math.cos(cr) - cr*Math.sin(cr))",
        "vars": "cr"
      },
      {
        "expr": "(5*Math.cos(cr) - 5*cr*Math.sin(cr))*(Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.sin(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) + Math.cos(phi3)*(10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) - 10*Math.cos(cr + theta1)*Math.sin(phi1) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) - 3*(5*Math.cos(cr) - 5*cr*Math.sin(cr))*(10*Math.cos(cr + theta1)*Math.sin(phi1) - Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) - 3*(5*Math.sin(cr) + 5*cr*Math.cos(cr))*(Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.sin(phi1) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) - (5*Math.sin(cr) + 5*cr*Math.cos(cr))*(Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.sin(phi3)*(10*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) + Math.cos(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 10*Math.sin(cr + theta1)*Math.sin(phi1) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) - 30*Math.sin(cr + theta1)*Math.sin(phi1)*(5*Math.sin(cr) + 5*cr*Math.cos(cr)) - 30*Math.cos(cr + theta1)*Math.sin(phi1)*(5*Math.cos(cr) - 5*cr*Math.sin(cr))",
        "vars": [
          "cr",
          "phi1",
          "phi2",
          "phi3",
          "theta1",
          "theta2",
          "theta3"
        ]
      },
      {
        "expr": "3*Math.cos(cr + theta1)*(5*Math.sin(cr) + 5*cr*Math.cos(cr))*(10*Math.cos(phi1) + 10*Math.cos(phi1)*Math.cos(phi2) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) - 3*Math.sin(cr + theta1)*(5*Math.cos(cr) - 5*cr*Math.sin(cr))*(10*Math.cos(phi1) + 10*Math.cos(phi1)*Math.cos(phi2) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) + Math.cos(cr + theta1)*(5*Math.sin(cr) + 5*cr*Math.cos(cr))*(10*Math.cos(phi1) + 10*Math.cos(phi1)*Math.cos(phi2) + 10*Math.cos(phi1)*Math.cos(phi2)*Math.cos(phi3) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 10*Math.cos(phi3)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 10*Math.cos(phi1)*Math.cos(theta3)*Math.sin(phi2)*Math.sin(phi3) + 10*Math.sin(phi1)*Math.sin(phi3)*Math.sin(theta2)*Math.sin(theta3) - 10*Math.cos(phi2)*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi1)*Math.sin(phi3)) - Math.sin(cr + theta1)*(5*Math.cos(cr) - 5*cr*Math.sin(cr))*(10*Math.cos(phi1) + 10*Math.cos(phi1)*Math.cos(phi2) + 10*Math.cos(phi1)*Math.cos(phi2)*Math.cos(phi3) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 10*Math.cos(phi3)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 10*Math.cos(phi1)*Math.cos(theta3)*Math.sin(phi2)*Math.sin(phi3) + 10*Math.sin(phi1)*Math.sin(phi3)*Math.sin(theta2)*Math.sin(theta3) - 10*Math.cos(phi2)*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi1)*Math.sin(phi3)) + 30*Math.cos(cr + theta1)*Math.cos(phi1)*(5*Math.sin(cr) + 5*cr*Math.cos(cr)) - 30*Math.sin(cr + theta1)*Math.cos(phi1)*(5*Math.cos(cr) - 5*cr*Math.sin(cr))",
        "vars": [
          "cr",
          "phi1",
          "phi2",
          "phi3",
          "theta1",
          "theta2",
          "theta3"
        ]
      },
      {
        "expr": "- (5*Math.cos(cr) - 5*cr*Math.sin(cr))*(Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.cos(theta2) - 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) - Math.sin(phi3)*(10*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(phi2)*Math.cos(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) + Math.cos(phi3)*Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.cos(theta2) - 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) - (5*Math.sin(cr) + 5*cr*Math.cos(cr))*(Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.cos(theta2) + 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) - Math.sin(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(phi2)*Math.cos(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) + Math.cos(phi3)*Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.cos(theta2) + 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) - 3*Math.sin(phi2)*(5*Math.cos(cr) - 5*cr*Math.sin(cr))*(10*Math.cos(cr + theta1)*Math.cos(theta2) - 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) - 3*Math.sin(phi2)*(5*Math.sin(cr) + 5*cr*Math.cos(cr))*(10*Math.sin(cr + theta1)*Math.cos(theta2) + 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))",
        "vars": [
          "cr",
          "phi1",
          "phi2",
          "phi3",
          "theta1",
          "theta2",
          "theta3"
        ]
      },
      {
        "expr": "- (5*Math.sin(cr) + 5*cr*Math.cos(cr))*(Math.cos(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(phi3)*(10*Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)) - Math.cos(theta3)*Math.sin(phi3)*(10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 10*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)) - 3*(5*Math.sin(cr) + 5*cr*Math.cos(cr))*(Math.cos(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)) - 3*(5*Math.cos(cr) - 5*cr*Math.sin(cr))*(Math.cos(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)) - (5*Math.cos(cr) - 5*cr*Math.sin(cr))*(Math.cos(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(phi3)*(10*Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)) - Math.cos(theta3)*Math.sin(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) - 10*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))",
        "vars": [
          "cr",
          "phi1",
          "phi2",
          "phi3",
          "theta1",
          "theta2",
          "theta3"
        ]
      },
      {
        "expr": "- Math.sin(phi3)*(5*Math.sin(cr) + 5*cr*Math.cos(cr))*(10*Math.cos(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) - 10*Math.sin(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) - Math.sin(phi3)*(5*Math.cos(cr) - 5*cr*Math.sin(cr))*(10*Math.cos(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) - 10*Math.sin(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)))",
        "vars": [
          "cr",
          "phi1",
          "phi2",
          "phi3",
          "theta1",
          "theta2",
          "theta3"
        ]
      },
      {
        "expr": "- (5*Math.sin(cr) + 5*cr*Math.cos(cr))*(Math.cos(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) - Math.sin(phi3)*(10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1))) - (5*Math.cos(cr) - 5*cr*Math.sin(cr))*(Math.cos(phi3)*(10*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) - Math.sin(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)))",
        "vars": [
          "cr",
          "phi1",
          "phi2",
          "phi3",
          "theta1",
          "theta2",
          "theta3"
        ]
      }
    ],
    [
      {
        "expr": "3*(50*Math.cos(cr + theta1)*Math.sin(phi1) - 5*Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 50*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1))*((61*Math.cos(cr))/100 + (117*Math.sin(cr))/25 - Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.cos(cr + theta1)*Math.sin(phi1) + 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 2*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1))*(41*Math.cos(phi1)*Math.sin(phi2) + 41*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + 3*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))*((Math.cos(phi1)*Math.cos(phi2))/40 - (Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))/40) + (3*Math.cos(phi1)**2)/40 + 82*Math.sin(phi1)**2 + 3*(5*Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 50*Math.sin(cr + theta1)*Math.sin(phi1) + 50*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1))*((61*Math.sin(cr))/100 - (117*Math.cos(cr))/25 + Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.sin(phi1) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + (5*Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 5*Math.sin(phi3)*(10*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) + 5*Math.cos(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 50*Math.sin(cr + theta1)*Math.sin(phi1) + 50*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1))*((61*Math.sin(cr))/100 - (117*Math.cos(cr))/25 + Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.sin(phi3)*(10*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) + Math.cos(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 10*Math.sin(cr + theta1)*Math.sin(phi1) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + (Math.sin(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2))*(41*Math.sin(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + 41*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2)) + (Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3))*(41*Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - 41*Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) + 2*(Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2) + Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3))*(41*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2) + 41*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3) + 41*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3)) - (5*Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 5*Math.sin(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) + 5*Math.cos(phi3)*(10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) - 50*Math.cos(cr + theta1)*Math.sin(phi1) - 50*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1))*((61*Math.cos(cr))/100 + (117*Math.sin(cr))/25 - Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) - Math.cos(phi3)*(10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 10*Math.cos(cr + theta1)*Math.sin(phi1) + 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 41*Math.cos(theta2)**2*Math.sin(phi1)**2 + 123*Math.sin(phi1)**2*Math.sin(theta2)**2 + 2*(Math.cos(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) + Math.sin(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))*(41*Math.cos(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) + 41*Math.sin(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))) + 2*(Math.sin(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) - Math.cos(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))*((Math.sin(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)))/40 - (Math.cos(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))/40) + 150*Math.cos(cr + theta1)*Math.sin(phi1)*((61*Math.cos(cr))/100 + (117*Math.sin(cr))/25 + 10*Math.cos(cr + theta1)*Math.sin(phi1)) + 150*Math.sin(cr + theta1)*Math.sin(phi1)*((61*Math.sin(cr))/100 - (117*Math.cos(cr))/25 + 10*Math.sin(cr + theta1)*Math.sin(phi1)) + 1/40",
        "vars": [
          "cr",
          "phi1",
          "phi2",
          "phi3",
          "theta1",
          "theta2",
          "theta3"
        ]
      },
      {
        "expr": "(Math.cos(cr) - cr*Math.sin(cr))*(5*Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 5*Math.sin(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) + 5*Math.cos(phi3)*(10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) - 50*Math.cos(cr + theta1)*Math.sin(phi1) - 50*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) - 3*(Math.cos(cr) - cr*Math.sin(cr))*(50*Math.cos(cr + theta1)*Math.sin(phi1) - 5*Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 50*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) - 3*(Math.sin(cr) + cr*Math.cos(cr))*(5*Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 50*Math.sin(cr + theta1)*Math.sin(phi1) + 50*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) - (Math.sin(cr) + cr*Math.cos(cr))*(5*Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 5*Math.sin(phi3)*(10*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) + 5*Math.cos(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 50*Math.sin(cr + theta1)*Math.sin(phi1) + 50*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) - 150*Math.cos(cr + theta1)*Math.sin(phi1)*(Math.cos(cr) - cr*Math.sin(cr)) - 150*Math.sin(cr + theta1)*Math.sin(phi1)*(Math.sin(cr) + cr*Math.cos(cr))",
        "vars": [
          "cr",
          "phi1",
          "phi2",
          "phi3",
          "theta1",
          "theta2",
          "theta3"
        ]
      },
      {
        "expr": "2*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1))*(41*Math.cos(phi1)*Math.sin(phi2) + 41*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + 3*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))*((Math.cos(phi1)*Math.cos(phi2))/40 - (Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))/40) + (3*Math.cos(phi1)**2)/40 + 82*Math.sin(phi1)**2 + (Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.sin(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) + Math.cos(phi3)*(10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) - 10*Math.cos(cr + theta1)*Math.sin(phi1) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1))*(5*Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 5*Math.sin(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) + 5*Math.cos(phi3)*(10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) - 50*Math.cos(cr + theta1)*Math.sin(phi1) - 50*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + (Math.sin(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2))*(41*Math.sin(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + 41*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2)) + (Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3))*(41*Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - 41*Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) + 1500*Math.cos(cr + theta1)**2*Math.sin(phi1)**2 + 1500*Math.sin(cr + theta1)**2*Math.sin(phi1)**2 + 3*(10*Math.cos(cr + theta1)*Math.sin(phi1) - Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1))*(50*Math.cos(cr + theta1)*Math.sin(phi1) - 5*Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 50*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 2*(Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2) + Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3))*(41*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2) + 41*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3) + 41*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3)) + 41*Math.cos(theta2)**2*Math.sin(phi1)**2 + 123*Math.sin(phi1)**2*Math.sin(theta2)**2 + 3*(Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.sin(phi1) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1))*(5*Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 50*Math.sin(cr + theta1)*Math.sin(phi1) + 50*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 2*(Math.cos(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) + Math.sin(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))*(41*Math.cos(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) + 41*Math.sin(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))) + 2*(Math.sin(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) - Math.cos(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))*((Math.sin(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)))/40 - (Math.cos(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))/40) + (Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.sin(phi3)*(10*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) + Math.cos(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 10*Math.sin(cr + theta1)*Math.sin(phi1) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1))*(5*Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 5*Math.sin(phi3)*(10*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) + 5*Math.cos(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 50*Math.sin(cr + theta1)*Math.sin(phi1) + 50*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 1/40",
        "vars": [
          "cr",
          "phi1",
          "phi2",
          "phi3",
          "theta1",
          "theta2",
          "theta3"
        ]
      },
      {
        "expr": "2*(Math.cos(theta2)*Math.cos(theta3) - Math.cos(phi2)*Math.sin(theta2)*Math.sin(theta3))*(41*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2) + 41*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3) + 41*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3)) - 2*(Math.sin(phi3)*(Math.cos(theta2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta3)*Math.sin(theta2)) + Math.cos(phi3)*Math.sin(phi2)*Math.sin(theta2))*((Math.sin(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)))/40 - (Math.cos(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))/40) - 2*(Math.cos(phi3)*(Math.cos(theta2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta3)*Math.sin(theta2)) - Math.sin(phi2)*Math.sin(phi3)*Math.sin(theta2))*(41*Math.cos(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) + 41*Math.sin(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))) - (41*Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - 41*Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3))*(Math.cos(theta2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta3)*Math.sin(theta2)) + (41*Math.sin(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + 41*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2))*(Math.cos(theta2)*Math.cos(theta3) - Math.cos(phi2)*Math.sin(theta2)*Math.sin(theta3)) - Math.cos(cr + theta1)*(5*Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 5*Math.sin(phi3)*(10*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) + 5*Math.cos(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 50*Math.sin(cr + theta1)*Math.sin(phi1) + 50*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1))*(10*Math.cos(phi1) + 10*Math.cos(phi1)*Math.cos(phi2) + 10*Math.cos(phi1)*Math.cos(phi2)*Math.cos(phi3) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 10*Math.cos(phi3)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 10*Math.cos(phi1)*Math.cos(theta3)*Math.sin(phi2)*Math.sin(phi3) + 10*Math.sin(phi1)*Math.sin(phi3)*Math.sin(theta2)*Math.sin(theta3) - 10*Math.cos(phi2)*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi1)*Math.sin(phi3)) + 82*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta2) - 2*Math.cos(phi2)*Math.sin(theta2)*(41*Math.cos(phi1)*Math.sin(phi2) + 41*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + 3*Math.sin(phi2)*Math.sin(theta2)*((Math.cos(phi1)*Math.cos(phi2))/40 - (Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))/40) + 3*Math.sin(cr + theta1)*(50*Math.cos(cr + theta1)*Math.sin(phi1) - 5*Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 50*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1))*(10*Math.cos(phi1) + 10*Math.cos(phi1)*Math.cos(phi2) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) - Math.sin(cr + theta1)*(5*Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 5*Math.sin(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) + 5*Math.cos(phi3)*(10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) - 50*Math.cos(cr + theta1)*Math.sin(phi1) - 50*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1))*(10*Math.cos(phi1) + 10*Math.cos(phi1)*Math.cos(phi2) + 10*Math.cos(phi1)*Math.cos(phi2)*Math.cos(phi3) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 10*Math.cos(phi3)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 10*Math.cos(phi1)*Math.cos(theta3)*Math.sin(phi2)*Math.sin(phi3) + 10*Math.sin(phi1)*Math.sin(phi3)*Math.sin(theta2)*Math.sin(theta3) - 10*Math.cos(phi2)*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi1)*Math.sin(phi3)) - 3*Math.cos(cr + theta1)*(5*Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 50*Math.sin(cr + theta1)*Math.sin(phi1) + 50*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1))*(10*Math.cos(phi1) + 10*Math.cos(phi1)*Math.cos(phi2) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))",
        "vars": [
          "cr",
          "phi1",
          "phi2",
          "phi3",
          "theta1",
          "theta2",
          "theta3"
        ]
      },
      {
        "expr": "Math.cos(phi1)/40 + 2*(41*Math.cos(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) + 41*Math.sin(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))*(Math.cos(phi2)*Math.sin(phi3) + Math.cos(phi3)*Math.cos(theta3)*Math.sin(phi2)) - 2*((Math.sin(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)))/40 - (Math.cos(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))/40)*(Math.cos(phi2)*Math.cos(phi3) - Math.cos(theta3)*Math.sin(phi2)*Math.sin(phi3)) + (Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.cos(theta2) + 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) - Math.sin(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(phi2)*Math.cos(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) + Math.cos(phi3)*Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.cos(theta2) + 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)))*(5*Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 5*Math.sin(phi3)*(10*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) + 5*Math.cos(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 50*Math.sin(cr + theta1)*Math.sin(phi1) + 50*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 3*Math.cos(phi2)*((Math.cos(phi1)*Math.cos(phi2))/40 - (Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))/40) + 2*Math.sin(phi2)*(41*Math.cos(phi1)*Math.sin(phi2) + 41*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - (Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.cos(theta2) - 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) - Math.sin(phi3)*(10*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(phi2)*Math.cos(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) + Math.cos(phi3)*Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.cos(theta2) - 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)))*(5*Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 5*Math.sin(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) + 5*Math.cos(phi3)*(10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) - 50*Math.cos(cr + theta1)*Math.sin(phi1) - 50*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + Math.cos(theta3)*Math.sin(phi2)*(41*Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - 41*Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) + Math.sin(phi2)*Math.sin(theta3)*(41*Math.sin(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + 41*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2)) + 2*Math.sin(phi2)*Math.sin(theta3)*(41*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2) + 41*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3) + 41*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3)) + 3*Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.cos(theta2) - 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))*(50*Math.cos(cr + theta1)*Math.sin(phi1) - 5*Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 50*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 3*Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.cos(theta2) + 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))*(5*Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 50*Math.sin(cr + theta1)*Math.sin(phi1) + 50*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1))",
        "vars": [
          "cr",
          "phi1",
          "phi2",
          "phi3",
          "theta1",
          "theta2",
          "theta3"
        ]
      },
      {
        "expr": "82*Math.sin(phi1)*Math.sin(theta2) + Math.cos(theta3)*(41*Math.sin(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + 41*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2)) - Math.sin(theta3)*(41*Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - 41*Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) + 2*Math.cos(theta3)*(41*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2) + 41*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3) + 41*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3)) - (Math.cos(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(phi3)*(10*Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)) - Math.cos(theta3)*Math.sin(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) - 10*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))*(5*Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 5*Math.sin(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) + 5*Math.cos(phi3)*(10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) - 50*Math.cos(cr + theta1)*Math.sin(phi1) - 50*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + (Math.cos(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(phi3)*(10*Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)) - Math.cos(theta3)*Math.sin(phi3)*(10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 10*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))*(5*Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 5*Math.sin(phi3)*(10*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) + 5*Math.cos(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 50*Math.sin(cr + theta1)*Math.sin(phi1) + 50*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 3*(Math.cos(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))*(50*Math.cos(cr + theta1)*Math.sin(phi1) - 5*Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 50*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 3*(Math.cos(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))*(5*Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 50*Math.sin(cr + theta1)*Math.sin(phi1) + 50*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) - 2*Math.cos(phi3)*Math.sin(theta3)*(41*Math.cos(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) + 41*Math.sin(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))) - 2*Math.sin(phi3)*Math.sin(theta3)*((Math.sin(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)))/40 - (Math.cos(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))/40)",
        "vars": [
          "cr",
          "phi1",
          "phi2",
          "phi3",
          "theta1",
          "theta2",
          "theta3"
        ]
      },
      {
        "expr": "(Math.cos(phi1)*Math.cos(phi2))/40 - 2*Math.cos(phi3)*((Math.sin(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)))/40 - (Math.cos(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))/40) + 2*Math.sin(phi3)*(41*Math.cos(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) + 41*Math.sin(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))) - Math.sin(phi3)*(10*Math.cos(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) - 10*Math.sin(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)))*(5*Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 5*Math.sin(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) + 5*Math.cos(phi3)*(10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) - 50*Math.cos(cr + theta1)*Math.sin(phi1) - 50*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + Math.sin(phi3)*(10*Math.cos(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) - 10*Math.sin(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)))*(5*Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 5*Math.sin(phi3)*(10*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) + 5*Math.cos(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 50*Math.sin(cr + theta1)*Math.sin(phi1) + 50*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) - (Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))/40",
        "vars": [
          "cr",
          "phi1",
          "phi2",
          "phi3",
          "theta1",
          "theta2",
          "theta3"
        ]
      },
      {
        "expr": "(Math.cos(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) - Math.sin(phi3)*(10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)))*(5*Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 5*Math.sin(phi3)*(10*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) + 5*Math.cos(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 50*Math.sin(cr + theta1)*Math.sin(phi1) + 50*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) - (Math.cos(phi3)*(10*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) - Math.sin(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)))*(5*Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 5*Math.sin(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) + 5*Math.cos(phi3)*(10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) - 50*Math.cos(cr + theta1)*Math.sin(phi1) - 50*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 82*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2) + 82*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3) + 82*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3)",
        "vars": [
          "cr",
          "phi1",
          "phi2",
          "phi3",
          "theta1",
          "theta2",
          "theta3"
        ]
      }
    ],
    [
      {
        "expr": "2*(41*Math.cos(theta2)*Math.cos(theta3) - 41*Math.cos(phi2)*Math.sin(theta2)*Math.sin(theta3))*(Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2) + Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3)) - 2*(41*Math.cos(phi3)*(Math.cos(theta2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta3)*Math.sin(theta2)) - 41*Math.sin(phi2)*Math.sin(phi3)*Math.sin(theta2))*(Math.cos(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) + Math.sin(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))) - 2*((Math.sin(phi3)*(Math.cos(theta2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta3)*Math.sin(theta2)))/40 + (Math.cos(phi3)*Math.sin(phi2)*Math.sin(theta2))/40)*(Math.sin(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) - Math.cos(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))) + (Math.sin(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2))*(41*Math.cos(theta2)*Math.cos(theta3) - 41*Math.cos(phi2)*Math.sin(theta2)*Math.sin(theta3)) - (Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3))*(41*Math.cos(theta2)*Math.sin(theta3) + 41*Math.cos(phi2)*Math.cos(theta3)*Math.sin(theta2)) + 82*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta2) + 15*Math.sin(cr + theta1)*(10*Math.cos(phi1) + 10*Math.cos(phi1)*Math.cos(phi2) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))*((61*Math.cos(cr))/100 + (117*Math.sin(cr))/25 - Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.cos(cr + theta1)*Math.sin(phi1) + 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 5*Math.sin(cr + theta1)*((61*Math.cos(cr))/100 + (117*Math.sin(cr))/25 - Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) - Math.cos(phi3)*(10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 10*Math.cos(cr + theta1)*Math.sin(phi1) + 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1))*(10*Math.cos(phi1) + 10*Math.cos(phi1)*Math.cos(phi2) + 10*Math.cos(phi1)*Math.cos(phi2)*Math.cos(phi3) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 10*Math.cos(phi3)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 10*Math.cos(phi1)*Math.cos(theta3)*Math.sin(phi2)*Math.sin(phi3) + 10*Math.sin(phi1)*Math.sin(phi3)*Math.sin(theta2)*Math.sin(theta3) - 10*Math.cos(phi2)*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi1)*Math.sin(phi3)) - 15*Math.cos(cr + theta1)*(10*Math.cos(phi1) + 10*Math.cos(phi1)*Math.cos(phi2) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))*((61*Math.sin(cr))/100 - (117*Math.cos(cr))/25 + Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.sin(phi1) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) - 5*Math.cos(cr + theta1)*((61*Math.sin(cr))/100 - (117*Math.cos(cr))/25 + Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.sin(phi3)*(10*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) + Math.cos(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 10*Math.sin(cr + theta1)*Math.sin(phi1) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1))*(10*Math.cos(phi1) + 10*Math.cos(phi1)*Math.cos(phi2) + 10*Math.cos(phi1)*Math.cos(phi2)*Math.cos(phi3) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 10*Math.cos(phi3)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 10*Math.cos(phi1)*Math.cos(theta3)*Math.sin(phi2)*Math.sin(phi3) + 10*Math.sin(phi1)*Math.sin(phi3)*Math.sin(theta2)*Math.sin(theta3) - 10*Math.cos(phi2)*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi1)*Math.sin(phi3)) - 150*Math.cos(cr + theta1)*Math.cos(phi1)*((61*Math.sin(cr))/100 - (117*Math.cos(cr))/25 + 10*Math.sin(cr + theta1)*Math.sin(phi1)) + 150*Math.sin(cr + theta1)*Math.cos(phi1)*((61*Math.cos(cr))/100 + (117*Math.sin(cr))/25 + 10*Math.cos(cr + theta1)*Math.sin(phi1)) - 82*Math.cos(phi2)*Math.sin(theta2)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + (3*Math.sin(phi2)*Math.sin(theta2)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))/40",
        "vars": [
          "cr",
          "phi1",
          "phi2",
          "phi3",
          "theta1",
          "theta2",
          "theta3"
        ]
      },
      {
        "expr": "15*Math.cos(cr + theta1)*(Math.sin(cr) + cr*Math.cos(cr))*(10*Math.cos(phi1) + 10*Math.cos(phi1)*Math.cos(phi2) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) - 15*Math.sin(cr + theta1)*(Math.cos(cr) - cr*Math.sin(cr))*(10*Math.cos(phi1) + 10*Math.cos(phi1)*Math.cos(phi2) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) + 5*Math.cos(cr + theta1)*(Math.sin(cr) + cr*Math.cos(cr))*(10*Math.cos(phi1) + 10*Math.cos(phi1)*Math.cos(phi2) + 10*Math.cos(phi1)*Math.cos(phi2)*Math.cos(phi3) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 10*Math.cos(phi3)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 10*Math.cos(phi1)*Math.cos(theta3)*Math.sin(phi2)*Math.sin(phi3) + 10*Math.sin(phi1)*Math.sin(phi3)*Math.sin(theta2)*Math.sin(theta3) - 10*Math.cos(phi2)*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi1)*Math.sin(phi3)) - 5*Math.sin(cr + theta1)*(Math.cos(cr) - cr*Math.sin(cr))*(10*Math.cos(phi1) + 10*Math.cos(phi1)*Math.cos(phi2) + 10*Math.cos(phi1)*Math.cos(phi2)*Math.cos(phi3) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 10*Math.cos(phi3)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 10*Math.cos(phi1)*Math.cos(theta3)*Math.sin(phi2)*Math.sin(phi3) + 10*Math.sin(phi1)*Math.sin(phi3)*Math.sin(theta2)*Math.sin(theta3) - 10*Math.cos(phi2)*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi1)*Math.sin(phi3)) + 150*Math.cos(cr + theta1)*Math.cos(phi1)*(Math.sin(cr) + cr*Math.cos(cr)) - 150*Math.sin(cr + theta1)*Math.cos(phi1)*(Math.cos(cr) - cr*Math.sin(cr))",
        "vars": [
          "cr",
          "phi1",
          "phi2",
          "phi3",
          "theta1",
          "theta2",
          "theta3"
        ]
      },
      {
        "expr": "2*(41*Math.cos(theta2)*Math.cos(theta3) - 41*Math.cos(phi2)*Math.sin(theta2)*Math.sin(theta3))*(Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2) + Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3)) - 2*(41*Math.cos(phi3)*(Math.cos(theta2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta3)*Math.sin(theta2)) - 41*Math.sin(phi2)*Math.sin(phi3)*Math.sin(theta2))*(Math.cos(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) + Math.sin(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))) - 2*((Math.sin(phi3)*(Math.cos(theta2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta3)*Math.sin(theta2)))/40 + (Math.cos(phi3)*Math.sin(phi2)*Math.sin(theta2))/40)*(Math.sin(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) - Math.cos(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))) + (Math.sin(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2))*(41*Math.cos(theta2)*Math.cos(theta3) - 41*Math.cos(phi2)*Math.sin(theta2)*Math.sin(theta3)) - (Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3))*(41*Math.cos(theta2)*Math.sin(theta3) + 41*Math.cos(phi2)*Math.cos(theta3)*Math.sin(theta2)) - 5*Math.cos(cr + theta1)*(Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.sin(phi3)*(10*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) + Math.cos(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 10*Math.sin(cr + theta1)*Math.sin(phi1) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1))*(10*Math.cos(phi1) + 10*Math.cos(phi1)*Math.cos(phi2) + 10*Math.cos(phi1)*Math.cos(phi2)*Math.cos(phi3) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 10*Math.cos(phi3)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 10*Math.cos(phi1)*Math.cos(theta3)*Math.sin(phi2)*Math.sin(phi3) + 10*Math.sin(phi1)*Math.sin(phi3)*Math.sin(theta2)*Math.sin(theta3) - 10*Math.cos(phi2)*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi1)*Math.sin(phi3)) + 82*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta2) - 82*Math.cos(phi2)*Math.sin(theta2)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + (3*Math.sin(phi2)*Math.sin(theta2)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))/40 + 15*Math.sin(cr + theta1)*(10*Math.cos(cr + theta1)*Math.sin(phi1) - Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1))*(10*Math.cos(phi1) + 10*Math.cos(phi1)*Math.cos(phi2) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) - 5*Math.sin(cr + theta1)*(Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.sin(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) + Math.cos(phi3)*(10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) - 10*Math.cos(cr + theta1)*Math.sin(phi1) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1))*(10*Math.cos(phi1) + 10*Math.cos(phi1)*Math.cos(phi2) + 10*Math.cos(phi1)*Math.cos(phi2)*Math.cos(phi3) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 10*Math.cos(phi3)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 10*Math.cos(phi1)*Math.cos(theta3)*Math.sin(phi2)*Math.sin(phi3) + 10*Math.sin(phi1)*Math.sin(phi3)*Math.sin(theta2)*Math.sin(theta3) - 10*Math.cos(phi2)*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi1)*Math.sin(phi3)) - 15*Math.cos(cr + theta1)*(Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.sin(phi1) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1))*(10*Math.cos(phi1) + 10*Math.cos(phi1)*Math.cos(phi2) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))",
        "vars": [
          "cr",
          "phi1",
          "phi2",
          "phi3",
          "theta1",
          "theta2",
          "theta3"
        ]
      },
      {
        "expr": "123*Math.cos(theta2)**2 + (Math.cos(theta2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta3)*Math.sin(theta2))*(41*Math.cos(theta2)*Math.sin(theta3) + 41*Math.cos(phi2)*Math.cos(theta3)*Math.sin(theta2)) + 3*(Math.cos(theta2)*Math.cos(theta3) - Math.cos(phi2)*Math.sin(theta2)*Math.sin(theta3))*(41*Math.cos(theta2)*Math.cos(theta3) - 41*Math.cos(phi2)*Math.sin(theta2)*Math.sin(theta3)) + 1500*Math.sin(phi1)**2 + 41*Math.sin(theta2)**2 + 15*Math.cos(cr + theta1)**2*(10*Math.cos(phi1) + 10*Math.cos(phi1)*Math.cos(phi2) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))**2 + 15*Math.sin(cr + theta1)**2*(10*Math.cos(phi1) + 10*Math.cos(phi1)*Math.cos(phi2) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))**2 + (10*Math.sin(phi1) + 10*Math.cos(phi2)*Math.sin(phi1) - Math.sin(phi3)*(10*Math.cos(theta3)*(Math.sin(phi1)*Math.sin(phi2) - Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2)) + 10*Math.cos(phi1)*Math.sin(theta2)*Math.sin(theta3)) + Math.cos(phi3)*(10*Math.cos(phi2)*Math.sin(phi1) + 10*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2)) + 10*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2))*(50*Math.sin(phi1) + 50*Math.cos(phi2)*Math.sin(phi1) - 5*Math.sin(phi3)*(10*Math.cos(theta3)*(Math.sin(phi1)*Math.sin(phi2) - Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2)) + 10*Math.cos(phi1)*Math.sin(theta2)*Math.sin(theta3)) + 5*Math.cos(phi3)*(10*Math.cos(phi2)*Math.sin(phi1) + 10*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2)) + 50*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2)) + 5*Math.cos(cr + theta1)**2*(10*Math.cos(phi1) + 10*Math.cos(phi1)*Math.cos(phi2) + 10*Math.cos(phi1)*Math.cos(phi2)*Math.cos(phi3) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 10*Math.cos(phi3)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 10*Math.cos(phi1)*Math.cos(theta3)*Math.sin(phi2)*Math.sin(phi3) + 10*Math.sin(phi1)*Math.sin(phi3)*Math.sin(theta2)*Math.sin(theta3) - 10*Math.cos(phi2)*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi1)*Math.sin(phi3))**2 + 5*Math.sin(cr + theta1)**2*(10*Math.cos(phi1) + 10*Math.cos(phi1)*Math.cos(phi2) + 10*Math.cos(phi1)*Math.cos(phi2)*Math.cos(phi3) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 10*Math.cos(phi3)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 10*Math.cos(phi1)*Math.cos(theta3)*Math.sin(phi2)*Math.sin(phi3) + 10*Math.sin(phi1)*Math.sin(phi3)*Math.sin(theta2)*Math.sin(theta3) - 10*Math.cos(phi2)*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi1)*Math.sin(phi3))**2 + 2*(Math.sin(phi3)*(Math.cos(theta2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta3)*Math.sin(theta2)) + Math.cos(phi3)*Math.sin(phi2)*Math.sin(theta2))*((Math.sin(phi3)*(Math.cos(theta2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta3)*Math.sin(theta2)))/40 + (Math.cos(phi3)*Math.sin(phi2)*Math.sin(theta2))/40) + 2*(Math.cos(phi3)*(Math.cos(theta2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta3)*Math.sin(theta2)) - Math.sin(phi2)*Math.sin(phi3)*Math.sin(theta2))*(41*Math.cos(phi3)*(Math.cos(theta2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta3)*Math.sin(theta2)) - 41*Math.sin(phi2)*Math.sin(phi3)*Math.sin(theta2)) + 1500*Math.cos(cr + theta1)**2*Math.cos(phi1)**2 + 1500*Math.sin(cr + theta1)**2*Math.cos(phi1)**2 + 3*(10*Math.sin(phi1) + 10*Math.cos(phi2)*Math.sin(phi1) + 10*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2))*(50*Math.sin(phi1) + 50*Math.cos(phi2)*Math.sin(phi1) + 50*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2)) + 82*Math.cos(phi2)**2*Math.sin(theta2)**2 + (3*Math.sin(phi2)**2*Math.sin(theta2)**2)/40 + 82",
        "vars": [
          "cr",
          "phi1",
          "phi2",
          "phi3",
          "theta1",
          "theta2",
          "theta3"
        ]
      },
      {
        "expr": "2*((Math.sin(phi3)*(Math.cos(theta2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta3)*Math.sin(theta2)))/40 + (Math.cos(phi3)*Math.sin(phi2)*Math.sin(theta2))/40)*(Math.cos(phi2)*Math.cos(phi3) - Math.cos(theta3)*Math.sin(phi2)*Math.sin(phi3)) - 2*(41*Math.cos(phi3)*(Math.cos(theta2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta3)*Math.sin(theta2)) - 41*Math.sin(phi2)*Math.sin(phi3)*Math.sin(theta2))*(Math.cos(phi2)*Math.sin(phi3) + Math.cos(phi3)*Math.cos(theta3)*Math.sin(phi2)) - Math.sin(phi1)*(10*Math.sin(phi2)*Math.sin(theta2) + 10*Math.cos(theta2)*Math.sin(phi3)*Math.sin(theta3) + 10*Math.cos(phi3)*Math.sin(phi2)*Math.sin(theta2) + 10*Math.cos(phi2)*Math.cos(theta3)*Math.sin(phi3)*Math.sin(theta2))*(50*Math.sin(phi1) + 50*Math.cos(phi2)*Math.sin(phi1) - 5*Math.sin(phi3)*(10*Math.cos(theta3)*(Math.sin(phi1)*Math.sin(phi2) - Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2)) + 10*Math.cos(phi1)*Math.sin(theta2)*Math.sin(theta3)) + 5*Math.cos(phi3)*(10*Math.cos(phi2)*Math.sin(phi1) + 10*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2)) + 50*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2)) - 5*Math.cos(cr + theta1)*(Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.cos(theta2) + 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) - Math.sin(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(phi2)*Math.cos(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) + Math.cos(phi3)*Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.cos(theta2) + 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)))*(10*Math.cos(phi1) + 10*Math.cos(phi1)*Math.cos(phi2) + 10*Math.cos(phi1)*Math.cos(phi2)*Math.cos(phi3) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 10*Math.cos(phi3)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 10*Math.cos(phi1)*Math.cos(theta3)*Math.sin(phi2)*Math.sin(phi3) + 10*Math.sin(phi1)*Math.sin(phi3)*Math.sin(theta2)*Math.sin(theta3) - 10*Math.cos(phi2)*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi1)*Math.sin(phi3)) + 5*Math.sin(cr + theta1)*(Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.cos(theta2) - 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) - Math.sin(phi3)*(10*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(phi2)*Math.cos(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) + Math.cos(phi3)*Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.cos(theta2) - 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)))*(10*Math.cos(phi1) + 10*Math.cos(phi1)*Math.cos(phi2) + 10*Math.cos(phi1)*Math.cos(phi2)*Math.cos(phi3) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 10*Math.cos(phi3)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 10*Math.cos(phi1)*Math.cos(theta3)*Math.sin(phi2)*Math.sin(phi3) + 10*Math.sin(phi1)*Math.sin(phi3)*Math.sin(theta2)*Math.sin(theta3) - 10*Math.cos(phi2)*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi1)*Math.sin(phi3)) - Math.cos(theta3)*Math.sin(phi2)*(41*Math.cos(theta2)*Math.sin(theta3) + 41*Math.cos(phi2)*Math.cos(theta3)*Math.sin(theta2)) + 3*Math.sin(phi2)*Math.sin(theta3)*(41*Math.cos(theta2)*Math.cos(theta3) - 41*Math.cos(phi2)*Math.sin(theta2)*Math.sin(theta3)) - (3277*Math.cos(phi2)*Math.sin(phi2)*Math.sin(theta2))/40 - 15*Math.cos(cr + theta1)*Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.cos(theta2) + 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))*(10*Math.cos(phi1) + 10*Math.cos(phi1)*Math.cos(phi2) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) + 15*Math.sin(cr + theta1)*Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.cos(theta2) - 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))*(10*Math.cos(phi1) + 10*Math.cos(phi1)*Math.cos(phi2) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) - 30*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta2)*(50*Math.sin(phi1) + 50*Math.cos(phi2)*Math.sin(phi1) + 50*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2))",
        "vars": [
          "cr",
          "phi1",
          "phi2",
          "phi3",
          "theta1",
          "theta2",
          "theta3"
        ]
      },
      {
        "expr": "82*Math.cos(theta2) + (10*Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi3)*(10*Math.cos(phi1)*Math.sin(phi2) + 10*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + Math.cos(theta3)*Math.sin(phi3)*(10*Math.cos(phi1)*Math.cos(phi2) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) + 10*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1))*(50*Math.sin(phi1) + 50*Math.cos(phi2)*Math.sin(phi1) - 5*Math.sin(phi3)*(10*Math.cos(theta3)*(Math.sin(phi1)*Math.sin(phi2) - Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2)) + 10*Math.cos(phi1)*Math.sin(theta2)*Math.sin(theta3)) + 5*Math.cos(phi3)*(10*Math.cos(phi2)*Math.sin(phi1) + 10*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2)) + 50*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2)) + 3*(10*Math.cos(phi1)*Math.sin(phi2) + 10*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1))*(50*Math.sin(phi1) + 50*Math.cos(phi2)*Math.sin(phi1) + 50*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2)) + 3*Math.cos(theta3)*(41*Math.cos(theta2)*Math.cos(theta3) - 41*Math.cos(phi2)*Math.sin(theta2)*Math.sin(theta3)) + Math.sin(theta3)*(41*Math.cos(theta2)*Math.sin(theta3) + 41*Math.cos(phi2)*Math.cos(theta3)*Math.sin(theta2)) + 5*Math.sin(cr + theta1)*(Math.cos(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(phi3)*(10*Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)) - Math.cos(theta3)*Math.sin(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) - 10*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))*(10*Math.cos(phi1) + 10*Math.cos(phi1)*Math.cos(phi2) + 10*Math.cos(phi1)*Math.cos(phi2)*Math.cos(phi3) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 10*Math.cos(phi3)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 10*Math.cos(phi1)*Math.cos(theta3)*Math.sin(phi2)*Math.sin(phi3) + 10*Math.sin(phi1)*Math.sin(phi3)*Math.sin(theta2)*Math.sin(theta3) - 10*Math.cos(phi2)*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi1)*Math.sin(phi3)) + 2*Math.cos(phi3)*Math.sin(theta3)*(41*Math.cos(phi3)*(Math.cos(theta2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta3)*Math.sin(theta2)) - 41*Math.sin(phi2)*Math.sin(phi3)*Math.sin(theta2)) + 2*Math.sin(phi3)*Math.sin(theta3)*((Math.sin(phi3)*(Math.cos(theta2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta3)*Math.sin(theta2)))/40 + (Math.cos(phi3)*Math.sin(phi2)*Math.sin(theta2))/40) - 15*Math.cos(cr + theta1)*(Math.cos(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))*(10*Math.cos(phi1) + 10*Math.cos(phi1)*Math.cos(phi2) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) - 5*Math.cos(cr + theta1)*(Math.cos(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(phi3)*(10*Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)) - Math.cos(theta3)*Math.sin(phi3)*(10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 10*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))*(10*Math.cos(phi1) + 10*Math.cos(phi1)*Math.cos(phi2) + 10*Math.cos(phi1)*Math.cos(phi2)*Math.cos(phi3) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 10*Math.cos(phi3)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 10*Math.cos(phi1)*Math.cos(theta3)*Math.sin(phi2)*Math.sin(phi3) + 10*Math.sin(phi1)*Math.sin(phi3)*Math.sin(theta2)*Math.sin(theta3) - 10*Math.cos(phi2)*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi1)*Math.sin(phi3)) + 15*Math.sin(cr + theta1)*(Math.cos(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))*(10*Math.cos(phi1) + 10*Math.cos(phi1)*Math.cos(phi2) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))",
        "vars": [
          "cr",
          "phi1",
          "phi2",
          "phi3",
          "theta1",
          "theta2",
          "theta3"
        ]
      },
      {
        "expr": "(Math.sin(phi2)*Math.sin(theta2))/40 + 2*Math.cos(phi3)*((Math.sin(phi3)*(Math.cos(theta2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta3)*Math.sin(theta2)))/40 + (Math.cos(phi3)*Math.sin(phi2)*Math.sin(theta2))/40) - 2*Math.sin(phi3)*(41*Math.cos(phi3)*(Math.cos(theta2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta3)*Math.sin(theta2)) - 41*Math.sin(phi2)*Math.sin(phi3)*Math.sin(theta2)) - Math.sin(phi3)*(10*Math.sin(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + 10*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2))*(50*Math.sin(phi1) + 50*Math.cos(phi2)*Math.sin(phi1) - 5*Math.sin(phi3)*(10*Math.cos(theta3)*(Math.sin(phi1)*Math.sin(phi2) - Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2)) + 10*Math.cos(phi1)*Math.sin(theta2)*Math.sin(theta3)) + 5*Math.cos(phi3)*(10*Math.cos(phi2)*Math.sin(phi1) + 10*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2)) + 50*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2)) - 5*Math.cos(cr + theta1)*Math.sin(phi3)*(10*Math.cos(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) - 10*Math.sin(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)))*(10*Math.cos(phi1) + 10*Math.cos(phi1)*Math.cos(phi2) + 10*Math.cos(phi1)*Math.cos(phi2)*Math.cos(phi3) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 10*Math.cos(phi3)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 10*Math.cos(phi1)*Math.cos(theta3)*Math.sin(phi2)*Math.sin(phi3) + 10*Math.sin(phi1)*Math.sin(phi3)*Math.sin(theta2)*Math.sin(theta3) - 10*Math.cos(phi2)*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi1)*Math.sin(phi3)) + 5*Math.sin(cr + theta1)*Math.sin(phi3)*(10*Math.cos(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) - 10*Math.sin(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)))*(10*Math.cos(phi1) + 10*Math.cos(phi1)*Math.cos(phi2) + 10*Math.cos(phi1)*Math.cos(phi2)*Math.cos(phi3) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 10*Math.cos(phi3)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 10*Math.cos(phi1)*Math.cos(theta3)*Math.sin(phi2)*Math.sin(phi3) + 10*Math.sin(phi1)*Math.sin(phi3)*Math.sin(theta2)*Math.sin(theta3) - 10*Math.cos(phi2)*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi1)*Math.sin(phi3))",
        "vars": [
          "cr",
          "phi1",
          "phi2",
          "phi3",
          "theta1",
          "theta2",
          "theta3"
        ]
      },
      {
        "expr": "82*Math.cos(theta2)*Math.cos(theta3) + (Math.cos(phi3)*(10*Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - 10*Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) + Math.sin(phi3)*(10*Math.cos(phi1)*Math.cos(phi2) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))*(50*Math.sin(phi1) + 50*Math.cos(phi2)*Math.sin(phi1) - 5*Math.sin(phi3)*(10*Math.cos(theta3)*(Math.sin(phi1)*Math.sin(phi2) - Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2)) + 10*Math.cos(phi1)*Math.sin(theta2)*Math.sin(theta3)) + 5*Math.cos(phi3)*(10*Math.cos(phi2)*Math.sin(phi1) + 10*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2)) + 50*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2)) - 82*Math.cos(phi2)*Math.sin(theta2)*Math.sin(theta3) + 5*Math.sin(cr + theta1)*(Math.cos(phi3)*(10*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) - Math.sin(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)))*(10*Math.cos(phi1) + 10*Math.cos(phi1)*Math.cos(phi2) + 10*Math.cos(phi1)*Math.cos(phi2)*Math.cos(phi3) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 10*Math.cos(phi3)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 10*Math.cos(phi1)*Math.cos(theta3)*Math.sin(phi2)*Math.sin(phi3) + 10*Math.sin(phi1)*Math.sin(phi3)*Math.sin(theta2)*Math.sin(theta3) - 10*Math.cos(phi2)*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi1)*Math.sin(phi3)) - 5*Math.cos(cr + theta1)*(Math.cos(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) - Math.sin(phi3)*(10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)))*(10*Math.cos(phi1) + 10*Math.cos(phi1)*Math.cos(phi2) + 10*Math.cos(phi1)*Math.cos(phi2)*Math.cos(phi3) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 10*Math.cos(phi3)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 10*Math.cos(phi1)*Math.cos(theta3)*Math.sin(phi2)*Math.sin(phi3) + 10*Math.sin(phi1)*Math.sin(phi3)*Math.sin(theta2)*Math.sin(theta3) - 10*Math.cos(phi2)*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi1)*Math.sin(phi3))",
        "vars": [
          "cr",
          "phi1",
          "phi2",
          "phi3",
          "theta1",
          "theta2",
          "theta3"
        ]
      }
    ],
    [
      {
        "expr": "Math.cos(phi1)/40 + 2*(Math.cos(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) + Math.sin(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))*(41*Math.cos(phi2)*Math.sin(phi3) + 41*Math.cos(phi3)*Math.cos(theta3)*Math.sin(phi2)) - 2*(Math.sin(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) - Math.cos(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))*((Math.cos(phi2)*Math.cos(phi3))/40 - (Math.cos(theta3)*Math.sin(phi2)*Math.sin(phi3))/40) + (5*Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.cos(theta2) - 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) - 5*Math.sin(phi3)*(10*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(phi2)*Math.cos(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) + 5*Math.cos(phi3)*Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.cos(theta2) - 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)))*((61*Math.cos(cr))/100 + (117*Math.sin(cr))/25 - Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) - Math.cos(phi3)*(10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 10*Math.cos(cr + theta1)*Math.sin(phi1) + 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + (5*Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.cos(theta2) + 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) - 5*Math.sin(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(phi2)*Math.cos(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) + 5*Math.cos(phi3)*Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.cos(theta2) + 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)))*((61*Math.sin(cr))/100 - (117*Math.cos(cr))/25 + Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.sin(phi3)*(10*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) + Math.cos(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 10*Math.sin(cr + theta1)*Math.sin(phi1) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + (3*Math.cos(phi2)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))/40 + 82*Math.sin(phi2)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + 41*Math.cos(theta3)*Math.sin(phi2)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) + 41*Math.sin(phi2)*Math.sin(theta3)*(Math.sin(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2)) + 82*Math.sin(phi2)*Math.sin(theta3)*(Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2) + Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3)) + 15*Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.cos(theta2) - 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))*((61*Math.cos(cr))/100 + (117*Math.sin(cr))/25 - Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.cos(cr + theta1)*Math.sin(phi1) + 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 15*Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.cos(theta2) + 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))*((61*Math.sin(cr))/100 - (117*Math.cos(cr))/25 + Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.sin(phi1) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1))",
        "vars": [
          "cr",
          "phi1",
          "phi2",
          "phi3",
          "theta1",
          "theta2",
          "theta3"
        ]
      },
      {
        "expr": "- (Math.sin(cr) + cr*Math.cos(cr))*(5*Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.cos(theta2) + 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) - 5*Math.sin(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(phi2)*Math.cos(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) + 5*Math.cos(phi3)*Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.cos(theta2) + 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) - (Math.cos(cr) - cr*Math.sin(cr))*(5*Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.cos(theta2) - 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) - 5*Math.sin(phi3)*(10*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(phi2)*Math.cos(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) + 5*Math.cos(phi3)*Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.cos(theta2) - 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) - 15*Math.sin(phi2)*(Math.sin(cr) + cr*Math.cos(cr))*(10*Math.sin(cr + theta1)*Math.cos(theta2) + 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) - 15*Math.sin(phi2)*(Math.cos(cr) - cr*Math.sin(cr))*(10*Math.cos(cr + theta1)*Math.cos(theta2) - 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))",
        "vars": [
          "cr",
          "phi1",
          "phi2",
          "phi3",
          "theta1",
          "theta2",
          "theta3"
        ]
      },
      {
        "expr": "Math.cos(phi1)/40 + 2*(Math.cos(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) + Math.sin(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))*(41*Math.cos(phi2)*Math.sin(phi3) + 41*Math.cos(phi3)*Math.cos(theta3)*Math.sin(phi2)) - 2*(Math.sin(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) - Math.cos(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))*((Math.cos(phi2)*Math.cos(phi3))/40 - (Math.cos(theta3)*Math.sin(phi2)*Math.sin(phi3))/40) + (5*Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.cos(theta2) + 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) - 5*Math.sin(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(phi2)*Math.cos(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) + 5*Math.cos(phi3)*Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.cos(theta2) + 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)))*(Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.sin(phi3)*(10*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) + Math.cos(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 10*Math.sin(cr + theta1)*Math.sin(phi1) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + (3*Math.cos(phi2)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))/40 + 82*Math.sin(phi2)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - (5*Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.cos(theta2) - 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) - 5*Math.sin(phi3)*(10*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(phi2)*Math.cos(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) + 5*Math.cos(phi3)*Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.cos(theta2) - 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)))*(Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.sin(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) + Math.cos(phi3)*(10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) - 10*Math.cos(cr + theta1)*Math.sin(phi1) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 41*Math.cos(theta3)*Math.sin(phi2)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) + 41*Math.sin(phi2)*Math.sin(theta3)*(Math.sin(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2)) + 82*Math.sin(phi2)*Math.sin(theta3)*(Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2) + Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3)) + 15*Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.cos(theta2) - 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))*(10*Math.cos(cr + theta1)*Math.sin(phi1) - Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 15*Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.cos(theta2) + 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))*(Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.sin(phi1) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1))",
        "vars": [
          "cr",
          "phi1",
          "phi2",
          "phi3",
          "theta1",
          "theta2",
          "theta3"
        ]
      },
      {
        "expr": "2*(Math.sin(phi3)*(Math.cos(theta2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta3)*Math.sin(theta2)) + Math.cos(phi3)*Math.sin(phi2)*Math.sin(theta2))*((Math.cos(phi2)*Math.cos(phi3))/40 - (Math.cos(theta3)*Math.sin(phi2)*Math.sin(phi3))/40) - 2*(Math.cos(phi3)*(Math.cos(theta2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta3)*Math.sin(theta2)) - Math.sin(phi2)*Math.sin(phi3)*Math.sin(theta2))*(41*Math.cos(phi2)*Math.sin(phi3) + 41*Math.cos(phi3)*Math.cos(theta3)*Math.sin(phi2)) - 5*Math.sin(phi1)*(10*Math.sin(phi2)*Math.sin(theta2) + 10*Math.cos(theta2)*Math.sin(phi3)*Math.sin(theta3) + 10*Math.cos(phi3)*Math.sin(phi2)*Math.sin(theta2) + 10*Math.cos(phi2)*Math.cos(theta3)*Math.sin(phi3)*Math.sin(theta2))*(10*Math.sin(phi1) + 10*Math.cos(phi2)*Math.sin(phi1) - Math.sin(phi3)*(10*Math.cos(theta3)*(Math.sin(phi1)*Math.sin(phi2) - Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2)) + 10*Math.cos(phi1)*Math.sin(theta2)*Math.sin(theta3)) + Math.cos(phi3)*(10*Math.cos(phi2)*Math.sin(phi1) + 10*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2)) + 10*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2)) - Math.cos(cr + theta1)*(5*Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.cos(theta2) + 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) - 5*Math.sin(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(phi2)*Math.cos(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) + 5*Math.cos(phi3)*Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.cos(theta2) + 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)))*(10*Math.cos(phi1) + 10*Math.cos(phi1)*Math.cos(phi2) + 10*Math.cos(phi1)*Math.cos(phi2)*Math.cos(phi3) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 10*Math.cos(phi3)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 10*Math.cos(phi1)*Math.cos(theta3)*Math.sin(phi2)*Math.sin(phi3) + 10*Math.sin(phi1)*Math.sin(phi3)*Math.sin(theta2)*Math.sin(theta3) - 10*Math.cos(phi2)*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi1)*Math.sin(phi3)) + Math.sin(cr + theta1)*(5*Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.cos(theta2) - 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) - 5*Math.sin(phi3)*(10*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(phi2)*Math.cos(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) + 5*Math.cos(phi3)*Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.cos(theta2) - 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)))*(10*Math.cos(phi1) + 10*Math.cos(phi1)*Math.cos(phi2) + 10*Math.cos(phi1)*Math.cos(phi2)*Math.cos(phi3) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 10*Math.cos(phi3)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 10*Math.cos(phi1)*Math.cos(theta3)*Math.sin(phi2)*Math.sin(phi3) + 10*Math.sin(phi1)*Math.sin(phi3)*Math.sin(theta2)*Math.sin(theta3) - 10*Math.cos(phi2)*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi1)*Math.sin(phi3)) - 41*Math.cos(theta3)*Math.sin(phi2)*(Math.cos(theta2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta3)*Math.sin(theta2)) + 123*Math.sin(phi2)*Math.sin(theta3)*(Math.cos(theta2)*Math.cos(theta3) - Math.cos(phi2)*Math.sin(theta2)*Math.sin(theta3)) - (3277*Math.cos(phi2)*Math.sin(phi2)*Math.sin(theta2))/40 - 15*Math.cos(cr + theta1)*Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.cos(theta2) + 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))*(10*Math.cos(phi1) + 10*Math.cos(phi1)*Math.cos(phi2) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) + 15*Math.sin(cr + theta1)*Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.cos(theta2) - 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))*(10*Math.cos(phi1) + 10*Math.cos(phi1)*Math.cos(phi2) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) - 150*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta2)*(10*Math.sin(phi1) + 10*Math.cos(phi2)*Math.sin(phi1) + 10*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2))",
        "vars": [
          "cr",
          "phi1",
          "phi2",
          "phi3",
          "theta1",
          "theta2",
          "theta3"
        ]
      },
      {
        "expr": "2*(Math.cos(phi2)*Math.sin(phi3) + Math.cos(phi3)*Math.cos(theta3)*Math.sin(phi2))*(41*Math.cos(phi2)*Math.sin(phi3) + 41*Math.cos(phi3)*Math.cos(theta3)*Math.sin(phi2)) + 2*(Math.cos(phi2)*Math.cos(phi3) - Math.cos(theta3)*Math.sin(phi2)*Math.sin(phi3))*((Math.cos(phi2)*Math.cos(phi3))/40 - (Math.cos(theta3)*Math.sin(phi2)*Math.sin(phi3))/40) + (3*Math.cos(phi2)**2)/40 + 82*Math.sin(phi2)**2 + 5*Math.sin(phi1)**2*(10*Math.sin(phi2)*Math.sin(theta2) + 10*Math.cos(theta2)*Math.sin(phi3)*Math.sin(theta3) + 10*Math.cos(phi3)*Math.sin(phi2)*Math.sin(theta2) + 10*Math.cos(phi2)*Math.cos(theta3)*Math.sin(phi3)*Math.sin(theta2))**2 + (Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.cos(theta2) - 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) - Math.sin(phi3)*(10*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(phi2)*Math.cos(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) + Math.cos(phi3)*Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.cos(theta2) - 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)))*(5*Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.cos(theta2) - 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) - 5*Math.sin(phi3)*(10*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(phi2)*Math.cos(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) + 5*Math.cos(phi3)*Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.cos(theta2) - 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) + (Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.cos(theta2) + 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) - Math.sin(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(phi2)*Math.cos(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) + Math.cos(phi3)*Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.cos(theta2) + 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)))*(5*Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.cos(theta2) + 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) - 5*Math.sin(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(phi2)*Math.cos(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) + 5*Math.cos(phi3)*Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.cos(theta2) + 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) + 41*Math.cos(theta3)**2*Math.sin(phi2)**2 + 123*Math.sin(phi2)**2*Math.sin(theta3)**2 + 15*Math.sin(phi2)**2*(10*Math.cos(cr + theta1)*Math.cos(theta2) - 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))**2 + 15*Math.sin(phi2)**2*(10*Math.sin(cr + theta1)*Math.cos(theta2) + 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))**2 + 1500*Math.sin(phi1)**2*Math.sin(phi2)**2*Math.sin(theta2)**2 + 1/40",
        "vars": [
          "cr",
          "phi1",
          "phi2",
          "phi3",
          "theta1",
          "theta2",
          "theta3"
        ]
      },
      {
        "expr": "(5*Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.cos(theta2) + 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) - 5*Math.sin(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(phi2)*Math.cos(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) + 5*Math.cos(phi3)*Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.cos(theta2) + 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)))*(Math.cos(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(phi3)*(10*Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)) - Math.cos(theta3)*Math.sin(phi3)*(10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 10*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)) + (5*Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.cos(theta2) - 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) - 5*Math.sin(phi3)*(10*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(phi2)*Math.cos(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) + 5*Math.cos(phi3)*Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.cos(theta2) - 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)))*(Math.cos(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(phi3)*(10*Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)) - Math.cos(theta3)*Math.sin(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) - 10*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)) + 82*Math.cos(theta3)*Math.sin(phi2)*Math.sin(theta3) - 5*Math.sin(phi1)*(10*Math.sin(phi2)*Math.sin(theta2) + 10*Math.cos(theta2)*Math.sin(phi3)*Math.sin(theta3) + 10*Math.cos(phi3)*Math.sin(phi2)*Math.sin(theta2) + 10*Math.cos(phi2)*Math.cos(theta3)*Math.sin(phi3)*Math.sin(theta2))*(10*Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi3)*(10*Math.cos(phi1)*Math.sin(phi2) + 10*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + Math.cos(theta3)*Math.sin(phi3)*(10*Math.cos(phi1)*Math.cos(phi2) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) + 10*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - 2*Math.cos(phi3)*Math.sin(theta3)*(41*Math.cos(phi2)*Math.sin(phi3) + 41*Math.cos(phi3)*Math.cos(theta3)*Math.sin(phi2)) + 15*Math.sin(phi2)*(Math.cos(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))*(10*Math.sin(cr + theta1)*Math.cos(theta2) + 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 2*Math.sin(phi3)*Math.sin(theta3)*((Math.cos(phi2)*Math.cos(phi3))/40 - (Math.cos(theta3)*Math.sin(phi2)*Math.sin(phi3))/40) + 15*Math.sin(phi2)*(Math.cos(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))*(10*Math.cos(cr + theta1)*Math.cos(theta2) - 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) - 150*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta2)*(10*Math.cos(phi1)*Math.sin(phi2) + 10*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1))",
        "vars": [
          "cr",
          "phi1",
          "phi2",
          "phi3",
          "theta1",
          "theta2",
          "theta3"
        ]
      },
      {
        "expr": "Math.cos(phi2)/40 + 2*Math.cos(phi3)*((Math.cos(phi2)*Math.cos(phi3))/40 - (Math.cos(theta3)*Math.sin(phi2)*Math.sin(phi3))/40) + 2*Math.sin(phi3)*(41*Math.cos(phi2)*Math.sin(phi3) + 41*Math.cos(phi3)*Math.cos(theta3)*Math.sin(phi2)) + Math.sin(phi3)*(10*Math.cos(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) - 10*Math.sin(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)))*(5*Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.cos(theta2) + 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) - 5*Math.sin(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(phi2)*Math.cos(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) + 5*Math.cos(phi3)*Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.cos(theta2) + 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) + Math.sin(phi3)*(10*Math.cos(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) - 10*Math.sin(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)))*(5*Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.cos(theta2) - 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) - 5*Math.sin(phi3)*(10*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(phi2)*Math.cos(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) + 5*Math.cos(phi3)*Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.cos(theta2) - 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) + 5*Math.sin(phi1)*Math.sin(phi3)*(10*Math.sin(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + 10*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2))*(10*Math.sin(phi2)*Math.sin(theta2) + 10*Math.cos(theta2)*Math.sin(phi3)*Math.sin(theta3) + 10*Math.cos(phi3)*Math.sin(phi2)*Math.sin(theta2) + 10*Math.cos(phi2)*Math.cos(theta3)*Math.sin(phi3)*Math.sin(theta2))",
        "vars": [
          "cr",
          "phi1",
          "phi2",
          "phi3",
          "theta1",
          "theta2",
          "theta3"
        ]
      },
      {
        "expr": "82*Math.sin(phi2)*Math.sin(theta3) + (Math.cos(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) - Math.sin(phi3)*(10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)))*(5*Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.cos(theta2) + 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) - 5*Math.sin(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(phi2)*Math.cos(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) + 5*Math.cos(phi3)*Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.cos(theta2) + 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) + (Math.cos(phi3)*(10*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) - Math.sin(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)))*(5*Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.cos(theta2) - 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) - 5*Math.sin(phi3)*(10*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(phi2)*Math.cos(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) + 5*Math.cos(phi3)*Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.cos(theta2) - 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) - 5*Math.sin(phi1)*(Math.cos(phi3)*(10*Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - 10*Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) + Math.sin(phi3)*(10*Math.cos(phi1)*Math.cos(phi2) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))*(10*Math.sin(phi2)*Math.sin(theta2) + 10*Math.cos(theta2)*Math.sin(phi3)*Math.sin(theta3) + 10*Math.cos(phi3)*Math.sin(phi2)*Math.sin(theta2) + 10*Math.cos(phi2)*Math.cos(theta3)*Math.sin(phi3)*Math.sin(theta2))",
        "vars": [
          "cr",
          "phi1",
          "phi2",
          "phi3",
          "theta1",
          "theta2",
          "theta3"
        ]
      }
    ],
    [
      {
        "expr": "(5*Math.cos(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 5*Math.cos(phi3)*(10*Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)) - 5*Math.cos(theta3)*Math.sin(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) - 50*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))*((61*Math.cos(cr))/100 + (117*Math.sin(cr))/25 - Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) - Math.cos(phi3)*(10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 10*Math.cos(cr + theta1)*Math.sin(phi1) + 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 82*Math.sin(phi1)*Math.sin(theta2) + (5*Math.cos(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 5*Math.cos(phi3)*(10*Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)) - 5*Math.cos(theta3)*Math.sin(phi3)*(10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 50*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))*((61*Math.sin(cr))/100 - (117*Math.cos(cr))/25 + Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.sin(phi3)*(10*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) + Math.cos(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 10*Math.sin(cr + theta1)*Math.sin(phi1) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 3*(5*Math.cos(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 50*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))*((61*Math.cos(cr))/100 + (117*Math.sin(cr))/25 - Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.cos(cr + theta1)*Math.sin(phi1) + 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 41*Math.cos(theta3)*(Math.sin(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2)) + 3*(5*Math.cos(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 50*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))*((61*Math.sin(cr))/100 - (117*Math.cos(cr))/25 + Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.sin(phi1) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) - 41*Math.sin(theta3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) + 82*Math.cos(theta3)*(Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2) + Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3)) - 82*Math.cos(phi3)*Math.sin(theta3)*(Math.cos(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) + Math.sin(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))) - (Math.sin(phi3)*Math.sin(theta3)*(Math.sin(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) - Math.cos(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))))/20",
        "vars": [
          "cr",
          "phi1",
          "phi2",
          "phi3",
          "theta1",
          "theta2",
          "theta3"
        ]
      },
      {
        "expr": "- (Math.sin(cr) + cr*Math.cos(cr))*(5*Math.cos(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 5*Math.cos(phi3)*(10*Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)) - 5*Math.cos(theta3)*Math.sin(phi3)*(10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 50*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)) - 3*(5*Math.cos(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 50*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))*(Math.sin(cr) + cr*Math.cos(cr)) - 3*(5*Math.cos(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 50*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))*(Math.cos(cr) - cr*Math.sin(cr)) - (Math.cos(cr) - cr*Math.sin(cr))*(5*Math.cos(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 5*Math.cos(phi3)*(10*Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)) - 5*Math.cos(theta3)*Math.sin(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) - 50*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))",
        "vars": [
          "cr",
          "phi1",
          "phi2",
          "phi3",
          "theta1",
          "theta2",
          "theta3"
        ]
      },
      {
        "expr": "82*Math.sin(phi1)*Math.sin(theta2) + 41*Math.cos(theta3)*(Math.sin(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2)) - 41*Math.sin(theta3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) + 82*Math.cos(theta3)*(Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2) + Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3)) - (5*Math.cos(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 5*Math.cos(phi3)*(10*Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)) - 5*Math.cos(theta3)*Math.sin(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) - 50*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))*(Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.sin(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) + Math.cos(phi3)*(10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) - 10*Math.cos(cr + theta1)*Math.sin(phi1) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + (5*Math.cos(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 5*Math.cos(phi3)*(10*Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)) - 5*Math.cos(theta3)*Math.sin(phi3)*(10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 50*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))*(Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.sin(phi3)*(10*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) + Math.cos(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 10*Math.sin(cr + theta1)*Math.sin(phi1) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 3*(5*Math.cos(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 50*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))*(10*Math.cos(cr + theta1)*Math.sin(phi1) - Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 3*(5*Math.cos(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 50*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))*(Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.sin(phi1) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) - 82*Math.cos(phi3)*Math.sin(theta3)*(Math.cos(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) + Math.sin(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))) - (Math.sin(phi3)*Math.sin(theta3)*(Math.sin(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) - Math.cos(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))))/20",
        "vars": [
          "cr",
          "phi1",
          "phi2",
          "phi3",
          "theta1",
          "theta2",
          "theta3"
        ]
      },
      {
        "expr": "82*Math.cos(theta2) + (50*Math.cos(phi1)*Math.sin(phi2) + 5*Math.cos(phi3)*(10*Math.cos(phi1)*Math.sin(phi2) + 10*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + 5*Math.cos(theta3)*Math.sin(phi3)*(10*Math.cos(phi1)*Math.cos(phi2) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) + 50*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1))*(10*Math.sin(phi1) + 10*Math.cos(phi2)*Math.sin(phi1) - Math.sin(phi3)*(10*Math.cos(theta3)*(Math.sin(phi1)*Math.sin(phi2) - Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2)) + 10*Math.cos(phi1)*Math.sin(theta2)*Math.sin(theta3)) + Math.cos(phi3)*(10*Math.cos(phi2)*Math.sin(phi1) + 10*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2)) + 10*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2)) + 3*(50*Math.cos(phi1)*Math.sin(phi2) + 50*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1))*(10*Math.sin(phi1) + 10*Math.cos(phi2)*Math.sin(phi1) + 10*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2)) + 123*Math.cos(theta3)*(Math.cos(theta2)*Math.cos(theta3) - Math.cos(phi2)*Math.sin(theta2)*Math.sin(theta3)) + 41*Math.sin(theta3)*(Math.cos(theta2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta3)*Math.sin(theta2)) + Math.sin(cr + theta1)*(5*Math.cos(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 5*Math.cos(phi3)*(10*Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)) - 5*Math.cos(theta3)*Math.sin(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) - 50*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))*(10*Math.cos(phi1) + 10*Math.cos(phi1)*Math.cos(phi2) + 10*Math.cos(phi1)*Math.cos(phi2)*Math.cos(phi3) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 10*Math.cos(phi3)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 10*Math.cos(phi1)*Math.cos(theta3)*Math.sin(phi2)*Math.sin(phi3) + 10*Math.sin(phi1)*Math.sin(phi3)*Math.sin(theta2)*Math.sin(theta3) - 10*Math.cos(phi2)*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi1)*Math.sin(phi3)) + 82*Math.cos(phi3)*Math.sin(theta3)*(Math.cos(phi3)*(Math.cos(theta2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta3)*Math.sin(theta2)) - Math.sin(phi2)*Math.sin(phi3)*Math.sin(theta2)) + (Math.sin(phi3)*Math.sin(theta3)*(Math.sin(phi3)*(Math.cos(theta2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta3)*Math.sin(theta2)) + Math.cos(phi3)*Math.sin(phi2)*Math.sin(theta2)))/20 - 3*Math.cos(cr + theta1)*(5*Math.cos(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 50*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))*(10*Math.cos(phi1) + 10*Math.cos(phi1)*Math.cos(phi2) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) - Math.cos(cr + theta1)*(5*Math.cos(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 5*Math.cos(phi3)*(10*Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)) - 5*Math.cos(theta3)*Math.sin(phi3)*(10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 50*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))*(10*Math.cos(phi1) + 10*Math.cos(phi1)*Math.cos(phi2) + 10*Math.cos(phi1)*Math.cos(phi2)*Math.cos(phi3) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 10*Math.cos(phi3)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 10*Math.cos(phi1)*Math.cos(theta3)*Math.sin(phi2)*Math.sin(phi3) + 10*Math.sin(phi1)*Math.sin(phi3)*Math.sin(theta2)*Math.sin(theta3) - 10*Math.cos(phi2)*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi1)*Math.sin(phi3)) + 3*Math.sin(cr + theta1)*(5*Math.cos(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 50*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))*(10*Math.cos(phi1) + 10*Math.cos(phi1)*Math.cos(phi2) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))",
        "vars": [
          "cr",
          "phi1",
          "phi2",
          "phi3",
          "theta1",
          "theta2",
          "theta3"
        ]
      },
      {
        "expr": "(Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.cos(theta2) + 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) - Math.sin(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(phi2)*Math.cos(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) + Math.cos(phi3)*Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.cos(theta2) + 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)))*(5*Math.cos(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 5*Math.cos(phi3)*(10*Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)) - 5*Math.cos(theta3)*Math.sin(phi3)*(10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 50*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)) + (Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.cos(theta2) - 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) - Math.sin(phi3)*(10*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(phi2)*Math.cos(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) + Math.cos(phi3)*Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.cos(theta2) - 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)))*(5*Math.cos(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 5*Math.cos(phi3)*(10*Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)) - 5*Math.cos(theta3)*Math.sin(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) - 50*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)) + 82*Math.cos(theta3)*Math.sin(phi2)*Math.sin(theta3) - Math.sin(phi1)*(10*Math.sin(phi2)*Math.sin(theta2) + 10*Math.cos(theta2)*Math.sin(phi3)*Math.sin(theta3) + 10*Math.cos(phi3)*Math.sin(phi2)*Math.sin(theta2) + 10*Math.cos(phi2)*Math.cos(theta3)*Math.sin(phi3)*Math.sin(theta2))*(50*Math.cos(phi1)*Math.sin(phi2) + 5*Math.cos(phi3)*(10*Math.cos(phi1)*Math.sin(phi2) + 10*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + 5*Math.cos(theta3)*Math.sin(phi3)*(10*Math.cos(phi1)*Math.cos(phi2) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) + 50*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - 82*Math.cos(phi3)*Math.sin(theta3)*(Math.cos(phi2)*Math.sin(phi3) + Math.cos(phi3)*Math.cos(theta3)*Math.sin(phi2)) + 3*Math.sin(phi2)*(5*Math.cos(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 50*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))*(10*Math.sin(cr + theta1)*Math.cos(theta2) + 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + (Math.sin(phi3)*Math.sin(theta3)*(Math.cos(phi2)*Math.cos(phi3) - Math.cos(theta3)*Math.sin(phi2)*Math.sin(phi3)))/20 + 3*Math.sin(phi2)*(5*Math.cos(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 50*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))*(10*Math.cos(cr + theta1)*Math.cos(theta2) - 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) - 30*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta2)*(50*Math.cos(phi1)*Math.sin(phi2) + 50*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1))",
        "vars": [
          "cr",
          "phi1",
          "phi2",
          "phi3",
          "theta1",
          "theta2",
          "theta3"
        ]
      },
      {
        "expr": "3*(Math.cos(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))*(5*Math.cos(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 50*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)) + (Math.cos(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(phi3)*(10*Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)) - Math.cos(theta3)*Math.sin(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) - 10*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))*(5*Math.cos(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 5*Math.cos(phi3)*(10*Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)) - 5*Math.cos(theta3)*Math.sin(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) - 50*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)) + 3*(10*Math.cos(phi1)*Math.sin(phi2) + 10*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1))*(50*Math.cos(phi1)*Math.sin(phi2) + 50*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + 123*Math.cos(theta3)**2 + 41*Math.sin(theta3)**2 + (10*Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi3)*(10*Math.cos(phi1)*Math.sin(phi2) + 10*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + Math.cos(theta3)*Math.sin(phi3)*(10*Math.cos(phi1)*Math.cos(phi2) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) + 10*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1))*(50*Math.cos(phi1)*Math.sin(phi2) + 5*Math.cos(phi3)*(10*Math.cos(phi1)*Math.sin(phi2) + 10*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + 5*Math.cos(theta3)*Math.sin(phi3)*(10*Math.cos(phi1)*Math.cos(phi2) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) + 50*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + (Math.cos(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(phi3)*(10*Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)) - Math.cos(theta3)*Math.sin(phi3)*(10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 10*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))*(5*Math.cos(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 5*Math.cos(phi3)*(10*Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)) - 5*Math.cos(theta3)*Math.sin(phi3)*(10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 50*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)) + 82*Math.cos(phi3)**2*Math.sin(theta3)**2 + (Math.sin(phi3)**2*Math.sin(theta3)**2)/20 + 3*(Math.cos(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))*(5*Math.cos(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 50*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)) + 82",
        "vars": [
          "cr",
          "phi1",
          "phi2",
          "phi3",
          "theta1",
          "theta2",
          "theta3"
        ]
      },
      {
        "expr": "Math.sin(phi3)*(10*Math.cos(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) - 10*Math.sin(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)))*(5*Math.cos(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 5*Math.cos(phi3)*(10*Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)) - 5*Math.cos(theta3)*Math.sin(phi3)*(10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 50*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)) - Math.sin(phi3)*(10*Math.sin(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + 10*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2))*(50*Math.cos(phi1)*Math.sin(phi2) + 5*Math.cos(phi3)*(10*Math.cos(phi1)*Math.sin(phi2) + 10*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + 5*Math.cos(theta3)*Math.sin(phi3)*(10*Math.cos(phi1)*Math.cos(phi2) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) + 50*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + Math.sin(phi3)*(10*Math.cos(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) - 10*Math.sin(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)))*(5*Math.cos(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 5*Math.cos(phi3)*(10*Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)) - 5*Math.cos(theta3)*Math.sin(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) - 50*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)) - (1639*Math.cos(phi3)*Math.sin(phi3)*Math.sin(theta3))/20",
        "vars": [
          "cr",
          "phi1",
          "phi2",
          "phi3",
          "theta1",
          "theta2",
          "theta3"
        ]
      },
      {
        "expr": "82*Math.cos(theta3) + (Math.cos(phi3)*(10*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) - Math.sin(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)))*(5*Math.cos(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 5*Math.cos(phi3)*(10*Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)) - 5*Math.cos(theta3)*Math.sin(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) - 50*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)) + (Math.cos(phi3)*(10*Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - 10*Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) + Math.sin(phi3)*(10*Math.cos(phi1)*Math.cos(phi2) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))*(50*Math.cos(phi1)*Math.sin(phi2) + 5*Math.cos(phi3)*(10*Math.cos(phi1)*Math.sin(phi2) + 10*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + 5*Math.cos(theta3)*Math.sin(phi3)*(10*Math.cos(phi1)*Math.cos(phi2) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) + 50*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + (Math.cos(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) - Math.sin(phi3)*(10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)))*(5*Math.cos(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 5*Math.cos(phi3)*(10*Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)) - 5*Math.cos(theta3)*Math.sin(phi3)*(10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 50*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))",
        "vars": [
          "cr",
          "phi1",
          "phi2",
          "phi3",
          "theta1",
          "theta2",
          "theta3"
        ]
      }
    ],
    [
      {
        "expr": "(Math.cos(phi1)*Math.cos(phi2))/40 - (Math.cos(phi3)*(Math.sin(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) - Math.cos(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))))/20 + 82*Math.sin(phi3)*(Math.cos(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) + Math.sin(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))) + 5*Math.sin(phi3)*(10*Math.cos(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) - 10*Math.sin(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)))*((61*Math.sin(cr))/100 - (117*Math.cos(cr))/25 + Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.sin(phi3)*(10*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) + Math.cos(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 10*Math.sin(cr + theta1)*Math.sin(phi1) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 5*Math.sin(phi3)*(10*Math.cos(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) - 10*Math.sin(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)))*((61*Math.cos(cr))/100 + (117*Math.sin(cr))/25 - Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) - Math.cos(phi3)*(10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 10*Math.cos(cr + theta1)*Math.sin(phi1) + 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) - (Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))/40",
        "vars": [
          "cr",
          "phi1",
          "phi2",
          "phi3",
          "theta1",
          "theta2",
          "theta3"
        ]
      },
      {
        "expr": "- 5*Math.sin(phi3)*(10*Math.cos(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) - 10*Math.sin(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)))*(Math.sin(cr) + cr*Math.cos(cr)) - 5*Math.sin(phi3)*(10*Math.cos(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) - 10*Math.sin(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)))*(Math.cos(cr) - cr*Math.sin(cr))",
        "vars": [
          "cr",
          "phi1",
          "phi2",
          "phi3",
          "theta1",
          "theta2",
          "theta3"
        ]
      },
      {
        "expr": "(Math.cos(phi1)*Math.cos(phi2))/40 - (Math.cos(phi3)*(Math.sin(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) - Math.cos(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))))/20 + 82*Math.sin(phi3)*(Math.cos(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) + Math.sin(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))) - 5*Math.sin(phi3)*(10*Math.cos(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) - 10*Math.sin(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)))*(Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.sin(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) + Math.cos(phi3)*(10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) - 10*Math.cos(cr + theta1)*Math.sin(phi1) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 5*Math.sin(phi3)*(10*Math.cos(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) - 10*Math.sin(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)))*(Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.sin(phi3)*(10*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) + Math.cos(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 10*Math.sin(cr + theta1)*Math.sin(phi1) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) - (Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))/40",
        "vars": [
          "cr",
          "phi1",
          "phi2",
          "phi3",
          "theta1",
          "theta2",
          "theta3"
        ]
      },
      {
        "expr": "(Math.sin(phi2)*Math.sin(theta2))/40 + (Math.cos(phi3)*(Math.sin(phi3)*(Math.cos(theta2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta3)*Math.sin(theta2)) + Math.cos(phi3)*Math.sin(phi2)*Math.sin(theta2)))/20 - 82*Math.sin(phi3)*(Math.cos(phi3)*(Math.cos(theta2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta3)*Math.sin(theta2)) - Math.sin(phi2)*Math.sin(phi3)*Math.sin(theta2)) - 5*Math.sin(phi3)*(10*Math.sin(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + 10*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2))*(10*Math.sin(phi1) + 10*Math.cos(phi2)*Math.sin(phi1) - Math.sin(phi3)*(10*Math.cos(theta3)*(Math.sin(phi1)*Math.sin(phi2) - Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2)) + 10*Math.cos(phi1)*Math.sin(theta2)*Math.sin(theta3)) + Math.cos(phi3)*(10*Math.cos(phi2)*Math.sin(phi1) + 10*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2)) + 10*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2)) - 5*Math.cos(cr + theta1)*Math.sin(phi3)*(10*Math.cos(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) - 10*Math.sin(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)))*(10*Math.cos(phi1) + 10*Math.cos(phi1)*Math.cos(phi2) + 10*Math.cos(phi1)*Math.cos(phi2)*Math.cos(phi3) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 10*Math.cos(phi3)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 10*Math.cos(phi1)*Math.cos(theta3)*Math.sin(phi2)*Math.sin(phi3) + 10*Math.sin(phi1)*Math.sin(phi3)*Math.sin(theta2)*Math.sin(theta3) - 10*Math.cos(phi2)*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi1)*Math.sin(phi3)) + 5*Math.sin(cr + theta1)*Math.sin(phi3)*(10*Math.cos(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) - 10*Math.sin(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)))*(10*Math.cos(phi1) + 10*Math.cos(phi1)*Math.cos(phi2) + 10*Math.cos(phi1)*Math.cos(phi2)*Math.cos(phi3) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 10*Math.cos(phi3)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 10*Math.cos(phi1)*Math.cos(theta3)*Math.sin(phi2)*Math.sin(phi3) + 10*Math.sin(phi1)*Math.sin(phi3)*Math.sin(theta2)*Math.sin(theta3) - 10*Math.cos(phi2)*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi1)*Math.sin(phi3))",
        "vars": [
          "cr",
          "phi1",
          "phi2",
          "phi3",
          "theta1",
          "theta2",
          "theta3"
        ]
      },
      {
        "expr": "Math.cos(phi2)/40 + (Math.cos(phi3)*(Math.cos(phi2)*Math.cos(phi3) - Math.cos(theta3)*Math.sin(phi2)*Math.sin(phi3)))/20 + 82*Math.sin(phi3)*(Math.cos(phi2)*Math.sin(phi3) + Math.cos(phi3)*Math.cos(theta3)*Math.sin(phi2)) + 5*Math.sin(phi3)*(10*Math.cos(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) - 10*Math.sin(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)))*(Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.cos(theta2) + 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) - Math.sin(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(phi2)*Math.cos(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) + Math.cos(phi3)*Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.cos(theta2) + 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) + 5*Math.sin(phi3)*(10*Math.cos(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) - 10*Math.sin(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)))*(Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.cos(theta2) - 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) - Math.sin(phi3)*(10*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(phi2)*Math.cos(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) + Math.cos(phi3)*Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.cos(theta2) - 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) + 5*Math.sin(phi1)*Math.sin(phi3)*(10*Math.sin(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + 10*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2))*(10*Math.sin(phi2)*Math.sin(theta2) + 10*Math.cos(theta2)*Math.sin(phi3)*Math.sin(theta3) + 10*Math.cos(phi3)*Math.sin(phi2)*Math.sin(theta2) + 10*Math.cos(phi2)*Math.cos(theta3)*Math.sin(phi3)*Math.sin(theta2))",
        "vars": [
          "cr",
          "phi1",
          "phi2",
          "phi3",
          "theta1",
          "theta2",
          "theta3"
        ]
      },
      {
        "expr": "5*Math.sin(phi3)*(10*Math.cos(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) - 10*Math.sin(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)))*(Math.cos(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(phi3)*(10*Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)) - Math.cos(theta3)*Math.sin(phi3)*(10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 10*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)) - 5*Math.sin(phi3)*(10*Math.sin(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + 10*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2))*(10*Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi3)*(10*Math.cos(phi1)*Math.sin(phi2) + 10*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + Math.cos(theta3)*Math.sin(phi3)*(10*Math.cos(phi1)*Math.cos(phi2) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) + 10*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + 5*Math.sin(phi3)*(10*Math.cos(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) - 10*Math.sin(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)))*(Math.cos(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(phi3)*(10*Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)) - Math.cos(theta3)*Math.sin(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) - 10*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)) - (1639*Math.cos(phi3)*Math.sin(phi3)*Math.sin(theta3))/20",
        "vars": [
          "cr",
          "phi1",
          "phi2",
          "phi3",
          "theta1",
          "theta2",
          "theta3"
        ]
      },
      {
        "expr": "5*Math.sin(phi3)**2*(10*Math.sin(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + 10*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2))**2 + 5*Math.sin(phi3)**2*(10*Math.cos(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) - 10*Math.sin(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)))**2 + 5*Math.sin(phi3)**2*(10*Math.cos(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) - 10*Math.sin(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)))**2 + Math.cos(phi3)**2/20 + 82*Math.sin(phi3)**2 + 1/40",
        "vars": [
          "cr",
          "phi1",
          "phi2",
          "phi3",
          "theta1",
          "theta2",
          "theta3"
        ]
      },
      {
        "expr": "5*Math.sin(phi3)*(10*Math.cos(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) - 10*Math.sin(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)))*(Math.cos(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) - Math.sin(phi3)*(10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1))) - 5*Math.sin(phi3)*(10*Math.sin(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + 10*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2))*(Math.cos(phi3)*(10*Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - 10*Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) + Math.sin(phi3)*(10*Math.cos(phi1)*Math.cos(phi2) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))) + 5*Math.sin(phi3)*(10*Math.cos(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) - 10*Math.sin(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)))*(Math.cos(phi3)*(10*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) - Math.sin(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)))",
        "vars": [
          "cr",
          "phi1",
          "phi2",
          "phi3",
          "theta1",
          "theta2",
          "theta3"
        ]
      }
    ],
    [
      {
        "expr": "(5*Math.cos(phi3)*(10*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) - 5*Math.sin(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)))*((61*Math.cos(cr))/100 + (117*Math.sin(cr))/25 - Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) - Math.cos(phi3)*(10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 10*Math.cos(cr + theta1)*Math.sin(phi1) + 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + (5*Math.cos(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) - 5*Math.sin(phi3)*(10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)))*((61*Math.sin(cr))/100 - (117*Math.cos(cr))/25 + Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.sin(phi3)*(10*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) + Math.cos(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 10*Math.sin(cr + theta1)*Math.sin(phi1) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 82*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2) + 82*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3) + 82*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3)",
        "vars": [
          "cr",
          "phi1",
          "phi2",
          "phi3",
          "theta1",
          "theta2",
          "theta3"
        ]
      },
      {
        "expr": "- (5*Math.cos(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) - 5*Math.sin(phi3)*(10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)))*(Math.sin(cr) + cr*Math.cos(cr)) - (5*Math.cos(phi3)*(10*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) - 5*Math.sin(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)))*(Math.cos(cr) - cr*Math.sin(cr))",
        "vars": [
          "cr",
          "phi1",
          "phi2",
          "phi3",
          "theta1",
          "theta2",
          "theta3"
        ]
      },
      {
        "expr": "(5*Math.cos(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) - 5*Math.sin(phi3)*(10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)))*(Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.sin(phi3)*(10*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) + Math.cos(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 10*Math.sin(cr + theta1)*Math.sin(phi1) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) - (5*Math.cos(phi3)*(10*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) - 5*Math.sin(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)))*(Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.sin(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) + Math.cos(phi3)*(10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) - 10*Math.cos(cr + theta1)*Math.sin(phi1) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 82*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2) + 82*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3) + 82*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3)",
        "vars": [
          "cr",
          "phi1",
          "phi2",
          "phi3",
          "theta1",
          "theta2",
          "theta3"
        ]
      },
      {
        "expr": "82*Math.cos(theta2)*Math.cos(theta3) + (5*Math.cos(phi3)*(10*Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - 10*Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) + 5*Math.sin(phi3)*(10*Math.cos(phi1)*Math.cos(phi2) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))*(10*Math.sin(phi1) + 10*Math.cos(phi2)*Math.sin(phi1) - Math.sin(phi3)*(10*Math.cos(theta3)*(Math.sin(phi1)*Math.sin(phi2) - Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2)) + 10*Math.cos(phi1)*Math.sin(theta2)*Math.sin(theta3)) + Math.cos(phi3)*(10*Math.cos(phi2)*Math.sin(phi1) + 10*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2)) + 10*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2)) - 82*Math.cos(phi2)*Math.sin(theta2)*Math.sin(theta3) + Math.sin(cr + theta1)*(5*Math.cos(phi3)*(10*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) - 5*Math.sin(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)))*(10*Math.cos(phi1) + 10*Math.cos(phi1)*Math.cos(phi2) + 10*Math.cos(phi1)*Math.cos(phi2)*Math.cos(phi3) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 10*Math.cos(phi3)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 10*Math.cos(phi1)*Math.cos(theta3)*Math.sin(phi2)*Math.sin(phi3) + 10*Math.sin(phi1)*Math.sin(phi3)*Math.sin(theta2)*Math.sin(theta3) - 10*Math.cos(phi2)*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi1)*Math.sin(phi3)) - Math.cos(cr + theta1)*(5*Math.cos(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) - 5*Math.sin(phi3)*(10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)))*(10*Math.cos(phi1) + 10*Math.cos(phi1)*Math.cos(phi2) + 10*Math.cos(phi1)*Math.cos(phi2)*Math.cos(phi3) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 10*Math.cos(phi3)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 10*Math.cos(phi1)*Math.cos(theta3)*Math.sin(phi2)*Math.sin(phi3) + 10*Math.sin(phi1)*Math.sin(phi3)*Math.sin(theta2)*Math.sin(theta3) - 10*Math.cos(phi2)*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi1)*Math.sin(phi3))",
        "vars": [
          "cr",
          "phi1",
          "phi2",
          "phi3",
          "theta1",
          "theta2",
          "theta3"
        ]
      },
      {
        "expr": "82*Math.sin(phi2)*Math.sin(theta3) + (5*Math.cos(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) - 5*Math.sin(phi3)*(10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)))*(Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.cos(theta2) + 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) - Math.sin(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(phi2)*Math.cos(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) + Math.cos(phi3)*Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.cos(theta2) + 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) + (5*Math.cos(phi3)*(10*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) - 5*Math.sin(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)))*(Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.cos(theta2) - 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) - Math.sin(phi3)*(10*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(phi2)*Math.cos(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) + Math.cos(phi3)*Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.cos(theta2) - 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) - Math.sin(phi1)*(5*Math.cos(phi3)*(10*Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - 10*Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) + 5*Math.sin(phi3)*(10*Math.cos(phi1)*Math.cos(phi2) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))*(10*Math.sin(phi2)*Math.sin(theta2) + 10*Math.cos(theta2)*Math.sin(phi3)*Math.sin(theta3) + 10*Math.cos(phi3)*Math.sin(phi2)*Math.sin(theta2) + 10*Math.cos(phi2)*Math.cos(theta3)*Math.sin(phi3)*Math.sin(theta2))",
        "vars": [
          "cr",
          "phi1",
          "phi2",
          "phi3",
          "theta1",
          "theta2",
          "theta3"
        ]
      },
      {
        "expr": "82*Math.cos(theta3) + (5*Math.cos(phi3)*(10*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) - 5*Math.sin(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)))*(Math.cos(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(phi3)*(10*Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)) - Math.cos(theta3)*Math.sin(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) - 10*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)) + (5*Math.cos(phi3)*(10*Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - 10*Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) + 5*Math.sin(phi3)*(10*Math.cos(phi1)*Math.cos(phi2) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))*(10*Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi3)*(10*Math.cos(phi1)*Math.sin(phi2) + 10*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + Math.cos(theta3)*Math.sin(phi3)*(10*Math.cos(phi1)*Math.cos(phi2) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) + 10*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + (5*Math.cos(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) - 5*Math.sin(phi3)*(10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)))*(Math.cos(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(phi3)*(10*Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)) - Math.cos(theta3)*Math.sin(phi3)*(10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 10*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))",
        "vars": [
          "cr",
          "phi1",
          "phi2",
          "phi3",
          "theta1",
          "theta2",
          "theta3"
        ]
      },
      {
        "expr": "Math.sin(phi3)*(10*Math.cos(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) - 10*Math.sin(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)))*(5*Math.cos(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) - 5*Math.sin(phi3)*(10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1))) - Math.sin(phi3)*(10*Math.sin(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + 10*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2))*(5*Math.cos(phi3)*(10*Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - 10*Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) + 5*Math.sin(phi3)*(10*Math.cos(phi1)*Math.cos(phi2) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))) + Math.sin(phi3)*(10*Math.cos(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) - 10*Math.sin(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)))*(5*Math.cos(phi3)*(10*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) - 5*Math.sin(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)))",
        "vars": [
          "cr",
          "phi1",
          "phi2",
          "phi3",
          "theta1",
          "theta2",
          "theta3"
        ]
      },
      {
        "expr": "(Math.cos(phi3)*(10*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) - Math.sin(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)))*(5*Math.cos(phi3)*(10*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) - 5*Math.sin(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1))) + (Math.cos(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) - Math.sin(phi3)*(10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)))*(5*Math.cos(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) - 5*Math.sin(phi3)*(10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1))) + (Math.cos(phi3)*(10*Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - 10*Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) + Math.sin(phi3)*(10*Math.cos(phi1)*Math.cos(phi2) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))*(5*Math.cos(phi3)*(10*Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - 10*Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) + 5*Math.sin(phi3)*(10*Math.cos(phi1)*Math.cos(phi2) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))) + 82",
        "vars": [
          "cr",
          "phi1",
          "phi2",
          "phi3",
          "theta1",
          "theta2",
          "theta3"
        ]
      }
    ]
  ],
  "Nstar": [
    [
      {
        "expr": "2*(Math.cos(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) + Math.sin(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))*((41*Math.cos(phi3)*(thetad3 + thetad2*Math.cos(phi2) + crd*Math.cos(phi1)*Math.cos(phi2) + thetad1*Math.cos(phi1)*Math.cos(phi2) + phid1*Math.sin(phi2)*Math.sin(theta2) - crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) - 41*Math.sin(phi3)*(Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2))))*(Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2) + Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3)) + (Math.sin(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) - Math.cos(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))*(phid3/40 + (phid2*Math.cos(theta3))/40 + (phid1*Math.cos(theta2)*Math.cos(theta3))/40 + (thetad2*Math.sin(phi2)*Math.sin(theta3))/40 + (crd*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3))/40 + (crd*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2))/40 + (thetad1*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3))/40 - (phid1*Math.cos(phi2)*Math.sin(theta2)*Math.sin(theta3))/40 + (thetad1*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2))/40 + (crd*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3))/40 + (thetad1*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3))/40) - 41*Math.cos(phi3)*(Math.cos(theta3)*(phid1*Math.sin(phi1)*Math.sin(phi2) - phid2*Math.cos(phi1)*Math.cos(phi2) - phid1*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2) + phid2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) + thetad2*Math.cos(phi2)*Math.sin(phi1)*Math.sin(theta2)) + thetad3*Math.sin(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + phid1*Math.cos(phi1)*Math.sin(theta2)*Math.sin(theta3) + thetad2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3) + thetad3*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2)) - 41*Math.sin(phi3)*(phid1*Math.cos(phi2)*Math.sin(phi1) + phid2*Math.cos(phi1)*Math.sin(phi2) + phid1*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2) + phid2*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1) - thetad2*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta2)) + 41*phid3*Math.cos(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) - 41*phid3*Math.sin(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3))) + 2*(Math.sin(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) - Math.cos(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))*((41*Math.cos(phi3)*(Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2))) + 41*Math.sin(phi3)*(thetad3 + thetad2*Math.cos(phi2) + crd*Math.cos(phi1)*Math.cos(phi2) + thetad1*Math.cos(phi1)*Math.cos(phi2) + phid1*Math.sin(phi2)*Math.sin(theta2) - crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))*(Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2) + Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3)) - (Math.cos(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) + Math.sin(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))*(41*phid3 + 41*phid2*Math.cos(theta3) + 41*phid1*Math.cos(theta2)*Math.cos(theta3) + 41*thetad2*Math.sin(phi2)*Math.sin(theta3) + 41*crd*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3) + 41*crd*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2) + 41*thetad1*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3) - 41*phid1*Math.cos(phi2)*Math.sin(theta2)*Math.sin(theta3) + 41*thetad1*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2) + 41*crd*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3) + 41*thetad1*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3)) + (Math.cos(phi3)*(phid1*Math.cos(phi2)*Math.sin(phi1) + phid2*Math.cos(phi1)*Math.sin(phi2) + phid1*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2) + phid2*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1) - thetad2*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta2)))/40 - (Math.sin(phi3)*(Math.cos(theta3)*(phid1*Math.sin(phi1)*Math.sin(phi2) - phid2*Math.cos(phi1)*Math.cos(phi2) - phid1*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2) + phid2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) + thetad2*Math.cos(phi2)*Math.sin(phi1)*Math.sin(theta2)) + thetad3*Math.sin(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + phid1*Math.cos(phi1)*Math.sin(theta2)*Math.sin(theta3) + thetad2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3) + thetad3*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2)))/40 + (phid3*Math.sin(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))/40 + (phid3*Math.cos(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)))/40) + 3*((61*Math.sin(cr))/100 - (117*Math.cos(cr))/25 + Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.sin(phi1) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1))*((61*crd*Math.cos(cr))/20 - 5*Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2)*(crd + thetad1) - 10*thetad2*Math.cos(cr + theta1)*Math.cos(theta2) + 10*phid1*Math.sin(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + 10*thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + (117*crd*Math.sin(cr))/5 + 50*Math.cos(cr + theta1)*Math.sin(phi1)*(crd + thetad1) + 50*phid1*Math.sin(cr + theta1)*Math.cos(phi1) + 5*phid2*Math.cos(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 50*phid1*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(phi2) - 50*phid2*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2) + 50*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)*(crd + thetad1)) + (Math.sin(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2))*((Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))*((Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))))/40 - (Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2)))/40) - (Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3))*(41*thetad3 + 41*thetad2*Math.cos(phi2) + 41*crd*Math.cos(phi1)*Math.cos(phi2) + 41*thetad1*Math.cos(phi1)*Math.cos(phi2) + 41*phid1*Math.sin(phi2)*Math.sin(theta2) - 41*crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 41*thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) - 41*Math.sin(theta3)*(phid1*Math.sin(phi1)*Math.sin(phi2) - phid2*Math.cos(phi1)*Math.cos(phi2) - phid1*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2) + phid2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) + thetad2*Math.cos(phi2)*Math.sin(phi1)*Math.sin(theta2)) + 41*thetad3*Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + 41*phid1*Math.cos(phi1)*Math.cos(theta3)*Math.sin(theta2) + 41*thetad2*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi1) - 41*thetad3*Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) + Math.cos(phi1)*(Math.cos(theta2)*Math.sin(phi1)*(41*phid1*Math.cos(theta2) + 41*Math.sin(phi1)*Math.sin(theta2)*(crd + thetad1)) - (phid1*Math.sin(phi1))/40 + Math.sin(phi1)*Math.sin(theta2)*(41*phid1*Math.sin(theta2) - 41*Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - (Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3))*((Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))*((Math.sin(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))))/40 + (Math.cos(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2)))/40) - (Math.sin(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2))*(41*thetad3 + 41*thetad2*Math.cos(phi2) + 41*crd*Math.cos(phi1)*Math.cos(phi2) + 41*thetad1*Math.cos(phi1)*Math.cos(phi2) + 41*phid1*Math.sin(phi2)*Math.sin(theta2) - 41*crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 41*thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) + 41*Math.cos(theta3)*(phid1*Math.sin(phi1)*Math.sin(phi2) - phid2*Math.cos(phi1)*Math.cos(phi2) - phid1*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2) + phid2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) + thetad2*Math.cos(phi2)*Math.sin(phi1)*Math.sin(theta2)) + 41*thetad3*Math.sin(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + 41*phid1*Math.cos(phi1)*Math.sin(theta2)*Math.sin(theta3) + 41*thetad2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3) + 41*thetad3*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2)) - 2*((61*crd*Math.cos(cr))/20 + (117*crd*Math.sin(cr))/5)*((117*Math.cos(cr))/25 - (61*Math.sin(cr))/100) + 2*((117*crd*Math.cos(cr))/5 - (61*crd*Math.sin(cr))/20)*((61*Math.cos(cr))/100 + (117*Math.sin(cr))/25) - (10248*crd*Math.cos(cr) + 78624*crd*Math.sin(cr))*((117*Math.cos(cr))/25 - (61*Math.sin(cr))/100) + (78624*crd*Math.cos(cr) - 10248*crd*Math.sin(cr))*((61*Math.cos(cr))/100 + (117*Math.sin(cr))/25) - (89670*crd*Math.cos(cr) + 687960*crd*Math.sin(cr))*((117*Math.cos(cr))/25 - (61*Math.sin(cr))/100) + (687960*crd*Math.cos(cr) - 89670*crd*Math.sin(cr))*((61*Math.cos(cr))/100 + (117*Math.sin(cr))/25) - 2*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1))*((Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))*(phid2/40 + (phid1*Math.cos(theta2))/40 + (crd*Math.sin(phi1)*Math.sin(theta2))/40 + (thetad1*Math.sin(phi1)*Math.sin(theta2))/40) - 41*phid2*Math.cos(phi1)*Math.cos(phi2) - Math.sin(phi1)*Math.sin(theta2)*(41*Math.cos(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) + 41*Math.sin(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) + 41*phid1*Math.sin(phi1)*Math.sin(phi2) - 41*phid1*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2) + 41*phid2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) + 41*thetad2*Math.cos(phi2)*Math.sin(phi1)*Math.sin(theta2)) + ((61*Math.sin(cr))/100 - (117*Math.cos(cr))/25 + Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.sin(phi3)*(10*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) + Math.cos(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 10*Math.sin(cr + theta1)*Math.sin(phi1) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1))*((61*crd*Math.cos(cr))/20 - 5*Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2)*(crd + thetad1) - 10*thetad2*Math.cos(cr + theta1)*Math.cos(theta2) + 10*phid1*Math.sin(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + 10*thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + (117*crd*Math.sin(cr))/5 - 5*Math.sin(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2)*(crd + thetad1) + thetad2*Math.cos(cr + theta1)*Math.sin(theta2) + thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2) - phid1*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)*(crd + thetad1)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2)*(crd + thetad1) - thetad2*Math.cos(cr + theta1)*Math.cos(theta2) + phid1*Math.sin(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + phid2*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + phid1*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(phi2) + phid2*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)*(crd + thetad1)) + 10*thetad3*Math.sin(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)) - 10*thetad3*Math.cos(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) + 5*Math.cos(phi3)*(10*phid2*Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2)*(crd + thetad1) - thetad2*Math.cos(cr + theta1)*Math.cos(theta2) + phid1*Math.sin(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + 10*phid1*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(phi2) - 10*phid2*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2) + 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)*(crd + thetad1)) - 5*phid3*Math.sin(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 50*Math.cos(cr + theta1)*Math.sin(phi1)*(crd + thetad1) + 50*phid1*Math.sin(cr + theta1)*Math.cos(phi1) + 5*phid2*Math.cos(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 5*phid3*Math.cos(phi3)*(10*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) + 50*phid1*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(phi2) - 50*phid2*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2) + 50*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)*(crd + thetad1)) - 2*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))*(Math.sin(phi1)*Math.sin(theta2)*(41*Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - 41*Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - (Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1))*(41*phid2 + 41*phid1*Math.cos(theta2) + 41*crd*Math.sin(phi1)*Math.sin(theta2) + 41*thetad1*Math.sin(phi1)*Math.sin(theta2)) + (phid1*Math.cos(phi2)*Math.sin(phi1))/40 + (phid2*Math.cos(phi1)*Math.sin(phi2))/40 + (phid1*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2))/40 + (phid2*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1))/40 - (thetad2*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta2))/40) - ((61*Math.cos(cr))/100 + (117*Math.sin(cr))/25 - Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) - Math.cos(phi3)*(10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 10*Math.cos(cr + theta1)*Math.sin(phi1) + 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1))*(5*Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2)*(crd + thetad1) + 10*thetad2*Math.sin(cr + theta1)*Math.cos(theta2) + 10*phid1*Math.cos(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + 10*thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) - 5*Math.sin(phi3)*(10*Math.sin(theta3)*(thetad2*Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(theta2)*(crd + thetad1) - thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2) + phid1*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)*(crd + thetad1)) - 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2)*(crd + thetad1) + thetad2*Math.sin(cr + theta1)*Math.cos(theta2) + phid1*Math.cos(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) - phid2*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)*(crd + thetad1) + phid1*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(phi2) + phid2*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 10*thetad3*Math.sin(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)) - 10*thetad3*Math.cos(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) - (117*crd*Math.cos(cr))/5 + (61*crd*Math.sin(cr))/20 + 5*Math.cos(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2)*(crd + thetad1) + thetad2*Math.sin(cr + theta1)*Math.cos(theta2) + phid1*Math.cos(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + 10*phid2*Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*phid1*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(phi2) + 10*phid2*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)*(crd + thetad1)) + 50*Math.sin(cr + theta1)*Math.sin(phi1)*(crd + thetad1) - 50*phid1*Math.cos(cr + theta1)*Math.cos(phi1) + 5*phid2*Math.cos(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 5*phid3*Math.cos(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) - 5*phid3*Math.sin(phi3)*(10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) - 50*phid1*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(phi2) + 50*phid2*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2) + 50*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)*(crd + thetad1)) + 3*((61*Math.cos(cr))/100 + (117*Math.sin(cr))/25 + 10*Math.cos(cr + theta1)*Math.sin(phi1))*((117*crd*Math.cos(cr))/5 - (61*crd*Math.sin(cr))/20 - 50*Math.sin(cr + theta1)*Math.sin(phi1)*(crd + thetad1) + 50*phid1*Math.cos(cr + theta1)*Math.cos(phi1)) + 3*((61*Math.sin(cr))/100 - (117*Math.cos(cr))/25 + 10*Math.sin(cr + theta1)*Math.sin(phi1))*((61*crd*Math.cos(cr))/20 + (117*crd*Math.sin(cr))/5 + 50*Math.cos(cr + theta1)*Math.sin(phi1)*(crd + thetad1) + 50*phid1*Math.sin(cr + theta1)*Math.cos(phi1)) - 3*((61*Math.cos(cr))/100 + (117*Math.sin(cr))/25 - Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.cos(cr + theta1)*Math.sin(phi1) + 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1))*(5*Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2)*(crd + thetad1) + 10*thetad2*Math.sin(cr + theta1)*Math.cos(theta2) + 10*phid1*Math.cos(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + 10*thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) - (117*crd*Math.cos(cr))/5 + (61*crd*Math.sin(cr))/20 + 50*Math.sin(cr + theta1)*Math.sin(phi1)*(crd + thetad1) - 50*phid1*Math.cos(cr + theta1)*Math.cos(phi1) + 5*phid2*Math.cos(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 50*phid1*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(phi2) + 50*phid2*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2) + 50*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)*(crd + thetad1)) - (Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))*((Math.sin(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2))*(41*Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - 41*Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2))) - (Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3))*(41*Math.sin(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) + 41*Math.cos(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2))) + (phid1*Math.cos(phi2)*Math.sin(phi1))/40 + (phid2*Math.cos(phi1)*Math.sin(phi2))/40 + (phid1*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2))/40 + (phid2*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1))/40 - (thetad2*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta2))/40) - 2*(Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2) + Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3))*((Math.cos(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) + Math.sin(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))*(41*Math.cos(phi3)*(thetad3 + thetad2*Math.cos(phi2) + crd*Math.cos(phi1)*Math.cos(phi2) + thetad1*Math.cos(phi1)*Math.cos(phi2) + phid1*Math.sin(phi2)*Math.sin(theta2) - crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) - 41*Math.sin(phi3)*(Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2)))) + (Math.sin(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) - Math.cos(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))*((Math.cos(phi3)*(Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2))))/40 + (Math.sin(phi3)*(thetad3 + thetad2*Math.cos(phi2) + crd*Math.cos(phi1)*Math.cos(phi2) + thetad1*Math.cos(phi1)*Math.cos(phi2) + phid1*Math.sin(phi2)*Math.sin(theta2) - crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))/40) - 41*phid2*Math.cos(phi1)*Math.cos(phi2)*Math.sin(theta3) - 41*phid1*Math.cos(phi1)*Math.cos(theta3)*Math.sin(theta2) - 41*thetad3*Math.cos(phi1)*Math.cos(theta3)*Math.sin(phi2) - 41*thetad2*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi1) + 41*phid1*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta3) + 41*thetad3*Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3) - 41*phid1*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2)*Math.sin(theta3) - 41*thetad3*Math.cos(phi2)*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi1) + 41*phid2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta3) + 41*thetad2*Math.cos(phi2)*Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) + (1639*phid1*Math.cos(phi1)*Math.sin(phi1))/10 - Math.sin(phi1)*Math.sin(theta2)*(Math.cos(phi1)*((phid1*Math.sin(theta2))/40 - (Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))/40) - 41*phid1*Math.cos(phi1)*Math.sin(theta2) + Math.cos(theta2)*Math.sin(phi1)*(41*thetad2 + 41*crd*Math.cos(phi1) + 41*thetad1*Math.cos(phi1)) - 41*thetad2*Math.cos(theta2)*Math.sin(phi1)) - Math.cos(theta2)*Math.sin(phi1)*(Math.cos(phi1)*((phid1*Math.cos(theta2))/40 + (Math.sin(phi1)*Math.sin(theta2)*(crd + thetad1))/40) - 41*phid1*Math.cos(phi1)*Math.cos(theta2) - Math.sin(phi1)*Math.sin(theta2)*(41*thetad2 + 41*crd*Math.cos(phi1) + 41*thetad1*Math.cos(phi1)) + 41*thetad2*Math.sin(phi1)*Math.sin(theta2)) + 2*Math.sin(phi1)*Math.sin(theta2)*(((Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)))/40 - (Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1)))/40)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) - (41*Math.cos(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) + 41*Math.sin(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1)))*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + 41*phid1*Math.cos(phi1)*Math.sin(theta2) + 41*thetad2*Math.cos(theta2)*Math.sin(phi1))",
        "vars": [
          "cr",
          "crd",
          "phi1",
          "phi2",
          "phi3",
          "phid1",
          "phid2",
          "phid3",
          "theta1",
          "theta2",
          "theta3",
          "thetad1",
          "thetad2",
          "thetad3"
        ]
      },
      {
        "expr": "2*((117*Math.cos(cr))/25 - (61*Math.sin(cr))/100)*(10*crd*Math.cos(cr) - 5*cr*crd*Math.sin(cr)) + 2*((61*Math.cos(cr))/100 + (117*Math.sin(cr))/25)*(10*crd*Math.sin(cr) + 5*cr*crd*Math.cos(cr)) + ((117*Math.cos(cr))/25 - (61*Math.sin(cr))/100)*(33600*crd*Math.cos(cr) - 16800*cr*crd*Math.sin(cr)) + ((61*Math.cos(cr))/100 + (117*Math.sin(cr))/25)*(33600*crd*Math.sin(cr) + 16800*cr*crd*Math.cos(cr)) + (10*crd*Math.sin(cr) + 5*cr*crd*Math.cos(cr))*((61*Math.cos(cr))/100 + (117*Math.sin(cr))/25 - Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) - Math.cos(phi3)*(10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 10*Math.cos(cr + theta1)*Math.sin(phi1) + 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 3*(10*crd*Math.sin(cr) + 5*cr*crd*Math.cos(cr))*((61*Math.cos(cr))/100 + (117*Math.sin(cr))/25 - Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.cos(cr + theta1)*Math.sin(phi1) + 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 3*(10*crd*Math.sin(cr) + 5*cr*crd*Math.cos(cr))*((61*Math.cos(cr))/100 + (117*Math.sin(cr))/25 + 10*Math.cos(cr + theta1)*Math.sin(phi1)) - 3*(10*crd*Math.cos(cr) - 5*cr*crd*Math.sin(cr))*((61*Math.sin(cr))/100 - (117*Math.cos(cr))/25 + Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.sin(phi1) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) - (10*crd*Math.cos(cr) - 5*cr*crd*Math.sin(cr))*((61*Math.sin(cr))/100 - (117*Math.cos(cr))/25 + Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.sin(phi3)*(10*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) + Math.cos(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 10*Math.sin(cr + theta1)*Math.sin(phi1) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) - 3*(10*crd*Math.cos(cr) - 5*cr*crd*Math.sin(cr))*((61*Math.sin(cr))/100 - (117*Math.cos(cr))/25 + 10*Math.sin(cr + theta1)*Math.sin(phi1))",
        "vars": [
          "cr",
          "crd",
          "phi1",
          "phi2",
          "phi3",
          "theta1",
          "theta2",
          "theta3"
        ]
      },
      {
        "expr": "3*((61*Math.sin(cr))/100 - (117*Math.cos(cr))/25 + Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.sin(phi1) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1))*(50*Math.cos(cr + theta1)*Math.sin(phi1)*(crd + thetad1) - 5*Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2)*(crd + thetad1) - 10*thetad2*Math.cos(cr + theta1)*Math.cos(theta2) + 10*phid1*Math.sin(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + 10*thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + 50*phid1*Math.sin(cr + theta1)*Math.cos(phi1) + 5*phid2*Math.cos(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 50*phid1*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(phi2) - 50*phid2*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2) + 50*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)*(crd + thetad1)) + 2*(Math.cos(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) + Math.sin(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))*((41*Math.cos(phi3)*(thetad3 + thetad2*Math.cos(phi2) + crd*Math.cos(phi1)*Math.cos(phi2) + thetad1*Math.cos(phi1)*Math.cos(phi2) + phid1*Math.sin(phi2)*Math.sin(theta2) - crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) - 41*Math.sin(phi3)*(Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2))))*(Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2) + Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3)) + (Math.sin(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) - Math.cos(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))*(phid3/40 + (phid2*Math.cos(theta3))/40 + (phid1*Math.cos(theta2)*Math.cos(theta3))/40 + (thetad2*Math.sin(phi2)*Math.sin(theta3))/40 + (crd*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3))/40 + (crd*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2))/40 + (thetad1*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3))/40 - (phid1*Math.cos(phi2)*Math.sin(theta2)*Math.sin(theta3))/40 + (thetad1*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2))/40 + (crd*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3))/40 + (thetad1*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3))/40) - 41*Math.cos(phi3)*(Math.cos(theta3)*(phid1*Math.sin(phi1)*Math.sin(phi2) - phid2*Math.cos(phi1)*Math.cos(phi2) - phid1*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2) + phid2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) + thetad2*Math.cos(phi2)*Math.sin(phi1)*Math.sin(theta2)) + thetad3*Math.sin(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + phid1*Math.cos(phi1)*Math.sin(theta2)*Math.sin(theta3) + thetad2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3) + thetad3*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2)) - 41*Math.sin(phi3)*(phid1*Math.cos(phi2)*Math.sin(phi1) + phid2*Math.cos(phi1)*Math.sin(phi2) + phid1*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2) + phid2*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1) - thetad2*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta2)) + 41*phid3*Math.cos(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) - 41*phid3*Math.sin(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3))) + 2*(Math.sin(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) - Math.cos(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))*((41*Math.cos(phi3)*(Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2))) + 41*Math.sin(phi3)*(thetad3 + thetad2*Math.cos(phi2) + crd*Math.cos(phi1)*Math.cos(phi2) + thetad1*Math.cos(phi1)*Math.cos(phi2) + phid1*Math.sin(phi2)*Math.sin(theta2) - crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))*(Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2) + Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3)) - (Math.cos(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) + Math.sin(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))*(41*phid3 + 41*phid2*Math.cos(theta3) + 41*phid1*Math.cos(theta2)*Math.cos(theta3) + 41*thetad2*Math.sin(phi2)*Math.sin(theta3) + 41*crd*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3) + 41*crd*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2) + 41*thetad1*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3) - 41*phid1*Math.cos(phi2)*Math.sin(theta2)*Math.sin(theta3) + 41*thetad1*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2) + 41*crd*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3) + 41*thetad1*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3)) + (Math.cos(phi3)*(phid1*Math.cos(phi2)*Math.sin(phi1) + phid2*Math.cos(phi1)*Math.sin(phi2) + phid1*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2) + phid2*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1) - thetad2*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta2)))/40 - (Math.sin(phi3)*(Math.cos(theta3)*(phid1*Math.sin(phi1)*Math.sin(phi2) - phid2*Math.cos(phi1)*Math.cos(phi2) - phid1*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2) + phid2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) + thetad2*Math.cos(phi2)*Math.sin(phi1)*Math.sin(theta2)) + thetad3*Math.sin(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + phid1*Math.cos(phi1)*Math.sin(theta2)*Math.sin(theta3) + thetad2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3) + thetad3*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2)))/40 + (phid3*Math.sin(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))/40 + (phid3*Math.cos(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)))/40) + (Math.sin(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2))*((Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))*((Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))))/40 - (Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2)))/40) - (Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3))*(41*thetad3 + 41*thetad2*Math.cos(phi2) + 41*crd*Math.cos(phi1)*Math.cos(phi2) + 41*thetad1*Math.cos(phi1)*Math.cos(phi2) + 41*phid1*Math.sin(phi2)*Math.sin(theta2) - 41*crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 41*thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) - 41*Math.sin(theta3)*(phid1*Math.sin(phi1)*Math.sin(phi2) - phid2*Math.cos(phi1)*Math.cos(phi2) - phid1*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2) + phid2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) + thetad2*Math.cos(phi2)*Math.sin(phi1)*Math.sin(theta2)) + 41*thetad3*Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + 41*phid1*Math.cos(phi1)*Math.cos(theta3)*Math.sin(theta2) + 41*thetad2*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi1) - 41*thetad3*Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) + Math.cos(phi1)*(Math.cos(theta2)*Math.sin(phi1)*(41*phid1*Math.cos(theta2) + 41*Math.sin(phi1)*Math.sin(theta2)*(crd + thetad1)) - (phid1*Math.sin(phi1))/40 + Math.sin(phi1)*Math.sin(theta2)*(41*phid1*Math.sin(theta2) - 41*Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - (Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3))*((Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))*((Math.sin(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))))/40 + (Math.cos(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2)))/40) - (Math.sin(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2))*(41*thetad3 + 41*thetad2*Math.cos(phi2) + 41*crd*Math.cos(phi1)*Math.cos(phi2) + 41*thetad1*Math.cos(phi1)*Math.cos(phi2) + 41*phid1*Math.sin(phi2)*Math.sin(theta2) - 41*crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 41*thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) + 41*Math.cos(theta3)*(phid1*Math.sin(phi1)*Math.sin(phi2) - phid2*Math.cos(phi1)*Math.cos(phi2) - phid1*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2) + phid2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) + thetad2*Math.cos(phi2)*Math.sin(phi1)*Math.sin(theta2)) + 41*thetad3*Math.sin(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + 41*phid1*Math.cos(phi1)*Math.sin(theta2)*Math.sin(theta3) + 41*thetad2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3) + 41*thetad3*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2)) + ((61*Math.sin(cr))/100 - (117*Math.cos(cr))/25 + Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.sin(phi3)*(10*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) + Math.cos(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 10*Math.sin(cr + theta1)*Math.sin(phi1) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1))*(5*Math.cos(phi3)*(10*phid2*Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2)*(crd + thetad1) - thetad2*Math.cos(cr + theta1)*Math.cos(theta2) + phid1*Math.sin(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + 10*phid1*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(phi2) - 10*phid2*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2) + 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)*(crd + thetad1)) - 5*Math.sin(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2)*(crd + thetad1) + thetad2*Math.cos(cr + theta1)*Math.sin(theta2) + thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2) - phid1*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)*(crd + thetad1)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2)*(crd + thetad1) - thetad2*Math.cos(cr + theta1)*Math.cos(theta2) + phid1*Math.sin(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + phid2*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + phid1*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(phi2) + phid2*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)*(crd + thetad1)) + 10*thetad3*Math.sin(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)) - 10*thetad3*Math.cos(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) - 5*Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2)*(crd + thetad1) - 10*thetad2*Math.cos(cr + theta1)*Math.cos(theta2) + 10*phid1*Math.sin(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + 10*thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) - 5*phid3*Math.sin(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 50*Math.cos(cr + theta1)*Math.sin(phi1)*(crd + thetad1) + 50*phid1*Math.sin(cr + theta1)*Math.cos(phi1) + 5*phid2*Math.cos(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 5*phid3*Math.cos(phi3)*(10*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) + 50*phid1*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(phi2) - 50*phid2*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2) + 50*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)*(crd + thetad1)) - 2*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1))*((Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))*(phid2/40 + (phid1*Math.cos(theta2))/40 + (crd*Math.sin(phi1)*Math.sin(theta2))/40 + (thetad1*Math.sin(phi1)*Math.sin(theta2))/40) - 41*phid2*Math.cos(phi1)*Math.cos(phi2) - Math.sin(phi1)*Math.sin(theta2)*(41*Math.cos(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) + 41*Math.sin(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) + 41*phid1*Math.sin(phi1)*Math.sin(phi2) - 41*phid1*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2) + 41*phid2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) + 41*thetad2*Math.cos(phi2)*Math.sin(phi1)*Math.sin(theta2)) - ((61*Math.cos(cr))/100 + (117*Math.sin(cr))/25 - Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) - Math.cos(phi3)*(10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 10*Math.cos(cr + theta1)*Math.sin(phi1) + 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1))*(5*Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2)*(crd + thetad1) + 10*thetad2*Math.sin(cr + theta1)*Math.cos(theta2) + 10*phid1*Math.cos(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + 10*thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) - 5*Math.sin(phi3)*(10*Math.sin(theta3)*(thetad2*Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(theta2)*(crd + thetad1) - thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2) + phid1*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)*(crd + thetad1)) - 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2)*(crd + thetad1) + thetad2*Math.sin(cr + theta1)*Math.cos(theta2) + phid1*Math.cos(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) - phid2*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)*(crd + thetad1) + phid1*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(phi2) + phid2*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 10*thetad3*Math.sin(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)) - 10*thetad3*Math.cos(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) + 5*Math.cos(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2)*(crd + thetad1) + thetad2*Math.sin(cr + theta1)*Math.cos(theta2) + phid1*Math.cos(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + 10*phid2*Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*phid1*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(phi2) + 10*phid2*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)*(crd + thetad1)) + 50*Math.sin(cr + theta1)*Math.sin(phi1)*(crd + thetad1) - 50*phid1*Math.cos(cr + theta1)*Math.cos(phi1) + 5*phid2*Math.cos(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 5*phid3*Math.cos(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) - 5*phid3*Math.sin(phi3)*(10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) - 50*phid1*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(phi2) + 50*phid2*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2) + 50*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)*(crd + thetad1)) - 2*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))*(Math.sin(phi1)*Math.sin(theta2)*(41*Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - 41*Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - (Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1))*(41*phid2 + 41*phid1*Math.cos(theta2) + 41*crd*Math.sin(phi1)*Math.sin(theta2) + 41*thetad1*Math.sin(phi1)*Math.sin(theta2)) + (phid1*Math.cos(phi2)*Math.sin(phi1))/40 + (phid2*Math.cos(phi1)*Math.sin(phi2))/40 + (phid1*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2))/40 + (phid2*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1))/40 - (thetad2*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta2))/40) - 3*(50*Math.sin(cr + theta1)*Math.sin(phi1)*(crd + thetad1) - 50*phid1*Math.cos(cr + theta1)*Math.cos(phi1))*((61*Math.cos(cr))/100 + (117*Math.sin(cr))/25 + 10*Math.cos(cr + theta1)*Math.sin(phi1)) + 3*(50*Math.cos(cr + theta1)*Math.sin(phi1)*(crd + thetad1) + 50*phid1*Math.sin(cr + theta1)*Math.cos(phi1))*((61*Math.sin(cr))/100 - (117*Math.cos(cr))/25 + 10*Math.sin(cr + theta1)*Math.sin(phi1)) - 3*((61*Math.cos(cr))/100 + (117*Math.sin(cr))/25 - Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.cos(cr + theta1)*Math.sin(phi1) + 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1))*(5*Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2)*(crd + thetad1) + 10*thetad2*Math.sin(cr + theta1)*Math.cos(theta2) + 10*phid1*Math.cos(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + 10*thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + 50*Math.sin(cr + theta1)*Math.sin(phi1)*(crd + thetad1) - 50*phid1*Math.cos(cr + theta1)*Math.cos(phi1) + 5*phid2*Math.cos(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 50*phid1*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(phi2) + 50*phid2*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2) + 50*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)*(crd + thetad1)) - (Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))*((Math.sin(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2))*(41*Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - 41*Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2))) - (Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3))*(41*Math.sin(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) + 41*Math.cos(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2))) + (phid1*Math.cos(phi2)*Math.sin(phi1))/40 + (phid2*Math.cos(phi1)*Math.sin(phi2))/40 + (phid1*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2))/40 + (phid2*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1))/40 - (thetad2*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta2))/40) - 2*(Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2) + Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3))*((Math.cos(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) + Math.sin(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))*(41*Math.cos(phi3)*(thetad3 + thetad2*Math.cos(phi2) + crd*Math.cos(phi1)*Math.cos(phi2) + thetad1*Math.cos(phi1)*Math.cos(phi2) + phid1*Math.sin(phi2)*Math.sin(theta2) - crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) - 41*Math.sin(phi3)*(Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2)))) + (Math.sin(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) - Math.cos(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))*((Math.cos(phi3)*(Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2))))/40 + (Math.sin(phi3)*(thetad3 + thetad2*Math.cos(phi2) + crd*Math.cos(phi1)*Math.cos(phi2) + thetad1*Math.cos(phi1)*Math.cos(phi2) + phid1*Math.sin(phi2)*Math.sin(theta2) - crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))/40) - 41*phid2*Math.cos(phi1)*Math.cos(phi2)*Math.sin(theta3) - 41*phid1*Math.cos(phi1)*Math.cos(theta3)*Math.sin(theta2) - 41*thetad3*Math.cos(phi1)*Math.cos(theta3)*Math.sin(phi2) - 41*thetad2*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi1) + 41*phid1*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta3) + 41*thetad3*Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3) - 41*phid1*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2)*Math.sin(theta3) - 41*thetad3*Math.cos(phi2)*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi1) + 41*phid2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta3) + 41*thetad2*Math.cos(phi2)*Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) + (1639*phid1*Math.cos(phi1)*Math.sin(phi1))/10 - Math.sin(phi1)*Math.sin(theta2)*(Math.cos(phi1)*((phid1*Math.sin(theta2))/40 - (Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))/40) - 41*phid1*Math.cos(phi1)*Math.sin(theta2) + Math.cos(theta2)*Math.sin(phi1)*(41*thetad2 + 41*crd*Math.cos(phi1) + 41*thetad1*Math.cos(phi1)) - 41*thetad2*Math.cos(theta2)*Math.sin(phi1)) - Math.cos(theta2)*Math.sin(phi1)*(Math.cos(phi1)*((phid1*Math.cos(theta2))/40 + (Math.sin(phi1)*Math.sin(theta2)*(crd + thetad1))/40) - 41*phid1*Math.cos(phi1)*Math.cos(theta2) - Math.sin(phi1)*Math.sin(theta2)*(41*thetad2 + 41*crd*Math.cos(phi1) + 41*thetad1*Math.cos(phi1)) + 41*thetad2*Math.sin(phi1)*Math.sin(theta2)) + 2*Math.sin(phi1)*Math.sin(theta2)*(((Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)))/40 - (Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1)))/40)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) - (41*Math.cos(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) + 41*Math.sin(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1)))*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + 41*phid1*Math.cos(phi1)*Math.sin(theta2) + 41*thetad2*Math.cos(theta2)*Math.sin(phi1))",
        "vars": [
          "cr",
          "crd",
          "phi1",
          "phi2",
          "phi3",
          "phid1",
          "phid2",
          "phid3",
          "theta1",
          "theta2",
          "theta3",
          "thetad1",
          "thetad2",
          "thetad3"
        ]
      },
      {
        "expr": "(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3))*((Math.cos(theta2)*Math.cos(theta3) - Math.cos(phi2)*Math.sin(theta2)*Math.sin(theta3))*(41*thetad3 + 41*thetad2*Math.cos(phi2) + 41*crd*Math.cos(phi1)*Math.cos(phi2) + 41*thetad1*Math.cos(phi1)*Math.cos(phi2) + 41*phid1*Math.sin(phi2)*Math.sin(theta2) - 41*crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 41*thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) - Math.sin(phi2)*Math.sin(theta2)*((Math.sin(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))))/40 + (Math.cos(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2)))/40) - 41*thetad3*Math.cos(theta2)*Math.cos(theta3) + 41*thetad2*Math.sin(theta2)*Math.sin(theta3) - 41*thetad2*Math.cos(phi2)*Math.cos(theta2)*Math.cos(theta3) + 41*phid2*Math.cos(theta3)*Math.sin(phi2)*Math.sin(theta2) + 41*thetad3*Math.cos(phi2)*Math.sin(theta2)*Math.sin(theta3)) - (Math.sin(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2))*(41*thetad2*Math.cos(theta3)*Math.sin(theta2) - Math.sin(phi2)*Math.sin(theta2)*((Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))))/40 - (Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2)))/40) - (Math.cos(theta2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta3)*Math.sin(theta2))*(41*thetad3 + 41*thetad2*Math.cos(phi2) + 41*crd*Math.cos(phi1)*Math.cos(phi2) + 41*thetad1*Math.cos(phi1)*Math.cos(phi2) + 41*phid1*Math.sin(phi2)*Math.sin(theta2) - 41*crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 41*thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) + 41*thetad3*Math.cos(theta2)*Math.sin(theta3) + 41*thetad2*Math.cos(phi2)*Math.cos(theta2)*Math.sin(theta3) + 41*thetad3*Math.cos(phi2)*Math.cos(theta3)*Math.sin(theta2) - 41*phid2*Math.sin(phi2)*Math.sin(theta2)*Math.sin(theta3)) - 2*(Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2) + Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3))*(41*thetad2*Math.cos(theta3)*Math.sin(theta2) - (Math.cos(phi3)*(Math.cos(theta2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta3)*Math.sin(theta2)) - Math.sin(phi2)*Math.sin(phi3)*Math.sin(theta2))*(41*Math.cos(phi3)*(thetad3 + thetad2*Math.cos(phi2) + crd*Math.cos(phi1)*Math.cos(phi2) + thetad1*Math.cos(phi1)*Math.cos(phi2) + phid1*Math.sin(phi2)*Math.sin(theta2) - crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) - 41*Math.sin(phi3)*(Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2)))) - (Math.sin(phi3)*(Math.cos(theta2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta3)*Math.sin(theta2)) + Math.cos(phi3)*Math.sin(phi2)*Math.sin(theta2))*((Math.cos(phi3)*(Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2))))/40 + (Math.sin(phi3)*(thetad3 + thetad2*Math.cos(phi2) + crd*Math.cos(phi1)*Math.cos(phi2) + thetad1*Math.cos(phi1)*Math.cos(phi2) + phid1*Math.sin(phi2)*Math.sin(theta2) - crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))/40) + 41*thetad3*Math.cos(theta2)*Math.sin(theta3) + 41*thetad2*Math.cos(phi2)*Math.cos(theta2)*Math.sin(theta3) + 41*thetad3*Math.cos(phi2)*Math.cos(theta3)*Math.sin(theta2) - 41*phid2*Math.sin(phi2)*Math.sin(theta2)*Math.sin(theta3)) - 3*(5*Math.sin(cr + theta1)*(10*phid1*Math.sin(phi1) + 10*phid1*Math.cos(phi2)*Math.sin(phi1) + 10*phid2*Math.cos(phi1)*Math.sin(phi2) + 10*phid1*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2) + 10*phid2*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1) - 10*thetad2*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta2)) - 5*Math.cos(cr + theta1)*(crd + thetad1)*(10*Math.cos(phi1) + 10*Math.cos(phi1)*Math.cos(phi2) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))*((61*Math.cos(cr))/100 + (117*Math.sin(cr))/25 - Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.cos(cr + theta1)*Math.sin(phi1) + 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) - (Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))*((Math.cos(theta2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta3)*Math.sin(theta2))*(41*Math.sin(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) + 41*Math.cos(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2))) + (Math.cos(theta2)*Math.cos(theta3) - Math.cos(phi2)*Math.sin(theta2)*Math.sin(theta3))*(41*Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - 41*Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2))) - (phid2*Math.cos(phi2)*Math.sin(theta2))/40 - (thetad2*Math.cos(theta2)*Math.sin(phi2))/40) + 3*(5*Math.cos(cr + theta1)*(10*phid1*Math.sin(phi1) + 10*phid1*Math.cos(phi2)*Math.sin(phi1) + 10*phid2*Math.cos(phi1)*Math.sin(phi2) + 10*phid1*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2) + 10*phid2*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1) - 10*thetad2*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta2)) + 5*Math.sin(cr + theta1)*(crd + thetad1)*(10*Math.cos(phi1) + 10*Math.cos(phi1)*Math.cos(phi2) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))*((61*Math.sin(cr))/100 - (117*Math.cos(cr))/25 + Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.sin(phi1) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) - (5*Math.sin(cr + theta1)*(10*phid1*Math.sin(phi1) + 10*phid1*Math.cos(phi2)*Math.sin(phi1) + 10*phid2*Math.cos(phi1)*Math.sin(phi2) + 10*phid1*Math.cos(phi2)*Math.cos(phi3)*Math.sin(phi1) + 10*phid2*Math.cos(phi1)*Math.cos(phi3)*Math.sin(phi2) + 10*phid3*Math.cos(phi1)*Math.cos(phi2)*Math.sin(phi3) + 10*phid1*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2) + 10*phid2*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1) - 10*thetad2*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta2) + 10*phid1*Math.cos(phi1)*Math.cos(phi3)*Math.cos(theta2)*Math.sin(phi2) + 10*phid2*Math.cos(phi2)*Math.cos(phi3)*Math.cos(theta2)*Math.sin(phi1) + 10*phid2*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta3)*Math.sin(phi3) + 10*phid3*Math.cos(phi1)*Math.cos(phi3)*Math.cos(theta3)*Math.sin(phi2) - 10*phid1*Math.cos(theta3)*Math.sin(phi1)*Math.sin(phi2)*Math.sin(phi3) - 10*phid3*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)*Math.sin(phi3) - 10*phid1*Math.cos(phi1)*Math.sin(phi3)*Math.sin(theta2)*Math.sin(theta3) - 10*thetad2*Math.cos(phi3)*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta2) - 10*phid3*Math.cos(phi3)*Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3) - 10*thetad3*Math.cos(phi1)*Math.sin(phi2)*Math.sin(phi3)*Math.sin(theta3) - 10*thetad2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi3)*Math.sin(theta3) - 10*thetad3*Math.cos(theta3)*Math.sin(phi1)*Math.sin(phi3)*Math.sin(theta2) + 10*phid1*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi3) + 10*phid3*Math.cos(phi2)*Math.cos(phi3)*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi1) - 10*phid2*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi1)*Math.sin(phi2)*Math.sin(phi3) - 10*thetad2*Math.cos(phi2)*Math.cos(theta3)*Math.sin(phi1)*Math.sin(phi3)*Math.sin(theta2) - 10*thetad3*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi3)*Math.sin(theta3)) - 5*Math.cos(cr + theta1)*(crd + thetad1)*(10*Math.cos(phi1) + 10*Math.cos(phi1)*Math.cos(phi2) + 10*Math.cos(phi1)*Math.cos(phi2)*Math.cos(phi3) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 10*Math.cos(phi3)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 10*Math.cos(phi1)*Math.cos(theta3)*Math.sin(phi2)*Math.sin(phi3) + 10*Math.sin(phi1)*Math.sin(phi3)*Math.sin(theta2)*Math.sin(theta3) - 10*Math.cos(phi2)*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi1)*Math.sin(phi3)))*((61*Math.cos(cr))/100 + (117*Math.sin(cr))/25 - Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) - Math.cos(phi3)*(10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 10*Math.cos(cr + theta1)*Math.sin(phi1) + 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 3*(50*Math.cos(cr + theta1)*Math.cos(phi1)*(crd + thetad1) - 50*phid1*Math.sin(cr + theta1)*Math.sin(phi1))*((61*Math.cos(cr))/100 + (117*Math.sin(cr))/25 + 10*Math.cos(cr + theta1)*Math.sin(phi1)) + 3*(50*Math.sin(cr + theta1)*Math.cos(phi1)*(crd + thetad1) + 50*phid1*Math.cos(cr + theta1)*Math.sin(phi1))*((61*Math.sin(cr))/100 - (117*Math.cos(cr))/25 + 10*Math.sin(cr + theta1)*Math.sin(phi1)) + 2*(Math.sin(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) - Math.cos(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))*((Math.sin(phi3)*(thetad2*Math.sin(theta2)*Math.sin(theta3) - thetad3*Math.cos(theta2)*Math.cos(theta3) - thetad2*Math.cos(phi2)*Math.cos(theta2)*Math.cos(theta3) + phid2*Math.cos(theta3)*Math.sin(phi2)*Math.sin(theta2) + thetad3*Math.cos(phi2)*Math.sin(theta2)*Math.sin(theta3)))/40 + (Math.cos(phi3)*(Math.cos(theta2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta3)*Math.sin(theta2)) - Math.sin(phi2)*Math.sin(phi3)*Math.sin(theta2))*(41*phid3 + 41*phid2*Math.cos(theta3) + 41*phid1*Math.cos(theta2)*Math.cos(theta3) + 41*thetad2*Math.sin(phi2)*Math.sin(theta3) + 41*crd*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3) + 41*crd*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2) + 41*thetad1*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3) - 41*phid1*Math.cos(phi2)*Math.sin(theta2)*Math.sin(theta3) + 41*thetad1*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2) + 41*crd*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3) + 41*thetad1*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3)) + (Math.cos(theta2)*Math.cos(theta3) - Math.cos(phi2)*Math.sin(theta2)*Math.sin(theta3))*(41*Math.cos(phi3)*(Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2))) + 41*Math.sin(phi3)*(thetad3 + thetad2*Math.cos(phi2) + crd*Math.cos(phi1)*Math.cos(phi2) + thetad1*Math.cos(phi1)*Math.cos(phi2) + phid1*Math.sin(phi2)*Math.sin(theta2) - crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))) - (phid3*Math.cos(phi3)*(Math.cos(theta2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta3)*Math.sin(theta2)))/40 - (phid2*Math.cos(phi2)*Math.cos(phi3)*Math.sin(theta2))/40 - (thetad2*Math.cos(phi3)*Math.cos(theta2)*Math.sin(phi2))/40 + (phid3*Math.sin(phi2)*Math.sin(phi3)*Math.sin(theta2))/40) + 2*(Math.cos(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) + Math.sin(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))*((Math.cos(theta2)*Math.cos(theta3) - Math.cos(phi2)*Math.sin(theta2)*Math.sin(theta3))*(41*Math.cos(phi3)*(thetad3 + thetad2*Math.cos(phi2) + crd*Math.cos(phi1)*Math.cos(phi2) + thetad1*Math.cos(phi1)*Math.cos(phi2) + phid1*Math.sin(phi2)*Math.sin(theta2) - crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) - 41*Math.sin(phi3)*(Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2)))) - (Math.sin(phi3)*(Math.cos(theta2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta3)*Math.sin(theta2)) + Math.cos(phi3)*Math.sin(phi2)*Math.sin(theta2))*(phid3/40 + (phid2*Math.cos(theta3))/40 + (phid1*Math.cos(theta2)*Math.cos(theta3))/40 + (thetad2*Math.sin(phi2)*Math.sin(theta3))/40 + (crd*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3))/40 + (crd*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2))/40 + (thetad1*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3))/40 - (phid1*Math.cos(phi2)*Math.sin(theta2)*Math.sin(theta3))/40 + (thetad1*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2))/40 + (crd*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3))/40 + (thetad1*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3))/40) + 41*Math.cos(phi3)*(thetad2*Math.sin(theta2)*Math.sin(theta3) - thetad3*Math.cos(theta2)*Math.cos(theta3) - thetad2*Math.cos(phi2)*Math.cos(theta2)*Math.cos(theta3) + phid2*Math.cos(theta3)*Math.sin(phi2)*Math.sin(theta2) + thetad3*Math.cos(phi2)*Math.sin(theta2)*Math.sin(theta3)) + 41*phid3*Math.sin(phi3)*(Math.cos(theta2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta3)*Math.sin(theta2)) + 41*phid2*Math.cos(phi2)*Math.sin(phi3)*Math.sin(theta2) + 41*phid3*Math.cos(phi3)*Math.sin(phi2)*Math.sin(theta2) + 41*thetad2*Math.cos(theta2)*Math.sin(phi2)*Math.sin(phi3)) + Math.cos(phi1)*(Math.cos(theta2)*(41*phid1*Math.sin(theta2) - 41*Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1)) - Math.sin(theta2)*(41*phid1*Math.cos(theta2) + 41*Math.sin(phi1)*Math.sin(theta2)*(crd + thetad1))) - 2*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))*(Math.cos(theta2)*(41*Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - 41*Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) + Math.cos(phi2)*Math.sin(theta2)*(41*phid2 + 41*phid1*Math.cos(theta2) + 41*crd*Math.sin(phi1)*Math.sin(theta2) + 41*thetad1*Math.sin(phi1)*Math.sin(theta2)) - (phid2*Math.cos(phi2)*Math.sin(theta2))/40 - (thetad2*Math.cos(theta2)*Math.sin(phi2))/40) + 2*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1))*(Math.cos(theta2)*(41*Math.cos(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) + 41*Math.sin(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - Math.sin(phi2)*Math.sin(theta2)*(phid2/40 + (phid1*Math.cos(theta2))/40 + (crd*Math.sin(phi1)*Math.sin(theta2))/40 + (thetad1*Math.sin(phi1)*Math.sin(theta2))/40) - 41*thetad2*Math.cos(phi2)*Math.cos(theta2) + 41*phid2*Math.sin(phi2)*Math.sin(theta2)) + (5*Math.cos(cr + theta1)*(10*phid1*Math.sin(phi1) + 10*phid1*Math.cos(phi2)*Math.sin(phi1) + 10*phid2*Math.cos(phi1)*Math.sin(phi2) + 10*phid1*Math.cos(phi2)*Math.cos(phi3)*Math.sin(phi1) + 10*phid2*Math.cos(phi1)*Math.cos(phi3)*Math.sin(phi2) + 10*phid3*Math.cos(phi1)*Math.cos(phi2)*Math.sin(phi3) + 10*phid1*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2) + 10*phid2*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1) - 10*thetad2*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta2) + 10*phid1*Math.cos(phi1)*Math.cos(phi3)*Math.cos(theta2)*Math.sin(phi2) + 10*phid2*Math.cos(phi2)*Math.cos(phi3)*Math.cos(theta2)*Math.sin(phi1) + 10*phid2*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta3)*Math.sin(phi3) + 10*phid3*Math.cos(phi1)*Math.cos(phi3)*Math.cos(theta3)*Math.sin(phi2) - 10*phid1*Math.cos(theta3)*Math.sin(phi1)*Math.sin(phi2)*Math.sin(phi3) - 10*phid3*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)*Math.sin(phi3) - 10*phid1*Math.cos(phi1)*Math.sin(phi3)*Math.sin(theta2)*Math.sin(theta3) - 10*thetad2*Math.cos(phi3)*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta2) - 10*phid3*Math.cos(phi3)*Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3) - 10*thetad3*Math.cos(phi1)*Math.sin(phi2)*Math.sin(phi3)*Math.sin(theta3) - 10*thetad2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi3)*Math.sin(theta3) - 10*thetad3*Math.cos(theta3)*Math.sin(phi1)*Math.sin(phi3)*Math.sin(theta2) + 10*phid1*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi3) + 10*phid3*Math.cos(phi2)*Math.cos(phi3)*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi1) - 10*phid2*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi1)*Math.sin(phi2)*Math.sin(phi3) - 10*thetad2*Math.cos(phi2)*Math.cos(theta3)*Math.sin(phi1)*Math.sin(phi3)*Math.sin(theta2) - 10*thetad3*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi3)*Math.sin(theta3)) + 5*Math.sin(cr + theta1)*(crd + thetad1)*(10*Math.cos(phi1) + 10*Math.cos(phi1)*Math.cos(phi2) + 10*Math.cos(phi1)*Math.cos(phi2)*Math.cos(phi3) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 10*Math.cos(phi3)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 10*Math.cos(phi1)*Math.cos(theta3)*Math.sin(phi2)*Math.sin(phi3) + 10*Math.sin(phi1)*Math.sin(phi3)*Math.sin(theta2)*Math.sin(theta3) - 10*Math.cos(phi2)*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi1)*Math.sin(phi3)))*((61*Math.sin(cr))/100 - (117*Math.cos(cr))/25 + Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.sin(phi3)*(10*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) + Math.cos(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 10*Math.sin(cr + theta1)*Math.sin(phi1) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 2*Math.sin(phi1)*Math.sin(theta2)*(Math.cos(phi2)*Math.sin(theta2)*(41*Math.cos(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) + 41*Math.sin(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - 41*thetad2*Math.sin(theta2) + Math.sin(phi2)*Math.sin(theta2)*((Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)))/40 - (Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1)))/40)) + Math.cos(theta2)*Math.sin(phi1)*(Math.cos(theta2)*(41*thetad2 + 41*crd*Math.cos(phi1) + 41*thetad1*Math.cos(phi1)) - 41*thetad2*Math.cos(theta2)) + Math.sin(phi1)*Math.sin(theta2)*(Math.sin(theta2)*(41*thetad2 + 41*crd*Math.cos(phi1) + 41*thetad1*Math.cos(phi1)) - 41*thetad2*Math.sin(theta2))",
        "vars": [
          "cr",
          "crd",
          "phi1",
          "phi2",
          "phi3",
          "phid1",
          "phid2",
          "phid3",
          "theta1",
          "theta2",
          "theta3",
          "thetad1",
          "thetad2",
          "thetad3"
        ]
      },
      {
        "expr": "2*(Math.sin(phi2)*(41*phid2 + 41*phid1*Math.cos(theta2) + 41*crd*Math.sin(phi1)*Math.sin(theta2) + 41*thetad1*Math.sin(phi1)*Math.sin(theta2)) - (phid2*Math.sin(phi2))/40)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) - 2*(Math.cos(phi2)*(phid2/40 + (phid1*Math.cos(theta2))/40 + (crd*Math.sin(phi1)*Math.sin(theta2))/40 + (thetad1*Math.sin(phi1)*Math.sin(theta2))/40) - 41*phid2*Math.cos(phi2))*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + (Math.sin(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2))*(Math.cos(phi2)*((Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))))/40 - (Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2)))/40) - Math.cos(theta3)*Math.sin(phi2)*(41*thetad3 + 41*thetad2*Math.cos(phi2) + 41*crd*Math.cos(phi1)*Math.cos(phi2) + 41*thetad1*Math.cos(phi1)*Math.cos(phi2) + 41*phid1*Math.sin(phi2)*Math.sin(theta2) - 41*crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 41*thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) + 41*phid2*Math.cos(phi2)*Math.sin(theta3) + 41*thetad3*Math.cos(theta3)*Math.sin(phi2)) - (Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3))*(Math.cos(phi2)*((Math.sin(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))))/40 + (Math.cos(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2)))/40) - Math.sin(phi2)*Math.sin(theta3)*(41*thetad3 + 41*thetad2*Math.cos(phi2) + 41*crd*Math.cos(phi1)*Math.cos(phi2) + 41*thetad1*Math.cos(phi1)*Math.cos(phi2) + 41*phid1*Math.sin(phi2)*Math.sin(theta2) - 41*crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 41*thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) - 41*phid2*Math.cos(phi2)*Math.cos(theta3) + 41*thetad3*Math.sin(phi2)*Math.sin(theta3)) - 3*(5*Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.cos(theta2)*(crd + thetad1) + 10*thetad2*Math.cos(cr + theta1)*Math.sin(theta2) + 10*thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2) - 10*phid1*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(theta2) + 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)*(crd + thetad1)) - 5*phid2*Math.cos(phi2)*(10*Math.cos(cr + theta1)*Math.cos(theta2) - 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)))*((61*Math.cos(cr))/100 + (117*Math.sin(cr))/25 - Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.cos(cr + theta1)*Math.sin(phi1) + 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) - 2*(Math.cos(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) + Math.sin(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))*((Math.cos(phi2)*Math.cos(phi3) - Math.cos(theta3)*Math.sin(phi2)*Math.sin(phi3))*(phid3/40 + (phid2*Math.cos(theta3))/40 + (phid1*Math.cos(theta2)*Math.cos(theta3))/40 + (thetad2*Math.sin(phi2)*Math.sin(theta3))/40 + (crd*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3))/40 + (crd*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2))/40 + (thetad1*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3))/40 - (phid1*Math.cos(phi2)*Math.sin(theta2)*Math.sin(theta3))/40 + (thetad1*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2))/40 + (crd*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3))/40 + (thetad1*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3))/40) - 41*phid3*Math.cos(phi2)*Math.cos(phi3) + 41*phid2*Math.sin(phi2)*Math.sin(phi3) - Math.sin(phi2)*Math.sin(theta3)*(41*Math.cos(phi3)*(thetad3 + thetad2*Math.cos(phi2) + crd*Math.cos(phi1)*Math.cos(phi2) + thetad1*Math.cos(phi1)*Math.cos(phi2) + phid1*Math.sin(phi2)*Math.sin(theta2) - crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) - 41*Math.sin(phi3)*(Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2)))) - 41*phid2*Math.cos(phi2)*Math.cos(phi3)*Math.cos(theta3) + 41*phid3*Math.cos(theta3)*Math.sin(phi2)*Math.sin(phi3) + 41*thetad3*Math.cos(phi3)*Math.sin(phi2)*Math.sin(theta3)) - 3*(5*Math.sin(phi2)*(10*thetad2*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(theta2)*(crd + thetad1) - 10*thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2) + 10*phid1*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)*(crd + thetad1)) - 5*phid2*Math.cos(phi2)*(10*Math.sin(cr + theta1)*Math.cos(theta2) + 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)))*((61*Math.sin(cr))/100 - (117*Math.cos(cr))/25 + Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.sin(phi1) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 2*(Math.sin(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) - Math.cos(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))*((phid2*Math.cos(phi3)*Math.sin(phi2))/40 - (Math.cos(phi2)*Math.sin(phi3) + Math.cos(phi3)*Math.cos(theta3)*Math.sin(phi2))*(41*phid3 + 41*phid2*Math.cos(theta3) + 41*phid1*Math.cos(theta2)*Math.cos(theta3) + 41*thetad2*Math.sin(phi2)*Math.sin(theta3) + 41*crd*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3) + 41*crd*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2) + 41*thetad1*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3) - 41*phid1*Math.cos(phi2)*Math.sin(theta2)*Math.sin(theta3) + 41*thetad1*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2) + 41*crd*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3) + 41*thetad1*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3)) + (phid3*Math.cos(phi2)*Math.sin(phi3))/40 + Math.sin(phi2)*Math.sin(theta3)*(41*Math.cos(phi3)*(Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2))) + 41*Math.sin(phi3)*(thetad3 + thetad2*Math.cos(phi2) + crd*Math.cos(phi1)*Math.cos(phi2) + thetad1*Math.cos(phi1)*Math.cos(phi2) + phid1*Math.sin(phi2)*Math.sin(theta2) - crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))) + (phid2*Math.cos(phi2)*Math.cos(theta3)*Math.sin(phi3))/40 + (phid3*Math.cos(phi3)*Math.cos(theta3)*Math.sin(phi2))/40 - (thetad3*Math.sin(phi2)*Math.sin(phi3)*Math.sin(theta3))/40) + 2*(Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2) + Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3))*((Math.cos(phi2)*Math.cos(phi3) - Math.cos(theta3)*Math.sin(phi2)*Math.sin(phi3))*((Math.cos(phi3)*(Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2))))/40 + (Math.sin(phi3)*(thetad3 + thetad2*Math.cos(phi2) + crd*Math.cos(phi1)*Math.cos(phi2) + thetad1*Math.cos(phi1)*Math.cos(phi2) + phid1*Math.sin(phi2)*Math.sin(theta2) - crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))/40) - (Math.cos(phi2)*Math.sin(phi3) + Math.cos(phi3)*Math.cos(theta3)*Math.sin(phi2))*(41*Math.cos(phi3)*(thetad3 + thetad2*Math.cos(phi2) + crd*Math.cos(phi1)*Math.cos(phi2) + thetad1*Math.cos(phi1)*Math.cos(phi2) + phid1*Math.sin(phi2)*Math.sin(theta2) - crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) - 41*Math.sin(phi3)*(Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2)))) + 41*phid2*Math.cos(phi2)*Math.sin(theta3) + 41*thetad3*Math.cos(theta3)*Math.sin(phi2)) - (5*Math.sin(phi2)*(10*thetad2*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(theta2)*(crd + thetad1) - 10*thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2) + 10*phid1*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)*(crd + thetad1)) + 5*Math.sin(phi3)*(10*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.sin(theta2)*(crd + thetad1) + thetad2*Math.sin(cr + theta1)*Math.cos(theta2) + phid1*Math.cos(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + 10*Math.cos(phi2)*Math.cos(theta3)*(thetad2*Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(theta2)*(crd + thetad1) - thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2) + phid1*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)*(crd + thetad1)) + 10*thetad3*Math.cos(theta3)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*phid2*Math.cos(theta3)*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*thetad3*Math.cos(phi2)*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) + 5*Math.cos(phi3)*Math.sin(phi2)*(10*thetad2*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(theta2)*(crd + thetad1) - 10*thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2) + 10*phid1*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)*(crd + thetad1)) + 5*phid3*Math.cos(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(phi2)*Math.cos(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) - 5*phid2*Math.cos(phi2)*(10*Math.sin(cr + theta1)*Math.cos(theta2) + 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) - 5*phid2*Math.cos(phi2)*Math.cos(phi3)*(10*Math.sin(cr + theta1)*Math.cos(theta2) + 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 5*phid3*Math.sin(phi2)*Math.sin(phi3)*(10*Math.sin(cr + theta1)*Math.cos(theta2) + 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)))*((61*Math.sin(cr))/100 - (117*Math.cos(cr))/25 + Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.sin(phi3)*(10*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) + Math.cos(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 10*Math.sin(cr + theta1)*Math.sin(phi1) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) - ((61*Math.cos(cr))/100 + (117*Math.sin(cr))/25 - Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) - Math.cos(phi3)*(10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 10*Math.cos(cr + theta1)*Math.sin(phi1) + 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1))*(5*Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.cos(theta2)*(crd + thetad1) + 10*thetad2*Math.cos(cr + theta1)*Math.sin(theta2) + 10*thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2) - 10*phid1*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(theta2) + 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)*(crd + thetad1)) + 5*Math.sin(phi3)*(10*Math.cos(phi2)*Math.cos(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2)*(crd + thetad1) + thetad2*Math.cos(cr + theta1)*Math.sin(theta2) + thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2) - phid1*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)*(crd + thetad1)) - 10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.sin(theta2)*(crd + thetad1) - thetad2*Math.cos(cr + theta1)*Math.cos(theta2) + phid1*Math.sin(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + 10*thetad3*Math.cos(theta3)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*phid2*Math.cos(theta3)*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*thetad3*Math.cos(phi2)*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) + 5*Math.cos(phi3)*Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.cos(theta2)*(crd + thetad1) + 10*thetad2*Math.cos(cr + theta1)*Math.sin(theta2) + 10*thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2) - 10*phid1*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(theta2) + 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)*(crd + thetad1)) + 5*phid3*Math.cos(phi3)*(10*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(phi2)*Math.cos(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) - 5*phid2*Math.cos(phi2)*(10*Math.cos(cr + theta1)*Math.cos(theta2) - 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) - 5*phid2*Math.cos(phi2)*Math.cos(phi3)*(10*Math.cos(cr + theta1)*Math.cos(theta2) - 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 5*phid3*Math.sin(phi2)*Math.sin(phi3)*(10*Math.cos(cr + theta1)*Math.cos(theta2) - 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) - (Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))*((phid2*Math.sin(phi2))/40 + Math.sin(phi2)*Math.sin(theta3)*(41*Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - 41*Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2))) - Math.cos(theta3)*Math.sin(phi2)*(41*Math.sin(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) + 41*Math.cos(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2)))) - Math.cos(theta2)*Math.sin(phi1)*((phid1*Math.cos(theta2))/40 + (Math.sin(phi1)*Math.sin(theta2)*(crd + thetad1))/40) - Math.sin(phi1)*Math.sin(theta2)*((phid1*Math.sin(theta2))/40 - (Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))/40) + 2*Math.sin(phi1)*Math.sin(theta2)*(Math.cos(phi2)*((Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)))/40 - (Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1)))/40) - Math.sin(phi2)*(41*Math.cos(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) + 41*Math.sin(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))))",
        "vars": [
          "cr",
          "crd",
          "phi1",
          "phi2",
          "phi3",
          "phid1",
          "phid2",
          "phid3",
          "theta1",
          "theta2",
          "theta3",
          "thetad1",
          "thetad2",
          "thetad3"
        ]
      },
      {
        "expr": "(Math.sin(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2))*(Math.sin(theta3)*(41*thetad3 + 41*thetad2*Math.cos(phi2) + 41*crd*Math.cos(phi1)*Math.cos(phi2) + 41*thetad1*Math.cos(phi1)*Math.cos(phi2) + 41*phid1*Math.sin(phi2)*Math.sin(theta2) - 41*crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 41*thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) - 41*thetad3*Math.sin(theta3)) - ((61*Math.cos(cr))/100 + (117*Math.sin(cr))/25 - Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) - Math.cos(phi3)*(10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 10*Math.cos(cr + theta1)*Math.sin(phi1) + 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1))*(5*Math.cos(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2)*(crd + thetad1) - 10*thetad2*Math.cos(cr + theta1)*Math.cos(theta2) + 10*phid1*Math.sin(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + 10*thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + 5*Math.cos(phi3)*(10*Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2)*(crd + thetad1) - thetad2*Math.cos(cr + theta1)*Math.cos(theta2) + phid1*Math.sin(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + 10*phid2*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*phid1*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(phi2) + 10*phid2*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1) + 10*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)*(crd + thetad1)) + 5*phid3*Math.sin(phi3)*(10*Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)) + 5*phid2*Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 5*Math.cos(theta3)*Math.sin(phi3)*(10*phid2*Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2)*(crd + thetad1) - thetad2*Math.cos(cr + theta1)*Math.cos(theta2) + phid1*Math.sin(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + 10*phid1*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(phi2) - 10*phid2*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2) + 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)*(crd + thetad1)) + 50*phid1*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(phi2) + 50*phid2*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1) + 5*phid3*Math.cos(phi3)*Math.cos(theta3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 50*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)*(crd + thetad1) - 5*thetad3*Math.sin(phi3)*Math.sin(theta3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1))) + 2*(41*Math.cos(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) + 41*Math.sin(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1)))*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - 2*(41*Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - 41*Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1)))*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) - (Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))*(Math.cos(theta3)*(41*Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - 41*Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2))) + Math.sin(theta3)*(41*Math.sin(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) + 41*Math.cos(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2)))) + 2*(Math.sin(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) - Math.cos(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))*(Math.cos(theta3)*(41*Math.cos(phi3)*(Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2))) + 41*Math.sin(phi3)*(thetad3 + thetad2*Math.cos(phi2) + crd*Math.cos(phi1)*Math.cos(phi2) + thetad1*Math.cos(phi1)*Math.cos(phi2) + phid1*Math.sin(phi2)*Math.sin(theta2) - crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))) - (phid3*Math.cos(phi3)*Math.sin(theta3))/40 - (thetad3*Math.cos(theta3)*Math.sin(phi3))/40 + Math.cos(phi3)*Math.sin(theta3)*(41*phid3 + 41*phid2*Math.cos(theta3) + 41*phid1*Math.cos(theta2)*Math.cos(theta3) + 41*thetad2*Math.sin(phi2)*Math.sin(theta3) + 41*crd*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3) + 41*crd*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2) + 41*thetad1*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3) - 41*phid1*Math.cos(phi2)*Math.sin(theta2)*Math.sin(theta3) + 41*thetad1*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2) + 41*crd*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3) + 41*thetad1*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3))) + 3*(5*Math.cos(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2)*(crd + thetad1) + 10*thetad2*Math.sin(cr + theta1)*Math.cos(theta2) + 10*phid1*Math.cos(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + 10*thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) - 5*phid2*Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 50*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)*(crd + thetad1) + 50*phid1*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(phi2) + 50*phid2*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1))*((61*Math.sin(cr))/100 - (117*Math.cos(cr))/25 + Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.sin(phi1) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) - 3*((61*Math.cos(cr))/100 + (117*Math.sin(cr))/25 - Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.cos(cr + theta1)*Math.sin(phi1) + 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1))*(5*Math.cos(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2)*(crd + thetad1) - 10*thetad2*Math.cos(cr + theta1)*Math.cos(theta2) + 10*phid1*Math.sin(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + 10*thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + 5*phid2*Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 50*phid1*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(phi2) + 50*phid2*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1) + 50*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)*(crd + thetad1)) + 2*(Math.cos(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) + Math.sin(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))*(Math.cos(theta3)*(41*Math.cos(phi3)*(thetad3 + thetad2*Math.cos(phi2) + crd*Math.cos(phi1)*Math.cos(phi2) + thetad1*Math.cos(phi1)*Math.cos(phi2) + phid1*Math.sin(phi2)*Math.sin(theta2) - crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) - 41*Math.sin(phi3)*(Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2)))) - 41*thetad3*Math.cos(phi3)*Math.cos(theta3) + 41*phid3*Math.sin(phi3)*Math.sin(theta3) - Math.sin(phi3)*Math.sin(theta3)*(phid3/40 + (phid2*Math.cos(theta3))/40 + (phid1*Math.cos(theta2)*Math.cos(theta3))/40 + (thetad2*Math.sin(phi2)*Math.sin(theta3))/40 + (crd*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3))/40 + (crd*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2))/40 + (thetad1*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3))/40 - (phid1*Math.cos(phi2)*Math.sin(theta2)*Math.sin(theta3))/40 + (thetad1*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2))/40 + (crd*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3))/40 + (thetad1*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3))/40)) + ((61*Math.sin(cr))/100 - (117*Math.cos(cr))/25 + Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.sin(phi3)*(10*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) + Math.cos(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 10*Math.sin(cr + theta1)*Math.sin(phi1) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1))*(5*Math.cos(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2)*(crd + thetad1) + 10*thetad2*Math.sin(cr + theta1)*Math.cos(theta2) + 10*phid1*Math.cos(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + 10*thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + 5*Math.cos(phi3)*(10*Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2)*(crd + thetad1) + thetad2*Math.sin(cr + theta1)*Math.cos(theta2) + phid1*Math.cos(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) - 10*phid2*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)*(crd + thetad1) + 10*phid1*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(phi2) + 10*phid2*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) - 5*Math.cos(theta3)*Math.sin(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2)*(crd + thetad1) + thetad2*Math.sin(cr + theta1)*Math.cos(theta2) + phid1*Math.cos(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + 10*phid2*Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*phid1*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(phi2) + 10*phid2*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)*(crd + thetad1)) - 5*phid2*Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 5*phid3*Math.sin(phi3)*(10*Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)) - 50*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)*(crd + thetad1) + 50*phid1*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(phi2) + 50*phid2*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1) - 5*phid3*Math.cos(phi3)*Math.cos(theta3)*(10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 5*thetad3*Math.sin(phi3)*Math.sin(theta3)*(10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1))) + (Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3))*(Math.cos(theta3)*(41*thetad3 + 41*thetad2*Math.cos(phi2) + 41*crd*Math.cos(phi1)*Math.cos(phi2) + 41*thetad1*Math.cos(phi1)*Math.cos(phi2) + 41*phid1*Math.sin(phi2)*Math.sin(theta2) - 41*crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 41*thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) - 41*thetad3*Math.cos(theta3)) + 2*(Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2) + Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3))*(Math.cos(phi3)*Math.sin(theta3)*(41*Math.cos(phi3)*(thetad3 + thetad2*Math.cos(phi2) + crd*Math.cos(phi1)*Math.cos(phi2) + thetad1*Math.cos(phi1)*Math.cos(phi2) + phid1*Math.sin(phi2)*Math.sin(theta2) - crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) - 41*Math.sin(phi3)*(Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2)))) - 41*thetad3*Math.sin(theta3) + Math.sin(phi3)*Math.sin(theta3)*((Math.cos(phi3)*(Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2))))/40 + (Math.sin(phi3)*(thetad3 + thetad2*Math.cos(phi2) + crd*Math.cos(phi1)*Math.cos(phi2) + thetad1*Math.cos(phi1)*Math.cos(phi2) + phid1*Math.sin(phi2)*Math.sin(theta2) - crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))/40))",
        "vars": [
          "cr",
          "crd",
          "phi1",
          "phi2",
          "phi3",
          "phid1",
          "phid2",
          "phid3",
          "theta1",
          "theta2",
          "theta3",
          "thetad1",
          "thetad2",
          "thetad3"
        ]
      },
      {
        "expr": "(Math.sin(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2))*((Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))))/40 - (Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2)))/40) - (Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3))*((Math.sin(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))))/40 + (Math.cos(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2)))/40) + 2*(Math.cos(phi3)*((Math.cos(phi3)*(Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2))))/40 + (Math.sin(phi3)*(thetad3 + thetad2*Math.cos(phi2) + crd*Math.cos(phi1)*Math.cos(phi2) + thetad1*Math.cos(phi1)*Math.cos(phi2) + phid1*Math.sin(phi2)*Math.sin(theta2) - crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))/40) - Math.sin(phi3)*(41*Math.cos(phi3)*(thetad3 + thetad2*Math.cos(phi2) + crd*Math.cos(phi1)*Math.cos(phi2) + thetad1*Math.cos(phi1)*Math.cos(phi2) + phid1*Math.sin(phi2)*Math.sin(theta2) - crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) - 41*Math.sin(phi3)*(Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2)))))*(Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2) + Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3)) + 2*(Math.cos(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) + Math.sin(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))*(41*phid3*Math.cos(phi3) - Math.cos(phi3)*(phid3/40 + (phid2*Math.cos(theta3))/40 + (phid1*Math.cos(theta2)*Math.cos(theta3))/40 + (thetad2*Math.sin(phi2)*Math.sin(theta3))/40 + (crd*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3))/40 + (crd*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2))/40 + (thetad1*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3))/40 - (phid1*Math.cos(phi2)*Math.sin(theta2)*Math.sin(theta3))/40 + (thetad1*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2))/40 + (crd*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3))/40 + (thetad1*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3))/40)) + 2*(Math.sin(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) - Math.cos(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))*((phid3*Math.sin(phi3))/40 - Math.sin(phi3)*(41*phid3 + 41*phid2*Math.cos(theta3) + 41*phid1*Math.cos(theta2)*Math.cos(theta3) + 41*thetad2*Math.sin(phi2)*Math.sin(theta3) + 41*crd*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3) + 41*crd*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2) + 41*thetad1*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3) - 41*phid1*Math.cos(phi2)*Math.sin(theta2)*Math.sin(theta3) + 41*thetad1*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2) + 41*crd*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3) + 41*thetad1*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3))) - (5*Math.sin(phi3)*(10*Math.cos(theta3)*(thetad2*Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(theta2)*(crd + thetad1) - thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2) + phid1*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)*(crd + thetad1)) + 10*Math.sin(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2)*(crd + thetad1) + thetad2*Math.sin(cr + theta1)*Math.cos(theta2) + phid1*Math.cos(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) - phid2*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)*(crd + thetad1) + phid1*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(phi2) + phid2*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 10*thetad3*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*thetad3*Math.cos(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) - 5*phid3*Math.cos(phi3)*(10*Math.cos(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) - 10*Math.sin(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))))*((61*Math.sin(cr))/100 - (117*Math.cos(cr))/25 + Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.sin(phi3)*(10*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) + Math.cos(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 10*Math.sin(cr + theta1)*Math.sin(phi1) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) - (5*Math.sin(phi3)*(10*Math.cos(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2)*(crd + thetad1) + thetad2*Math.cos(cr + theta1)*Math.sin(theta2) + thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2) - phid1*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)*(crd + thetad1)) - 10*Math.sin(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2)*(crd + thetad1) - thetad2*Math.cos(cr + theta1)*Math.cos(theta2) + phid1*Math.sin(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + phid2*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + phid1*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(phi2) + phid2*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)*(crd + thetad1)) + 10*thetad3*Math.cos(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)) + 10*thetad3*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) - 5*phid3*Math.cos(phi3)*(10*Math.cos(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) - 10*Math.sin(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))))*((61*Math.cos(cr))/100 + (117*Math.sin(cr))/25 - Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) - Math.cos(phi3)*(10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 10*Math.cos(cr + theta1)*Math.sin(phi1) + 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1))",
        "vars": [
          "cr",
          "crd",
          "phi1",
          "phi2",
          "phi3",
          "phid1",
          "phid2",
          "phid3",
          "theta1",
          "theta2",
          "theta3",
          "thetad1",
          "thetad2",
          "thetad3"
        ]
      },
      {
        "expr": "2*(Math.cos(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) + Math.sin(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))*(41*Math.cos(phi3)*(thetad3 + thetad2*Math.cos(phi2) + crd*Math.cos(phi1)*Math.cos(phi2) + thetad1*Math.cos(phi1)*Math.cos(phi2) + phid1*Math.sin(phi2)*Math.sin(theta2) - crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) - 41*Math.sin(phi3)*(Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2)))) + 2*(Math.sin(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) - Math.cos(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))*(41*Math.cos(phi3)*(Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2))) + 41*Math.sin(phi3)*(thetad3 + thetad2*Math.cos(phi2) + crd*Math.cos(phi1)*Math.cos(phi2) + thetad1*Math.cos(phi1)*Math.cos(phi2) + phid1*Math.sin(phi2)*Math.sin(theta2) - crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))) - (5*Math.cos(phi3)*(10*Math.sin(theta3)*(thetad2*Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(theta2)*(crd + thetad1) - thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2) + phid1*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)*(crd + thetad1)) - 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2)*(crd + thetad1) + thetad2*Math.sin(cr + theta1)*Math.cos(theta2) + phid1*Math.cos(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) - phid2*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)*(crd + thetad1) + phid1*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(phi2) + phid2*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 10*thetad3*Math.sin(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)) - 10*thetad3*Math.cos(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) + 5*Math.sin(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2)*(crd + thetad1) + thetad2*Math.sin(cr + theta1)*Math.cos(theta2) + phid1*Math.cos(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + 10*phid2*Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*phid1*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(phi2) + 10*phid2*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)*(crd + thetad1)) + 5*phid3*Math.sin(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) + 5*phid3*Math.cos(phi3)*(10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)))*((61*Math.sin(cr))/100 - (117*Math.cos(cr))/25 + Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.sin(phi3)*(10*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) + Math.cos(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 10*Math.sin(cr + theta1)*Math.sin(phi1) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) - (5*Math.cos(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2)*(crd + thetad1) + thetad2*Math.cos(cr + theta1)*Math.sin(theta2) + thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2) - phid1*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)*(crd + thetad1)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2)*(crd + thetad1) - thetad2*Math.cos(cr + theta1)*Math.cos(theta2) + phid1*Math.sin(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + phid2*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + phid1*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(phi2) + phid2*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)*(crd + thetad1)) + 10*thetad3*Math.sin(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)) - 10*thetad3*Math.cos(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) + 5*Math.sin(phi3)*(10*phid2*Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2)*(crd + thetad1) - thetad2*Math.cos(cr + theta1)*Math.cos(theta2) + phid1*Math.sin(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + 10*phid1*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(phi2) - 10*phid2*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2) + 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)*(crd + thetad1)) + 5*phid3*Math.sin(phi3)*(10*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) + 5*phid3*Math.cos(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)))*((61*Math.cos(cr))/100 + (117*Math.sin(cr))/25 - Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) - Math.cos(phi3)*(10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 10*Math.cos(cr + theta1)*Math.sin(phi1) + 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1))",
        "vars": [
          "cr",
          "crd",
          "phi1",
          "phi2",
          "phi3",
          "phid1",
          "phid2",
          "phid3",
          "theta1",
          "theta2",
          "theta3",
          "thetad1",
          "thetad2",
          "thetad3"
        ]
      }
    ],
    [
      {
        "expr": "(Math.cos(cr) - cr*Math.sin(cr))*(5*Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2)*(crd + thetad1) + 10*thetad2*Math.sin(cr + theta1)*Math.cos(theta2) + 10*phid1*Math.cos(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + 10*thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) - 5*Math.sin(phi3)*(10*Math.sin(theta3)*(thetad2*Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(theta2)*(crd + thetad1) - thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2) + phid1*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)*(crd + thetad1)) - 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2)*(crd + thetad1) + thetad2*Math.sin(cr + theta1)*Math.cos(theta2) + phid1*Math.cos(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) - phid2*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)*(crd + thetad1) + phid1*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(phi2) + phid2*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 10*thetad3*Math.sin(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)) - 10*thetad3*Math.cos(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) - (117*crd*Math.cos(cr))/5 + (61*crd*Math.sin(cr))/20 + 5*Math.cos(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2)*(crd + thetad1) + thetad2*Math.sin(cr + theta1)*Math.cos(theta2) + phid1*Math.cos(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + 10*phid2*Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*phid1*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(phi2) + 10*phid2*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)*(crd + thetad1)) + 50*Math.sin(cr + theta1)*Math.sin(phi1)*(crd + thetad1) - 50*phid1*Math.cos(cr + theta1)*Math.cos(phi1) + 5*phid2*Math.cos(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 5*phid3*Math.cos(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) - 5*phid3*Math.sin(phi3)*(10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) - 50*phid1*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(phi2) + 50*phid2*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2) + 50*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)*(crd + thetad1)) - 3*(Math.cos(cr) - cr*Math.sin(cr))*((117*crd*Math.cos(cr))/5 - (61*crd*Math.sin(cr))/20 - 50*Math.sin(cr + theta1)*Math.sin(phi1)*(crd + thetad1) + 50*phid1*Math.cos(cr + theta1)*Math.cos(phi1)) - 3*(Math.sin(cr) + cr*Math.cos(cr))*((61*crd*Math.cos(cr))/20 + (117*crd*Math.sin(cr))/5 + 50*Math.cos(cr + theta1)*Math.sin(phi1)*(crd + thetad1) + 50*phid1*Math.sin(cr + theta1)*Math.cos(phi1)) + 3*(Math.cos(cr) - cr*Math.sin(cr))*(5*Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2)*(crd + thetad1) + 10*thetad2*Math.sin(cr + theta1)*Math.cos(theta2) + 10*phid1*Math.cos(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + 10*thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) - (117*crd*Math.cos(cr))/5 + (61*crd*Math.sin(cr))/20 + 50*Math.sin(cr + theta1)*Math.sin(phi1)*(crd + thetad1) - 50*phid1*Math.cos(cr + theta1)*Math.cos(phi1) + 5*phid2*Math.cos(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 50*phid1*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(phi2) + 50*phid2*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2) + 50*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)*(crd + thetad1)) - 3*(Math.sin(cr) + cr*Math.cos(cr))*((61*crd*Math.cos(cr))/20 - 5*Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2)*(crd + thetad1) - 10*thetad2*Math.cos(cr + theta1)*Math.cos(theta2) + 10*phid1*Math.sin(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + 10*thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + (117*crd*Math.sin(cr))/5 + 50*Math.cos(cr + theta1)*Math.sin(phi1)*(crd + thetad1) + 50*phid1*Math.sin(cr + theta1)*Math.cos(phi1) + 5*phid2*Math.cos(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 50*phid1*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(phi2) - 50*phid2*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2) + 50*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)*(crd + thetad1)) - 2*((61*crd*Math.cos(cr))/20 + (117*crd*Math.sin(cr))/5)*(Math.sin(cr) + cr*Math.cos(cr)) - 2*((117*crd*Math.cos(cr))/5 - (61*crd*Math.sin(cr))/20)*(Math.cos(cr) - cr*Math.sin(cr)) - (10248*crd*Math.cos(cr) + 78624*crd*Math.sin(cr))*(Math.sin(cr) + cr*Math.cos(cr)) - (78624*crd*Math.cos(cr) - 10248*crd*Math.sin(cr))*(Math.cos(cr) - cr*Math.sin(cr)) - (Math.sin(cr) + cr*Math.cos(cr))*((61*crd*Math.cos(cr))/20 - 5*Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2)*(crd + thetad1) - 10*thetad2*Math.cos(cr + theta1)*Math.cos(theta2) + 10*phid1*Math.sin(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + 10*thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + (117*crd*Math.sin(cr))/5 - 5*Math.sin(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2)*(crd + thetad1) + thetad2*Math.cos(cr + theta1)*Math.sin(theta2) + thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2) - phid1*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)*(crd + thetad1)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2)*(crd + thetad1) - thetad2*Math.cos(cr + theta1)*Math.cos(theta2) + phid1*Math.sin(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + phid2*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + phid1*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(phi2) + phid2*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)*(crd + thetad1)) + 10*thetad3*Math.sin(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)) - 10*thetad3*Math.cos(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) + 5*Math.cos(phi3)*(10*phid2*Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2)*(crd + thetad1) - thetad2*Math.cos(cr + theta1)*Math.cos(theta2) + phid1*Math.sin(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + 10*phid1*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(phi2) - 10*phid2*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2) + 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)*(crd + thetad1)) - 5*phid3*Math.sin(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 50*Math.cos(cr + theta1)*Math.sin(phi1)*(crd + thetad1) + 50*phid1*Math.sin(cr + theta1)*Math.cos(phi1) + 5*phid2*Math.cos(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 5*phid3*Math.cos(phi3)*(10*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) + 50*phid1*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(phi2) - 50*phid2*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2) + 50*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)*(crd + thetad1))",
        "vars": [
          "cr",
          "crd",
          "phi1",
          "phi2",
          "phi3",
          "phid1",
          "phid2",
          "phid3",
          "theta1",
          "theta2",
          "theta3",
          "thetad1",
          "thetad2",
          "thetad3"
        ]
      },
      {
        "expr": "9*(Math.sin(cr) + cr*Math.cos(cr))*(10*crd*Math.cos(cr) - 5*cr*crd*Math.sin(cr)) - 9*(Math.cos(cr) - cr*Math.sin(cr))*(10*crd*Math.sin(cr) + 5*cr*crd*Math.cos(cr)) + (Math.sin(cr) + cr*Math.cos(cr))*(33600*crd*Math.cos(cr) - 16800*cr*crd*Math.sin(cr)) - (Math.cos(cr) - cr*Math.sin(cr))*(33600*crd*Math.sin(cr) + 16800*cr*crd*Math.cos(cr))",
        "vars": [
          "cr",
          "crd"
        ]
      },
      {
        "expr": "(Math.cos(cr) - cr*Math.sin(cr))*(5*Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2)*(crd + thetad1) + 10*thetad2*Math.sin(cr + theta1)*Math.cos(theta2) + 10*phid1*Math.cos(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + 10*thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) - 5*Math.sin(phi3)*(10*Math.sin(theta3)*(thetad2*Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(theta2)*(crd + thetad1) - thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2) + phid1*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)*(crd + thetad1)) - 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2)*(crd + thetad1) + thetad2*Math.sin(cr + theta1)*Math.cos(theta2) + phid1*Math.cos(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) - phid2*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)*(crd + thetad1) + phid1*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(phi2) + phid2*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 10*thetad3*Math.sin(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)) - 10*thetad3*Math.cos(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) + 5*Math.cos(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2)*(crd + thetad1) + thetad2*Math.sin(cr + theta1)*Math.cos(theta2) + phid1*Math.cos(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + 10*phid2*Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*phid1*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(phi2) + 10*phid2*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)*(crd + thetad1)) + 50*Math.sin(cr + theta1)*Math.sin(phi1)*(crd + thetad1) - 50*phid1*Math.cos(cr + theta1)*Math.cos(phi1) + 5*phid2*Math.cos(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 5*phid3*Math.cos(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) - 5*phid3*Math.sin(phi3)*(10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) - 50*phid1*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(phi2) + 50*phid2*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2) + 50*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)*(crd + thetad1)) + 3*(Math.cos(cr) - cr*Math.sin(cr))*(5*Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2)*(crd + thetad1) + 10*thetad2*Math.sin(cr + theta1)*Math.cos(theta2) + 10*phid1*Math.cos(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + 10*thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + 50*Math.sin(cr + theta1)*Math.sin(phi1)*(crd + thetad1) - 50*phid1*Math.cos(cr + theta1)*Math.cos(phi1) + 5*phid2*Math.cos(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 50*phid1*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(phi2) + 50*phid2*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2) + 50*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)*(crd + thetad1)) - 3*(Math.sin(cr) + cr*Math.cos(cr))*(50*Math.cos(cr + theta1)*Math.sin(phi1)*(crd + thetad1) - 5*Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2)*(crd + thetad1) - 10*thetad2*Math.cos(cr + theta1)*Math.cos(theta2) + 10*phid1*Math.sin(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + 10*thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + 50*phid1*Math.sin(cr + theta1)*Math.cos(phi1) + 5*phid2*Math.cos(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 50*phid1*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(phi2) - 50*phid2*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2) + 50*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)*(crd + thetad1)) - (Math.sin(cr) + cr*Math.cos(cr))*(5*Math.cos(phi3)*(10*phid2*Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2)*(crd + thetad1) - thetad2*Math.cos(cr + theta1)*Math.cos(theta2) + phid1*Math.sin(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + 10*phid1*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(phi2) - 10*phid2*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2) + 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)*(crd + thetad1)) - 5*Math.sin(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2)*(crd + thetad1) + thetad2*Math.cos(cr + theta1)*Math.sin(theta2) + thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2) - phid1*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)*(crd + thetad1)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2)*(crd + thetad1) - thetad2*Math.cos(cr + theta1)*Math.cos(theta2) + phid1*Math.sin(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + phid2*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + phid1*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(phi2) + phid2*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)*(crd + thetad1)) + 10*thetad3*Math.sin(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)) - 10*thetad3*Math.cos(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) - 5*Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2)*(crd + thetad1) - 10*thetad2*Math.cos(cr + theta1)*Math.cos(theta2) + 10*phid1*Math.sin(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + 10*thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) - 5*phid3*Math.sin(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 50*Math.cos(cr + theta1)*Math.sin(phi1)*(crd + thetad1) + 50*phid1*Math.sin(cr + theta1)*Math.cos(phi1) + 5*phid2*Math.cos(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 5*phid3*Math.cos(phi3)*(10*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) + 50*phid1*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(phi2) - 50*phid2*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2) + 50*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)*(crd + thetad1)) - 3*(Math.sin(cr) + cr*Math.cos(cr))*(50*Math.cos(cr + theta1)*Math.sin(phi1)*(crd + thetad1) + 50*phid1*Math.sin(cr + theta1)*Math.cos(phi1)) + 3*(Math.cos(cr) - cr*Math.sin(cr))*(50*Math.sin(cr + theta1)*Math.sin(phi1)*(crd + thetad1) - 50*phid1*Math.cos(cr + theta1)*Math.cos(phi1))",
        "vars": [
          "cr",
          "crd",
          "phi1",
          "phi2",
          "phi3",
          "phid1",
          "phid2",
          "phid3",
          "theta1",
          "theta2",
          "theta3",
          "thetad1",
          "thetad2",
          "thetad3"
        ]
      },
      {
        "expr": "(Math.cos(cr) - cr*Math.sin(cr))*(5*Math.sin(cr + theta1)*(10*phid1*Math.sin(phi1) + 10*phid1*Math.cos(phi2)*Math.sin(phi1) + 10*phid2*Math.cos(phi1)*Math.sin(phi2) + 10*phid1*Math.cos(phi2)*Math.cos(phi3)*Math.sin(phi1) + 10*phid2*Math.cos(phi1)*Math.cos(phi3)*Math.sin(phi2) + 10*phid3*Math.cos(phi1)*Math.cos(phi2)*Math.sin(phi3) + 10*phid1*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2) + 10*phid2*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1) - 10*thetad2*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta2) + 10*phid1*Math.cos(phi1)*Math.cos(phi3)*Math.cos(theta2)*Math.sin(phi2) + 10*phid2*Math.cos(phi2)*Math.cos(phi3)*Math.cos(theta2)*Math.sin(phi1) + 10*phid2*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta3)*Math.sin(phi3) + 10*phid3*Math.cos(phi1)*Math.cos(phi3)*Math.cos(theta3)*Math.sin(phi2) - 10*phid1*Math.cos(theta3)*Math.sin(phi1)*Math.sin(phi2)*Math.sin(phi3) - 10*phid3*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)*Math.sin(phi3) - 10*phid1*Math.cos(phi1)*Math.sin(phi3)*Math.sin(theta2)*Math.sin(theta3) - 10*thetad2*Math.cos(phi3)*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta2) - 10*phid3*Math.cos(phi3)*Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3) - 10*thetad3*Math.cos(phi1)*Math.sin(phi2)*Math.sin(phi3)*Math.sin(theta3) - 10*thetad2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi3)*Math.sin(theta3) - 10*thetad3*Math.cos(theta3)*Math.sin(phi1)*Math.sin(phi3)*Math.sin(theta2) + 10*phid1*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi3) + 10*phid3*Math.cos(phi2)*Math.cos(phi3)*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi1) - 10*phid2*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi1)*Math.sin(phi2)*Math.sin(phi3) - 10*thetad2*Math.cos(phi2)*Math.cos(theta3)*Math.sin(phi1)*Math.sin(phi3)*Math.sin(theta2) - 10*thetad3*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi3)*Math.sin(theta3)) - 5*Math.cos(cr + theta1)*(crd + thetad1)*(10*Math.cos(phi1) + 10*Math.cos(phi1)*Math.cos(phi2) + 10*Math.cos(phi1)*Math.cos(phi2)*Math.cos(phi3) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 10*Math.cos(phi3)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 10*Math.cos(phi1)*Math.cos(theta3)*Math.sin(phi2)*Math.sin(phi3) + 10*Math.sin(phi1)*Math.sin(phi3)*Math.sin(theta2)*Math.sin(theta3) - 10*Math.cos(phi2)*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi1)*Math.sin(phi3))) - (Math.sin(cr) + cr*Math.cos(cr))*(5*Math.cos(cr + theta1)*(10*phid1*Math.sin(phi1) + 10*phid1*Math.cos(phi2)*Math.sin(phi1) + 10*phid2*Math.cos(phi1)*Math.sin(phi2) + 10*phid1*Math.cos(phi2)*Math.cos(phi3)*Math.sin(phi1) + 10*phid2*Math.cos(phi1)*Math.cos(phi3)*Math.sin(phi2) + 10*phid3*Math.cos(phi1)*Math.cos(phi2)*Math.sin(phi3) + 10*phid1*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2) + 10*phid2*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1) - 10*thetad2*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta2) + 10*phid1*Math.cos(phi1)*Math.cos(phi3)*Math.cos(theta2)*Math.sin(phi2) + 10*phid2*Math.cos(phi2)*Math.cos(phi3)*Math.cos(theta2)*Math.sin(phi1) + 10*phid2*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta3)*Math.sin(phi3) + 10*phid3*Math.cos(phi1)*Math.cos(phi3)*Math.cos(theta3)*Math.sin(phi2) - 10*phid1*Math.cos(theta3)*Math.sin(phi1)*Math.sin(phi2)*Math.sin(phi3) - 10*phid3*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)*Math.sin(phi3) - 10*phid1*Math.cos(phi1)*Math.sin(phi3)*Math.sin(theta2)*Math.sin(theta3) - 10*thetad2*Math.cos(phi3)*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta2) - 10*phid3*Math.cos(phi3)*Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3) - 10*thetad3*Math.cos(phi1)*Math.sin(phi2)*Math.sin(phi3)*Math.sin(theta3) - 10*thetad2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi3)*Math.sin(theta3) - 10*thetad3*Math.cos(theta3)*Math.sin(phi1)*Math.sin(phi3)*Math.sin(theta2) + 10*phid1*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi3) + 10*phid3*Math.cos(phi2)*Math.cos(phi3)*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi1) - 10*phid2*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi1)*Math.sin(phi2)*Math.sin(phi3) - 10*thetad2*Math.cos(phi2)*Math.cos(theta3)*Math.sin(phi1)*Math.sin(phi3)*Math.sin(theta2) - 10*thetad3*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi3)*Math.sin(theta3)) + 5*Math.sin(cr + theta1)*(crd + thetad1)*(10*Math.cos(phi1) + 10*Math.cos(phi1)*Math.cos(phi2) + 10*Math.cos(phi1)*Math.cos(phi2)*Math.cos(phi3) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 10*Math.cos(phi3)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 10*Math.cos(phi1)*Math.cos(theta3)*Math.sin(phi2)*Math.sin(phi3) + 10*Math.sin(phi1)*Math.sin(phi3)*Math.sin(theta2)*Math.sin(theta3) - 10*Math.cos(phi2)*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi1)*Math.sin(phi3))) - 3*(5*Math.cos(cr + theta1)*(10*phid1*Math.sin(phi1) + 10*phid1*Math.cos(phi2)*Math.sin(phi1) + 10*phid2*Math.cos(phi1)*Math.sin(phi2) + 10*phid1*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2) + 10*phid2*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1) - 10*thetad2*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta2)) + 5*Math.sin(cr + theta1)*(crd + thetad1)*(10*Math.cos(phi1) + 10*Math.cos(phi1)*Math.cos(phi2) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))*(Math.sin(cr) + cr*Math.cos(cr)) + 3*(5*Math.sin(cr + theta1)*(10*phid1*Math.sin(phi1) + 10*phid1*Math.cos(phi2)*Math.sin(phi1) + 10*phid2*Math.cos(phi1)*Math.sin(phi2) + 10*phid1*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2) + 10*phid2*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1) - 10*thetad2*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta2)) - 5*Math.cos(cr + theta1)*(crd + thetad1)*(10*Math.cos(phi1) + 10*Math.cos(phi1)*Math.cos(phi2) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))*(Math.cos(cr) - cr*Math.sin(cr)) - 3*(Math.sin(cr) + cr*Math.cos(cr))*(50*Math.sin(cr + theta1)*Math.cos(phi1)*(crd + thetad1) + 50*phid1*Math.cos(cr + theta1)*Math.sin(phi1)) - 3*(Math.cos(cr) - cr*Math.sin(cr))*(50*Math.cos(cr + theta1)*Math.cos(phi1)*(crd + thetad1) - 50*phid1*Math.sin(cr + theta1)*Math.sin(phi1))",
        "vars": [
          "cr",
          "crd",
          "phi1",
          "phi2",
          "phi3",
          "phid1",
          "phid2",
          "phid3",
          "theta1",
          "theta2",
          "theta3",
          "thetad1",
          "thetad2",
          "thetad3"
        ]
      },
      {
        "expr": "3*(5*Math.sin(phi2)*(10*thetad2*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(theta2)*(crd + thetad1) - 10*thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2) + 10*phid1*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)*(crd + thetad1)) - 5*phid2*Math.cos(phi2)*(10*Math.sin(cr + theta1)*Math.cos(theta2) + 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)))*(Math.sin(cr) + cr*Math.cos(cr)) + 3*(5*Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.cos(theta2)*(crd + thetad1) + 10*thetad2*Math.cos(cr + theta1)*Math.sin(theta2) + 10*thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2) - 10*phid1*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(theta2) + 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)*(crd + thetad1)) - 5*phid2*Math.cos(phi2)*(10*Math.cos(cr + theta1)*Math.cos(theta2) - 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)))*(Math.cos(cr) - cr*Math.sin(cr)) + (Math.sin(cr) + cr*Math.cos(cr))*(5*Math.sin(phi2)*(10*thetad2*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(theta2)*(crd + thetad1) - 10*thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2) + 10*phid1*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)*(crd + thetad1)) + 5*Math.sin(phi3)*(10*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.sin(theta2)*(crd + thetad1) + thetad2*Math.sin(cr + theta1)*Math.cos(theta2) + phid1*Math.cos(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + 10*Math.cos(phi2)*Math.cos(theta3)*(thetad2*Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(theta2)*(crd + thetad1) - thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2) + phid1*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)*(crd + thetad1)) + 10*thetad3*Math.cos(theta3)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*phid2*Math.cos(theta3)*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*thetad3*Math.cos(phi2)*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) + 5*Math.cos(phi3)*Math.sin(phi2)*(10*thetad2*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(theta2)*(crd + thetad1) - 10*thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2) + 10*phid1*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)*(crd + thetad1)) + 5*phid3*Math.cos(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(phi2)*Math.cos(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) - 5*phid2*Math.cos(phi2)*(10*Math.sin(cr + theta1)*Math.cos(theta2) + 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) - 5*phid2*Math.cos(phi2)*Math.cos(phi3)*(10*Math.sin(cr + theta1)*Math.cos(theta2) + 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 5*phid3*Math.sin(phi2)*Math.sin(phi3)*(10*Math.sin(cr + theta1)*Math.cos(theta2) + 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) + (Math.cos(cr) - cr*Math.sin(cr))*(5*Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.cos(theta2)*(crd + thetad1) + 10*thetad2*Math.cos(cr + theta1)*Math.sin(theta2) + 10*thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2) - 10*phid1*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(theta2) + 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)*(crd + thetad1)) + 5*Math.sin(phi3)*(10*Math.cos(phi2)*Math.cos(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2)*(crd + thetad1) + thetad2*Math.cos(cr + theta1)*Math.sin(theta2) + thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2) - phid1*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)*(crd + thetad1)) - 10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.sin(theta2)*(crd + thetad1) - thetad2*Math.cos(cr + theta1)*Math.cos(theta2) + phid1*Math.sin(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + 10*thetad3*Math.cos(theta3)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*phid2*Math.cos(theta3)*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*thetad3*Math.cos(phi2)*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) + 5*Math.cos(phi3)*Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.cos(theta2)*(crd + thetad1) + 10*thetad2*Math.cos(cr + theta1)*Math.sin(theta2) + 10*thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2) - 10*phid1*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(theta2) + 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)*(crd + thetad1)) + 5*phid3*Math.cos(phi3)*(10*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(phi2)*Math.cos(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) - 5*phid2*Math.cos(phi2)*(10*Math.cos(cr + theta1)*Math.cos(theta2) - 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) - 5*phid2*Math.cos(phi2)*Math.cos(phi3)*(10*Math.cos(cr + theta1)*Math.cos(theta2) - 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 5*phid3*Math.sin(phi2)*Math.sin(phi3)*(10*Math.cos(cr + theta1)*Math.cos(theta2) - 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)))",
        "vars": [
          "cr",
          "crd",
          "phi1",
          "phi2",
          "phi3",
          "phid1",
          "phid2",
          "phid3",
          "theta1",
          "theta2",
          "theta3",
          "thetad1",
          "thetad2",
          "thetad3"
        ]
      },
      {
        "expr": "(Math.cos(cr) - cr*Math.sin(cr))*(5*Math.cos(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2)*(crd + thetad1) - 10*thetad2*Math.cos(cr + theta1)*Math.cos(theta2) + 10*phid1*Math.sin(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + 10*thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + 5*Math.cos(phi3)*(10*Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2)*(crd + thetad1) - thetad2*Math.cos(cr + theta1)*Math.cos(theta2) + phid1*Math.sin(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + 10*phid2*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*phid1*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(phi2) + 10*phid2*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1) + 10*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)*(crd + thetad1)) + 5*phid3*Math.sin(phi3)*(10*Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)) + 5*phid2*Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 5*Math.cos(theta3)*Math.sin(phi3)*(10*phid2*Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2)*(crd + thetad1) - thetad2*Math.cos(cr + theta1)*Math.cos(theta2) + phid1*Math.sin(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + 10*phid1*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(phi2) - 10*phid2*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2) + 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)*(crd + thetad1)) + 50*phid1*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(phi2) + 50*phid2*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1) + 5*phid3*Math.cos(phi3)*Math.cos(theta3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 50*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)*(crd + thetad1) - 5*thetad3*Math.sin(phi3)*Math.sin(theta3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1))) - 3*(Math.sin(cr) + cr*Math.cos(cr))*(5*Math.cos(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2)*(crd + thetad1) + 10*thetad2*Math.sin(cr + theta1)*Math.cos(theta2) + 10*phid1*Math.cos(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + 10*thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) - 5*phid2*Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 50*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)*(crd + thetad1) + 50*phid1*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(phi2) + 50*phid2*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) - (Math.sin(cr) + cr*Math.cos(cr))*(5*Math.cos(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2)*(crd + thetad1) + 10*thetad2*Math.sin(cr + theta1)*Math.cos(theta2) + 10*phid1*Math.cos(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + 10*thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + 5*Math.cos(phi3)*(10*Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2)*(crd + thetad1) + thetad2*Math.sin(cr + theta1)*Math.cos(theta2) + phid1*Math.cos(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) - 10*phid2*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)*(crd + thetad1) + 10*phid1*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(phi2) + 10*phid2*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) - 5*Math.cos(theta3)*Math.sin(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2)*(crd + thetad1) + thetad2*Math.sin(cr + theta1)*Math.cos(theta2) + phid1*Math.cos(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + 10*phid2*Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*phid1*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(phi2) + 10*phid2*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)*(crd + thetad1)) - 5*phid2*Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 5*phid3*Math.sin(phi3)*(10*Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)) - 50*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)*(crd + thetad1) + 50*phid1*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(phi2) + 50*phid2*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1) - 5*phid3*Math.cos(phi3)*Math.cos(theta3)*(10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 5*thetad3*Math.sin(phi3)*Math.sin(theta3)*(10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1))) + 3*(Math.cos(cr) - cr*Math.sin(cr))*(5*Math.cos(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2)*(crd + thetad1) - 10*thetad2*Math.cos(cr + theta1)*Math.cos(theta2) + 10*phid1*Math.sin(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + 10*thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + 5*phid2*Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 50*phid1*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(phi2) + 50*phid2*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1) + 50*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)*(crd + thetad1))",
        "vars": [
          "cr",
          "crd",
          "phi1",
          "phi2",
          "phi3",
          "phid1",
          "phid2",
          "phid3",
          "theta1",
          "theta2",
          "theta3",
          "thetad1",
          "thetad2",
          "thetad3"
        ]
      },
      {
        "expr": "(Math.cos(cr) - cr*Math.sin(cr))*(5*Math.sin(phi3)*(10*Math.cos(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2)*(crd + thetad1) + thetad2*Math.cos(cr + theta1)*Math.sin(theta2) + thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2) - phid1*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)*(crd + thetad1)) - 10*Math.sin(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2)*(crd + thetad1) - thetad2*Math.cos(cr + theta1)*Math.cos(theta2) + phid1*Math.sin(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + phid2*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + phid1*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(phi2) + phid2*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)*(crd + thetad1)) + 10*thetad3*Math.cos(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)) + 10*thetad3*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) - 5*phid3*Math.cos(phi3)*(10*Math.cos(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) - 10*Math.sin(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)))) + (5*Math.sin(phi3)*(10*Math.cos(theta3)*(thetad2*Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(theta2)*(crd + thetad1) - thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2) + phid1*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)*(crd + thetad1)) + 10*Math.sin(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2)*(crd + thetad1) + thetad2*Math.sin(cr + theta1)*Math.cos(theta2) + phid1*Math.cos(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) - phid2*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)*(crd + thetad1) + phid1*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(phi2) + phid2*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 10*thetad3*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*thetad3*Math.cos(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) - 5*phid3*Math.cos(phi3)*(10*Math.cos(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) - 10*Math.sin(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))))*(Math.sin(cr) + cr*Math.cos(cr))",
        "vars": [
          "cr",
          "crd",
          "phi1",
          "phi2",
          "phi3",
          "phid1",
          "phid2",
          "phid3",
          "theta1",
          "theta2",
          "theta3",
          "thetad1",
          "thetad2",
          "thetad3"
        ]
      },
      {
        "expr": "(Math.sin(cr) + cr*Math.cos(cr))*(5*Math.cos(phi3)*(10*Math.sin(theta3)*(thetad2*Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(theta2)*(crd + thetad1) - thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2) + phid1*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)*(crd + thetad1)) - 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2)*(crd + thetad1) + thetad2*Math.sin(cr + theta1)*Math.cos(theta2) + phid1*Math.cos(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) - phid2*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)*(crd + thetad1) + phid1*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(phi2) + phid2*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 10*thetad3*Math.sin(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)) - 10*thetad3*Math.cos(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) + 5*Math.sin(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2)*(crd + thetad1) + thetad2*Math.sin(cr + theta1)*Math.cos(theta2) + phid1*Math.cos(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + 10*phid2*Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*phid1*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(phi2) + 10*phid2*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)*(crd + thetad1)) + 5*phid3*Math.sin(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) + 5*phid3*Math.cos(phi3)*(10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1))) + (Math.cos(cr) - cr*Math.sin(cr))*(5*Math.cos(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2)*(crd + thetad1) + thetad2*Math.cos(cr + theta1)*Math.sin(theta2) + thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2) - phid1*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)*(crd + thetad1)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2)*(crd + thetad1) - thetad2*Math.cos(cr + theta1)*Math.cos(theta2) + phid1*Math.sin(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + phid2*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + phid1*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(phi2) + phid2*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)*(crd + thetad1)) + 10*thetad3*Math.sin(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)) - 10*thetad3*Math.cos(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) + 5*Math.sin(phi3)*(10*phid2*Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2)*(crd + thetad1) - thetad2*Math.cos(cr + theta1)*Math.cos(theta2) + phid1*Math.sin(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + 10*phid1*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(phi2) - 10*phid2*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2) + 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)*(crd + thetad1)) + 5*phid3*Math.sin(phi3)*(10*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) + 5*phid3*Math.cos(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)))",
        "vars": [
          "cr",
          "crd",
          "phi1",
          "phi2",
          "phi3",
          "phid1",
          "phid2",
          "phid3",
          "theta1",
          "theta2",
          "theta3",
          "thetad1",
          "thetad2",
          "thetad3"
        ]
      }
    ],
    [
      {
        "expr": "2*(Math.cos(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) + Math.sin(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))*((41*Math.cos(phi3)*(thetad3 + thetad2*Math.cos(phi2) + crd*Math.cos(phi1)*Math.cos(phi2) + thetad1*Math.cos(phi1)*Math.cos(phi2) + phid1*Math.sin(phi2)*Math.sin(theta2) - crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) - 41*Math.sin(phi3)*(Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2))))*(Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2) + Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3)) + (Math.sin(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) - Math.cos(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))*(phid3/40 + (phid2*Math.cos(theta3))/40 + (phid1*Math.cos(theta2)*Math.cos(theta3))/40 + (thetad2*Math.sin(phi2)*Math.sin(theta3))/40 + (crd*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3))/40 + (crd*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2))/40 + (thetad1*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3))/40 - (phid1*Math.cos(phi2)*Math.sin(theta2)*Math.sin(theta3))/40 + (thetad1*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2))/40 + (crd*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3))/40 + (thetad1*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3))/40) - 41*Math.cos(phi3)*(Math.cos(theta3)*(phid1*Math.sin(phi1)*Math.sin(phi2) - phid2*Math.cos(phi1)*Math.cos(phi2) - phid1*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2) + phid2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) + thetad2*Math.cos(phi2)*Math.sin(phi1)*Math.sin(theta2)) + thetad3*Math.sin(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + phid1*Math.cos(phi1)*Math.sin(theta2)*Math.sin(theta3) + thetad2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3) + thetad3*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2)) - 41*Math.sin(phi3)*(phid1*Math.cos(phi2)*Math.sin(phi1) + phid2*Math.cos(phi1)*Math.sin(phi2) + phid1*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2) + phid2*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1) - thetad2*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta2)) + 41*phid3*Math.cos(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) - 41*phid3*Math.sin(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3))) + 2*(Math.sin(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) - Math.cos(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))*((41*Math.cos(phi3)*(Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2))) + 41*Math.sin(phi3)*(thetad3 + thetad2*Math.cos(phi2) + crd*Math.cos(phi1)*Math.cos(phi2) + thetad1*Math.cos(phi1)*Math.cos(phi2) + phid1*Math.sin(phi2)*Math.sin(theta2) - crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))*(Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2) + Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3)) - (Math.cos(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) + Math.sin(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))*(41*phid3 + 41*phid2*Math.cos(theta3) + 41*phid1*Math.cos(theta2)*Math.cos(theta3) + 41*thetad2*Math.sin(phi2)*Math.sin(theta3) + 41*crd*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3) + 41*crd*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2) + 41*thetad1*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3) - 41*phid1*Math.cos(phi2)*Math.sin(theta2)*Math.sin(theta3) + 41*thetad1*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2) + 41*crd*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3) + 41*thetad1*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3)) + (Math.cos(phi3)*(phid1*Math.cos(phi2)*Math.sin(phi1) + phid2*Math.cos(phi1)*Math.sin(phi2) + phid1*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2) + phid2*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1) - thetad2*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta2)))/40 - (Math.sin(phi3)*(Math.cos(theta3)*(phid1*Math.sin(phi1)*Math.sin(phi2) - phid2*Math.cos(phi1)*Math.cos(phi2) - phid1*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2) + phid2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) + thetad2*Math.cos(phi2)*Math.sin(phi1)*Math.sin(theta2)) + thetad3*Math.sin(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + phid1*Math.cos(phi1)*Math.sin(theta2)*Math.sin(theta3) + thetad2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3) + thetad3*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2)))/40 + (phid3*Math.sin(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))/40 + (phid3*Math.cos(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)))/40) + (Math.sin(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2))*((Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))*((Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))))/40 - (Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2)))/40) - (Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3))*(41*thetad3 + 41*thetad2*Math.cos(phi2) + 41*crd*Math.cos(phi1)*Math.cos(phi2) + 41*thetad1*Math.cos(phi1)*Math.cos(phi2) + 41*phid1*Math.sin(phi2)*Math.sin(theta2) - 41*crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 41*thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) - 41*Math.sin(theta3)*(phid1*Math.sin(phi1)*Math.sin(phi2) - phid2*Math.cos(phi1)*Math.cos(phi2) - phid1*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2) + phid2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) + thetad2*Math.cos(phi2)*Math.sin(phi1)*Math.sin(theta2)) + 41*thetad3*Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + 41*phid1*Math.cos(phi1)*Math.cos(theta3)*Math.sin(theta2) + 41*thetad2*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi1) - 41*thetad3*Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) + (Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.sin(phi3)*(10*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) + Math.cos(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 10*Math.sin(cr + theta1)*Math.sin(phi1) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1))*((61*crd*Math.cos(cr))/20 - 5*Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2)*(crd + thetad1) - 10*thetad2*Math.cos(cr + theta1)*Math.cos(theta2) + 10*phid1*Math.sin(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + 10*thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + (117*crd*Math.sin(cr))/5 - 5*Math.sin(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2)*(crd + thetad1) + thetad2*Math.cos(cr + theta1)*Math.sin(theta2) + thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2) - phid1*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)*(crd + thetad1)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2)*(crd + thetad1) - thetad2*Math.cos(cr + theta1)*Math.cos(theta2) + phid1*Math.sin(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + phid2*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + phid1*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(phi2) + phid2*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)*(crd + thetad1)) + 10*thetad3*Math.sin(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)) - 10*thetad3*Math.cos(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) + 5*Math.cos(phi3)*(10*phid2*Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2)*(crd + thetad1) - thetad2*Math.cos(cr + theta1)*Math.cos(theta2) + phid1*Math.sin(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + 10*phid1*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(phi2) - 10*phid2*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2) + 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)*(crd + thetad1)) - 5*phid3*Math.sin(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 50*Math.cos(cr + theta1)*Math.sin(phi1)*(crd + thetad1) + 50*phid1*Math.sin(cr + theta1)*Math.cos(phi1) + 5*phid2*Math.cos(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 5*phid3*Math.cos(phi3)*(10*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) + 50*phid1*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(phi2) - 50*phid2*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2) + 50*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)*(crd + thetad1)) + Math.cos(phi1)*(Math.cos(theta2)*Math.sin(phi1)*(41*phid1*Math.cos(theta2) + 41*Math.sin(phi1)*Math.sin(theta2)*(crd + thetad1)) - (phid1*Math.sin(phi1))/40 + Math.sin(phi1)*Math.sin(theta2)*(41*phid1*Math.sin(theta2) - 41*Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - (Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3))*((Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))*((Math.sin(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))))/40 + (Math.cos(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2)))/40) - (Math.sin(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2))*(41*thetad3 + 41*thetad2*Math.cos(phi2) + 41*crd*Math.cos(phi1)*Math.cos(phi2) + 41*thetad1*Math.cos(phi1)*Math.cos(phi2) + 41*phid1*Math.sin(phi2)*Math.sin(theta2) - 41*crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 41*thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) + 41*Math.cos(theta3)*(phid1*Math.sin(phi1)*Math.sin(phi2) - phid2*Math.cos(phi1)*Math.cos(phi2) - phid1*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2) + phid2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) + thetad2*Math.cos(phi2)*Math.sin(phi1)*Math.sin(theta2)) + 41*thetad3*Math.sin(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + 41*phid1*Math.cos(phi1)*Math.sin(theta2)*Math.sin(theta3) + 41*thetad2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3) + 41*thetad3*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2)) + (Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.sin(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) + Math.cos(phi3)*(10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) - 10*Math.cos(cr + theta1)*Math.sin(phi1) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1))*(5*Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2)*(crd + thetad1) + 10*thetad2*Math.sin(cr + theta1)*Math.cos(theta2) + 10*phid1*Math.cos(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + 10*thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) - 5*Math.sin(phi3)*(10*Math.sin(theta3)*(thetad2*Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(theta2)*(crd + thetad1) - thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2) + phid1*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)*(crd + thetad1)) - 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2)*(crd + thetad1) + thetad2*Math.sin(cr + theta1)*Math.cos(theta2) + phid1*Math.cos(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) - phid2*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)*(crd + thetad1) + phid1*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(phi2) + phid2*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 10*thetad3*Math.sin(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)) - 10*thetad3*Math.cos(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) - (117*crd*Math.cos(cr))/5 + (61*crd*Math.sin(cr))/20 + 5*Math.cos(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2)*(crd + thetad1) + thetad2*Math.sin(cr + theta1)*Math.cos(theta2) + phid1*Math.cos(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + 10*phid2*Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*phid1*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(phi2) + 10*phid2*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)*(crd + thetad1)) + 50*Math.sin(cr + theta1)*Math.sin(phi1)*(crd + thetad1) - 50*phid1*Math.cos(cr + theta1)*Math.cos(phi1) + 5*phid2*Math.cos(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 5*phid3*Math.cos(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) - 5*phid3*Math.sin(phi3)*(10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) - 50*phid1*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(phi2) + 50*phid2*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2) + 50*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)*(crd + thetad1)) - 3*(10*Math.cos(cr + theta1)*Math.sin(phi1) - Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1))*(5*Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2)*(crd + thetad1) + 10*thetad2*Math.sin(cr + theta1)*Math.cos(theta2) + 10*phid1*Math.cos(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + 10*thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) - (117*crd*Math.cos(cr))/5 + (61*crd*Math.sin(cr))/20 + 50*Math.sin(cr + theta1)*Math.sin(phi1)*(crd + thetad1) - 50*phid1*Math.cos(cr + theta1)*Math.cos(phi1) + 5*phid2*Math.cos(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 50*phid1*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(phi2) + 50*phid2*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2) + 50*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)*(crd + thetad1)) - 2*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1))*((Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))*(phid2/40 + (phid1*Math.cos(theta2))/40 + (crd*Math.sin(phi1)*Math.sin(theta2))/40 + (thetad1*Math.sin(phi1)*Math.sin(theta2))/40) - 41*phid2*Math.cos(phi1)*Math.cos(phi2) - Math.sin(phi1)*Math.sin(theta2)*(41*Math.cos(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) + 41*Math.sin(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) + 41*phid1*Math.sin(phi1)*Math.sin(phi2) - 41*phid1*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2) + 41*phid2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) + 41*thetad2*Math.cos(phi2)*Math.sin(phi1)*Math.sin(theta2)) - 2*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))*(Math.sin(phi1)*Math.sin(theta2)*(41*Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - 41*Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - (Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1))*(41*phid2 + 41*phid1*Math.cos(theta2) + 41*crd*Math.sin(phi1)*Math.sin(theta2) + 41*thetad1*Math.sin(phi1)*Math.sin(theta2)) + (phid1*Math.cos(phi2)*Math.sin(phi1))/40 + (phid2*Math.cos(phi1)*Math.sin(phi2))/40 + (phid1*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2))/40 + (phid2*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1))/40 - (thetad2*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta2))/40) + 3*(Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.sin(phi1) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1))*((61*crd*Math.cos(cr))/20 - 5*Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2)*(crd + thetad1) - 10*thetad2*Math.cos(cr + theta1)*Math.cos(theta2) + 10*phid1*Math.sin(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + 10*thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + (117*crd*Math.sin(cr))/5 + 50*Math.cos(cr + theta1)*Math.sin(phi1)*(crd + thetad1) + 50*phid1*Math.sin(cr + theta1)*Math.cos(phi1) + 5*phid2*Math.cos(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 50*phid1*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(phi2) - 50*phid2*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2) + 50*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)*(crd + thetad1)) - (Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))*((Math.sin(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2))*(41*Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - 41*Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2))) - (Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3))*(41*Math.sin(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) + 41*Math.cos(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2))) + (phid1*Math.cos(phi2)*Math.sin(phi1))/40 + (phid2*Math.cos(phi1)*Math.sin(phi2))/40 + (phid1*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2))/40 + (phid2*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1))/40 - (thetad2*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta2))/40) - 2*(Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2) + Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3))*((Math.cos(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) + Math.sin(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))*(41*Math.cos(phi3)*(thetad3 + thetad2*Math.cos(phi2) + crd*Math.cos(phi1)*Math.cos(phi2) + thetad1*Math.cos(phi1)*Math.cos(phi2) + phid1*Math.sin(phi2)*Math.sin(theta2) - crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) - 41*Math.sin(phi3)*(Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2)))) + (Math.sin(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) - Math.cos(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))*((Math.cos(phi3)*(Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2))))/40 + (Math.sin(phi3)*(thetad3 + thetad2*Math.cos(phi2) + crd*Math.cos(phi1)*Math.cos(phi2) + thetad1*Math.cos(phi1)*Math.cos(phi2) + phid1*Math.sin(phi2)*Math.sin(theta2) - crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))/40) - 41*phid2*Math.cos(phi1)*Math.cos(phi2)*Math.sin(theta3) - 41*phid1*Math.cos(phi1)*Math.cos(theta3)*Math.sin(theta2) - 41*thetad3*Math.cos(phi1)*Math.cos(theta3)*Math.sin(phi2) - 41*thetad2*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi1) + 41*phid1*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta3) + 41*thetad3*Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3) - 41*phid1*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2)*Math.sin(theta3) - 41*thetad3*Math.cos(phi2)*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi1) + 41*phid2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta3) + 41*thetad2*Math.cos(phi2)*Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) + (1639*phid1*Math.cos(phi1)*Math.sin(phi1))/10 + 30*Math.cos(cr + theta1)*Math.sin(phi1)*((117*crd*Math.cos(cr))/5 - (61*crd*Math.sin(cr))/20 - 50*Math.sin(cr + theta1)*Math.sin(phi1)*(crd + thetad1) + 50*phid1*Math.cos(cr + theta1)*Math.cos(phi1)) - Math.sin(phi1)*Math.sin(theta2)*(Math.cos(phi1)*((phid1*Math.sin(theta2))/40 - (Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))/40) - 41*phid1*Math.cos(phi1)*Math.sin(theta2) + Math.cos(theta2)*Math.sin(phi1)*(41*thetad2 + 41*crd*Math.cos(phi1) + 41*thetad1*Math.cos(phi1)) - 41*thetad2*Math.cos(theta2)*Math.sin(phi1)) - Math.cos(theta2)*Math.sin(phi1)*(Math.cos(phi1)*((phid1*Math.cos(theta2))/40 + (Math.sin(phi1)*Math.sin(theta2)*(crd + thetad1))/40) - 41*phid1*Math.cos(phi1)*Math.cos(theta2) - Math.sin(phi1)*Math.sin(theta2)*(41*thetad2 + 41*crd*Math.cos(phi1) + 41*thetad1*Math.cos(phi1)) + 41*thetad2*Math.sin(phi1)*Math.sin(theta2)) + 2*Math.sin(phi1)*Math.sin(theta2)*(((Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)))/40 - (Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1)))/40)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) - (41*Math.cos(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) + 41*Math.sin(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1)))*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + 41*phid1*Math.cos(phi1)*Math.sin(theta2) + 41*thetad2*Math.cos(theta2)*Math.sin(phi1)) + 30*Math.sin(cr + theta1)*Math.sin(phi1)*((61*crd*Math.cos(cr))/20 + (117*crd*Math.sin(cr))/5 + 50*Math.cos(cr + theta1)*Math.sin(phi1)*(crd + thetad1) + 50*phid1*Math.sin(cr + theta1)*Math.cos(phi1))",
        "vars": [
          "cr",
          "crd",
          "phi1",
          "phi2",
          "phi3",
          "phid1",
          "phid2",
          "phid3",
          "theta1",
          "theta2",
          "theta3",
          "thetad1",
          "thetad2",
          "thetad3"
        ]
      },
      {
        "expr": "3*(10*crd*Math.sin(cr) + 5*cr*crd*Math.cos(cr))*(10*Math.cos(cr + theta1)*Math.sin(phi1) - Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) - (10*crd*Math.sin(cr) + 5*cr*crd*Math.cos(cr))*(Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.sin(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) + Math.cos(phi3)*(10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) - 10*Math.cos(cr + theta1)*Math.sin(phi1) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) - 3*(10*crd*Math.cos(cr) - 5*cr*crd*Math.sin(cr))*(Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.sin(phi1) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) - (10*crd*Math.cos(cr) - 5*cr*crd*Math.sin(cr))*(Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.sin(phi3)*(10*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) + Math.cos(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 10*Math.sin(cr + theta1)*Math.sin(phi1) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 30*Math.cos(cr + theta1)*Math.sin(phi1)*(10*crd*Math.sin(cr) + 5*cr*crd*Math.cos(cr)) - 30*Math.sin(cr + theta1)*Math.sin(phi1)*(10*crd*Math.cos(cr) - 5*cr*crd*Math.sin(cr))",
        "vars": [
          "cr",
          "crd",
          "phi1",
          "phi2",
          "phi3",
          "theta1",
          "theta2",
          "theta3"
        ]
      },
      {
        "expr": "2*(Math.cos(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) + Math.sin(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))*((41*Math.cos(phi3)*(thetad3 + thetad2*Math.cos(phi2) + crd*Math.cos(phi1)*Math.cos(phi2) + thetad1*Math.cos(phi1)*Math.cos(phi2) + phid1*Math.sin(phi2)*Math.sin(theta2) - crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) - 41*Math.sin(phi3)*(Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2))))*(Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2) + Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3)) + (Math.sin(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) - Math.cos(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))*(phid3/40 + (phid2*Math.cos(theta3))/40 + (phid1*Math.cos(theta2)*Math.cos(theta3))/40 + (thetad2*Math.sin(phi2)*Math.sin(theta3))/40 + (crd*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3))/40 + (crd*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2))/40 + (thetad1*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3))/40 - (phid1*Math.cos(phi2)*Math.sin(theta2)*Math.sin(theta3))/40 + (thetad1*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2))/40 + (crd*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3))/40 + (thetad1*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3))/40) - 41*Math.cos(phi3)*(Math.cos(theta3)*(phid1*Math.sin(phi1)*Math.sin(phi2) - phid2*Math.cos(phi1)*Math.cos(phi2) - phid1*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2) + phid2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) + thetad2*Math.cos(phi2)*Math.sin(phi1)*Math.sin(theta2)) + thetad3*Math.sin(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + phid1*Math.cos(phi1)*Math.sin(theta2)*Math.sin(theta3) + thetad2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3) + thetad3*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2)) - 41*Math.sin(phi3)*(phid1*Math.cos(phi2)*Math.sin(phi1) + phid2*Math.cos(phi1)*Math.sin(phi2) + phid1*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2) + phid2*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1) - thetad2*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta2)) + 41*phid3*Math.cos(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) - 41*phid3*Math.sin(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3))) + 2*(Math.sin(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) - Math.cos(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))*((41*Math.cos(phi3)*(Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2))) + 41*Math.sin(phi3)*(thetad3 + thetad2*Math.cos(phi2) + crd*Math.cos(phi1)*Math.cos(phi2) + thetad1*Math.cos(phi1)*Math.cos(phi2) + phid1*Math.sin(phi2)*Math.sin(theta2) - crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))*(Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2) + Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3)) - (Math.cos(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) + Math.sin(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))*(41*phid3 + 41*phid2*Math.cos(theta3) + 41*phid1*Math.cos(theta2)*Math.cos(theta3) + 41*thetad2*Math.sin(phi2)*Math.sin(theta3) + 41*crd*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3) + 41*crd*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2) + 41*thetad1*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3) - 41*phid1*Math.cos(phi2)*Math.sin(theta2)*Math.sin(theta3) + 41*thetad1*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2) + 41*crd*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3) + 41*thetad1*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3)) + (Math.cos(phi3)*(phid1*Math.cos(phi2)*Math.sin(phi1) + phid2*Math.cos(phi1)*Math.sin(phi2) + phid1*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2) + phid2*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1) - thetad2*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta2)))/40 - (Math.sin(phi3)*(Math.cos(theta3)*(phid1*Math.sin(phi1)*Math.sin(phi2) - phid2*Math.cos(phi1)*Math.cos(phi2) - phid1*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2) + phid2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) + thetad2*Math.cos(phi2)*Math.sin(phi1)*Math.sin(theta2)) + thetad3*Math.sin(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + phid1*Math.cos(phi1)*Math.sin(theta2)*Math.sin(theta3) + thetad2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3) + thetad3*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2)))/40 + (phid3*Math.sin(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))/40 + (phid3*Math.cos(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)))/40) + (Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.sin(phi3)*(10*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) + Math.cos(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 10*Math.sin(cr + theta1)*Math.sin(phi1) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1))*(5*Math.cos(phi3)*(10*phid2*Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2)*(crd + thetad1) - thetad2*Math.cos(cr + theta1)*Math.cos(theta2) + phid1*Math.sin(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + 10*phid1*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(phi2) - 10*phid2*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2) + 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)*(crd + thetad1)) - 5*Math.sin(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2)*(crd + thetad1) + thetad2*Math.cos(cr + theta1)*Math.sin(theta2) + thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2) - phid1*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)*(crd + thetad1)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2)*(crd + thetad1) - thetad2*Math.cos(cr + theta1)*Math.cos(theta2) + phid1*Math.sin(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + phid2*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + phid1*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(phi2) + phid2*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)*(crd + thetad1)) + 10*thetad3*Math.sin(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)) - 10*thetad3*Math.cos(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) - 5*Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2)*(crd + thetad1) - 10*thetad2*Math.cos(cr + theta1)*Math.cos(theta2) + 10*phid1*Math.sin(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + 10*thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) - 5*phid3*Math.sin(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 50*Math.cos(cr + theta1)*Math.sin(phi1)*(crd + thetad1) + 50*phid1*Math.sin(cr + theta1)*Math.cos(phi1) + 5*phid2*Math.cos(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 5*phid3*Math.cos(phi3)*(10*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) + 50*phid1*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(phi2) - 50*phid2*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2) + 50*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)*(crd + thetad1)) + (Math.sin(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2))*((Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))*((Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))))/40 - (Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2)))/40) - (Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3))*(41*thetad3 + 41*thetad2*Math.cos(phi2) + 41*crd*Math.cos(phi1)*Math.cos(phi2) + 41*thetad1*Math.cos(phi1)*Math.cos(phi2) + 41*phid1*Math.sin(phi2)*Math.sin(theta2) - 41*crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 41*thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) - 41*Math.sin(theta3)*(phid1*Math.sin(phi1)*Math.sin(phi2) - phid2*Math.cos(phi1)*Math.cos(phi2) - phid1*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2) + phid2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) + thetad2*Math.cos(phi2)*Math.sin(phi1)*Math.sin(theta2)) + 41*thetad3*Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + 41*phid1*Math.cos(phi1)*Math.cos(theta3)*Math.sin(theta2) + 41*thetad2*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi1) - 41*thetad3*Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) + (Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.sin(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) + Math.cos(phi3)*(10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) - 10*Math.cos(cr + theta1)*Math.sin(phi1) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1))*(5*Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2)*(crd + thetad1) + 10*thetad2*Math.sin(cr + theta1)*Math.cos(theta2) + 10*phid1*Math.cos(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + 10*thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) - 5*Math.sin(phi3)*(10*Math.sin(theta3)*(thetad2*Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(theta2)*(crd + thetad1) - thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2) + phid1*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)*(crd + thetad1)) - 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2)*(crd + thetad1) + thetad2*Math.sin(cr + theta1)*Math.cos(theta2) + phid1*Math.cos(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) - phid2*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)*(crd + thetad1) + phid1*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(phi2) + phid2*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 10*thetad3*Math.sin(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)) - 10*thetad3*Math.cos(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) + 5*Math.cos(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2)*(crd + thetad1) + thetad2*Math.sin(cr + theta1)*Math.cos(theta2) + phid1*Math.cos(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + 10*phid2*Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*phid1*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(phi2) + 10*phid2*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)*(crd + thetad1)) + 50*Math.sin(cr + theta1)*Math.sin(phi1)*(crd + thetad1) - 50*phid1*Math.cos(cr + theta1)*Math.cos(phi1) + 5*phid2*Math.cos(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 5*phid3*Math.cos(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) - 5*phid3*Math.sin(phi3)*(10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) - 50*phid1*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(phi2) + 50*phid2*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2) + 50*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)*(crd + thetad1)) + Math.cos(phi1)*(Math.cos(theta2)*Math.sin(phi1)*(41*phid1*Math.cos(theta2) + 41*Math.sin(phi1)*Math.sin(theta2)*(crd + thetad1)) - (phid1*Math.sin(phi1))/40 + Math.sin(phi1)*Math.sin(theta2)*(41*phid1*Math.sin(theta2) - 41*Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - (Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3))*((Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))*((Math.sin(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))))/40 + (Math.cos(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2)))/40) - (Math.sin(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2))*(41*thetad3 + 41*thetad2*Math.cos(phi2) + 41*crd*Math.cos(phi1)*Math.cos(phi2) + 41*thetad1*Math.cos(phi1)*Math.cos(phi2) + 41*phid1*Math.sin(phi2)*Math.sin(theta2) - 41*crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 41*thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) + 41*Math.cos(theta3)*(phid1*Math.sin(phi1)*Math.sin(phi2) - phid2*Math.cos(phi1)*Math.cos(phi2) - phid1*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2) + phid2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) + thetad2*Math.cos(phi2)*Math.sin(phi1)*Math.sin(theta2)) + 41*thetad3*Math.sin(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + 41*phid1*Math.cos(phi1)*Math.sin(theta2)*Math.sin(theta3) + 41*thetad2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3) + 41*thetad3*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2)) - 3*(10*Math.cos(cr + theta1)*Math.sin(phi1) - Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1))*(5*Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2)*(crd + thetad1) + 10*thetad2*Math.sin(cr + theta1)*Math.cos(theta2) + 10*phid1*Math.cos(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + 10*thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + 50*Math.sin(cr + theta1)*Math.sin(phi1)*(crd + thetad1) - 50*phid1*Math.cos(cr + theta1)*Math.cos(phi1) + 5*phid2*Math.cos(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 50*phid1*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(phi2) + 50*phid2*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2) + 50*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)*(crd + thetad1)) - 2*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1))*((Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))*(phid2/40 + (phid1*Math.cos(theta2))/40 + (crd*Math.sin(phi1)*Math.sin(theta2))/40 + (thetad1*Math.sin(phi1)*Math.sin(theta2))/40) - 41*phid2*Math.cos(phi1)*Math.cos(phi2) - Math.sin(phi1)*Math.sin(theta2)*(41*Math.cos(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) + 41*Math.sin(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) + 41*phid1*Math.sin(phi1)*Math.sin(phi2) - 41*phid1*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2) + 41*phid2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) + 41*thetad2*Math.cos(phi2)*Math.sin(phi1)*Math.sin(theta2)) + 3*(Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.sin(phi1) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1))*(50*Math.cos(cr + theta1)*Math.sin(phi1)*(crd + thetad1) - 5*Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2)*(crd + thetad1) - 10*thetad2*Math.cos(cr + theta1)*Math.cos(theta2) + 10*phid1*Math.sin(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + 10*thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + 50*phid1*Math.sin(cr + theta1)*Math.cos(phi1) + 5*phid2*Math.cos(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 50*phid1*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(phi2) - 50*phid2*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2) + 50*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)*(crd + thetad1)) - 2*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))*(Math.sin(phi1)*Math.sin(theta2)*(41*Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - 41*Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - (Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1))*(41*phid2 + 41*phid1*Math.cos(theta2) + 41*crd*Math.sin(phi1)*Math.sin(theta2) + 41*thetad1*Math.sin(phi1)*Math.sin(theta2)) + (phid1*Math.cos(phi2)*Math.sin(phi1))/40 + (phid2*Math.cos(phi1)*Math.sin(phi2))/40 + (phid1*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2))/40 + (phid2*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1))/40 - (thetad2*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta2))/40) - (Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))*((Math.sin(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2))*(41*Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - 41*Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2))) - (Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3))*(41*Math.sin(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) + 41*Math.cos(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2))) + (phid1*Math.cos(phi2)*Math.sin(phi1))/40 + (phid2*Math.cos(phi1)*Math.sin(phi2))/40 + (phid1*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2))/40 + (phid2*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1))/40 - (thetad2*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta2))/40) - 2*(Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2) + Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3))*((Math.cos(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) + Math.sin(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))*(41*Math.cos(phi3)*(thetad3 + thetad2*Math.cos(phi2) + crd*Math.cos(phi1)*Math.cos(phi2) + thetad1*Math.cos(phi1)*Math.cos(phi2) + phid1*Math.sin(phi2)*Math.sin(theta2) - crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) - 41*Math.sin(phi3)*(Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2)))) + (Math.sin(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) - Math.cos(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))*((Math.cos(phi3)*(Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2))))/40 + (Math.sin(phi3)*(thetad3 + thetad2*Math.cos(phi2) + crd*Math.cos(phi1)*Math.cos(phi2) + thetad1*Math.cos(phi1)*Math.cos(phi2) + phid1*Math.sin(phi2)*Math.sin(theta2) - crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))/40) - 41*phid2*Math.cos(phi1)*Math.cos(phi2)*Math.sin(theta3) - 41*phid1*Math.cos(phi1)*Math.cos(theta3)*Math.sin(theta2) - 41*thetad3*Math.cos(phi1)*Math.cos(theta3)*Math.sin(phi2) - 41*thetad2*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi1) + 41*phid1*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta3) + 41*thetad3*Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3) - 41*phid1*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2)*Math.sin(theta3) - 41*thetad3*Math.cos(phi2)*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi1) + 41*phid2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta3) + 41*thetad2*Math.cos(phi2)*Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) + (1639*phid1*Math.cos(phi1)*Math.sin(phi1))/10 - 30*Math.cos(cr + theta1)*Math.sin(phi1)*(50*Math.sin(cr + theta1)*Math.sin(phi1)*(crd + thetad1) - 50*phid1*Math.cos(cr + theta1)*Math.cos(phi1)) + 30*Math.sin(cr + theta1)*Math.sin(phi1)*(50*Math.cos(cr + theta1)*Math.sin(phi1)*(crd + thetad1) + 50*phid1*Math.sin(cr + theta1)*Math.cos(phi1)) - Math.sin(phi1)*Math.sin(theta2)*(Math.cos(phi1)*((phid1*Math.sin(theta2))/40 - (Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))/40) - 41*phid1*Math.cos(phi1)*Math.sin(theta2) + Math.cos(theta2)*Math.sin(phi1)*(41*thetad2 + 41*crd*Math.cos(phi1) + 41*thetad1*Math.cos(phi1)) - 41*thetad2*Math.cos(theta2)*Math.sin(phi1)) - Math.cos(theta2)*Math.sin(phi1)*(Math.cos(phi1)*((phid1*Math.cos(theta2))/40 + (Math.sin(phi1)*Math.sin(theta2)*(crd + thetad1))/40) - 41*phid1*Math.cos(phi1)*Math.cos(theta2) - Math.sin(phi1)*Math.sin(theta2)*(41*thetad2 + 41*crd*Math.cos(phi1) + 41*thetad1*Math.cos(phi1)) + 41*thetad2*Math.sin(phi1)*Math.sin(theta2)) + 2*Math.sin(phi1)*Math.sin(theta2)*(((Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)))/40 - (Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1)))/40)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) - (41*Math.cos(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) + 41*Math.sin(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1)))*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + 41*phid1*Math.cos(phi1)*Math.sin(theta2) + 41*thetad2*Math.cos(theta2)*Math.sin(phi1))",
        "vars": [
          "cr",
          "crd",
          "phi1",
          "phi2",
          "phi3",
          "phid1",
          "phid2",
          "phid3",
          "theta1",
          "theta2",
          "theta3",
          "thetad1",
          "thetad2",
          "thetad3"
        ]
      },
      {
        "expr": "(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3))*((Math.cos(theta2)*Math.cos(theta3) - Math.cos(phi2)*Math.sin(theta2)*Math.sin(theta3))*(41*thetad3 + 41*thetad2*Math.cos(phi2) + 41*crd*Math.cos(phi1)*Math.cos(phi2) + 41*thetad1*Math.cos(phi1)*Math.cos(phi2) + 41*phid1*Math.sin(phi2)*Math.sin(theta2) - 41*crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 41*thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) - Math.sin(phi2)*Math.sin(theta2)*((Math.sin(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))))/40 + (Math.cos(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2)))/40) - 41*thetad3*Math.cos(theta2)*Math.cos(theta3) + 41*thetad2*Math.sin(theta2)*Math.sin(theta3) - 41*thetad2*Math.cos(phi2)*Math.cos(theta2)*Math.cos(theta3) + 41*phid2*Math.cos(theta3)*Math.sin(phi2)*Math.sin(theta2) + 41*thetad3*Math.cos(phi2)*Math.sin(theta2)*Math.sin(theta3)) - 3*(5*Math.sin(cr + theta1)*(10*phid1*Math.sin(phi1) + 10*phid1*Math.cos(phi2)*Math.sin(phi1) + 10*phid2*Math.cos(phi1)*Math.sin(phi2) + 10*phid1*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2) + 10*phid2*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1) - 10*thetad2*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta2)) - 5*Math.cos(cr + theta1)*(crd + thetad1)*(10*Math.cos(phi1) + 10*Math.cos(phi1)*Math.cos(phi2) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))*(10*Math.cos(cr + theta1)*Math.sin(phi1) - Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 3*(5*Math.cos(cr + theta1)*(10*phid1*Math.sin(phi1) + 10*phid1*Math.cos(phi2)*Math.sin(phi1) + 10*phid2*Math.cos(phi1)*Math.sin(phi2) + 10*phid1*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2) + 10*phid2*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1) - 10*thetad2*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta2)) + 5*Math.sin(cr + theta1)*(crd + thetad1)*(10*Math.cos(phi1) + 10*Math.cos(phi1)*Math.cos(phi2) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))*(Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.sin(phi1) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) - (Math.sin(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2))*(41*thetad2*Math.cos(theta3)*Math.sin(theta2) - Math.sin(phi2)*Math.sin(theta2)*((Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))))/40 - (Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2)))/40) - (Math.cos(theta2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta3)*Math.sin(theta2))*(41*thetad3 + 41*thetad2*Math.cos(phi2) + 41*crd*Math.cos(phi1)*Math.cos(phi2) + 41*thetad1*Math.cos(phi1)*Math.cos(phi2) + 41*phid1*Math.sin(phi2)*Math.sin(theta2) - 41*crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 41*thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) + 41*thetad3*Math.cos(theta2)*Math.sin(theta3) + 41*thetad2*Math.cos(phi2)*Math.cos(theta2)*Math.sin(theta3) + 41*thetad3*Math.cos(phi2)*Math.cos(theta3)*Math.sin(theta2) - 41*phid2*Math.sin(phi2)*Math.sin(theta2)*Math.sin(theta3)) - 2*(Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2) + Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3))*(41*thetad2*Math.cos(theta3)*Math.sin(theta2) - (Math.cos(phi3)*(Math.cos(theta2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta3)*Math.sin(theta2)) - Math.sin(phi2)*Math.sin(phi3)*Math.sin(theta2))*(41*Math.cos(phi3)*(thetad3 + thetad2*Math.cos(phi2) + crd*Math.cos(phi1)*Math.cos(phi2) + thetad1*Math.cos(phi1)*Math.cos(phi2) + phid1*Math.sin(phi2)*Math.sin(theta2) - crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) - 41*Math.sin(phi3)*(Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2)))) - (Math.sin(phi3)*(Math.cos(theta2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta3)*Math.sin(theta2)) + Math.cos(phi3)*Math.sin(phi2)*Math.sin(theta2))*((Math.cos(phi3)*(Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2))))/40 + (Math.sin(phi3)*(thetad3 + thetad2*Math.cos(phi2) + crd*Math.cos(phi1)*Math.cos(phi2) + thetad1*Math.cos(phi1)*Math.cos(phi2) + phid1*Math.sin(phi2)*Math.sin(theta2) - crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))/40) + 41*thetad3*Math.cos(theta2)*Math.sin(theta3) + 41*thetad2*Math.cos(phi2)*Math.cos(theta2)*Math.sin(theta3) + 41*thetad3*Math.cos(phi2)*Math.cos(theta3)*Math.sin(theta2) - 41*phid2*Math.sin(phi2)*Math.sin(theta2)*Math.sin(theta3)) + (5*Math.sin(cr + theta1)*(10*phid1*Math.sin(phi1) + 10*phid1*Math.cos(phi2)*Math.sin(phi1) + 10*phid2*Math.cos(phi1)*Math.sin(phi2) + 10*phid1*Math.cos(phi2)*Math.cos(phi3)*Math.sin(phi1) + 10*phid2*Math.cos(phi1)*Math.cos(phi3)*Math.sin(phi2) + 10*phid3*Math.cos(phi1)*Math.cos(phi2)*Math.sin(phi3) + 10*phid1*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2) + 10*phid2*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1) - 10*thetad2*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta2) + 10*phid1*Math.cos(phi1)*Math.cos(phi3)*Math.cos(theta2)*Math.sin(phi2) + 10*phid2*Math.cos(phi2)*Math.cos(phi3)*Math.cos(theta2)*Math.sin(phi1) + 10*phid2*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta3)*Math.sin(phi3) + 10*phid3*Math.cos(phi1)*Math.cos(phi3)*Math.cos(theta3)*Math.sin(phi2) - 10*phid1*Math.cos(theta3)*Math.sin(phi1)*Math.sin(phi2)*Math.sin(phi3) - 10*phid3*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)*Math.sin(phi3) - 10*phid1*Math.cos(phi1)*Math.sin(phi3)*Math.sin(theta2)*Math.sin(theta3) - 10*thetad2*Math.cos(phi3)*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta2) - 10*phid3*Math.cos(phi3)*Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3) - 10*thetad3*Math.cos(phi1)*Math.sin(phi2)*Math.sin(phi3)*Math.sin(theta3) - 10*thetad2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi3)*Math.sin(theta3) - 10*thetad3*Math.cos(theta3)*Math.sin(phi1)*Math.sin(phi3)*Math.sin(theta2) + 10*phid1*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi3) + 10*phid3*Math.cos(phi2)*Math.cos(phi3)*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi1) - 10*phid2*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi1)*Math.sin(phi2)*Math.sin(phi3) - 10*thetad2*Math.cos(phi2)*Math.cos(theta3)*Math.sin(phi1)*Math.sin(phi3)*Math.sin(theta2) - 10*thetad3*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi3)*Math.sin(theta3)) - 5*Math.cos(cr + theta1)*(crd + thetad1)*(10*Math.cos(phi1) + 10*Math.cos(phi1)*Math.cos(phi2) + 10*Math.cos(phi1)*Math.cos(phi2)*Math.cos(phi3) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 10*Math.cos(phi3)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 10*Math.cos(phi1)*Math.cos(theta3)*Math.sin(phi2)*Math.sin(phi3) + 10*Math.sin(phi1)*Math.sin(phi3)*Math.sin(theta2)*Math.sin(theta3) - 10*Math.cos(phi2)*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi1)*Math.sin(phi3)))*(Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.sin(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) + Math.cos(phi3)*(10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) - 10*Math.cos(cr + theta1)*Math.sin(phi1) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) - (Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))*((Math.cos(theta2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta3)*Math.sin(theta2))*(41*Math.sin(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) + 41*Math.cos(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2))) + (Math.cos(theta2)*Math.cos(theta3) - Math.cos(phi2)*Math.sin(theta2)*Math.sin(theta3))*(41*Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - 41*Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2))) - (phid2*Math.cos(phi2)*Math.sin(theta2))/40 - (thetad2*Math.cos(theta2)*Math.sin(phi2))/40) + (5*Math.cos(cr + theta1)*(10*phid1*Math.sin(phi1) + 10*phid1*Math.cos(phi2)*Math.sin(phi1) + 10*phid2*Math.cos(phi1)*Math.sin(phi2) + 10*phid1*Math.cos(phi2)*Math.cos(phi3)*Math.sin(phi1) + 10*phid2*Math.cos(phi1)*Math.cos(phi3)*Math.sin(phi2) + 10*phid3*Math.cos(phi1)*Math.cos(phi2)*Math.sin(phi3) + 10*phid1*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2) + 10*phid2*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1) - 10*thetad2*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta2) + 10*phid1*Math.cos(phi1)*Math.cos(phi3)*Math.cos(theta2)*Math.sin(phi2) + 10*phid2*Math.cos(phi2)*Math.cos(phi3)*Math.cos(theta2)*Math.sin(phi1) + 10*phid2*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta3)*Math.sin(phi3) + 10*phid3*Math.cos(phi1)*Math.cos(phi3)*Math.cos(theta3)*Math.sin(phi2) - 10*phid1*Math.cos(theta3)*Math.sin(phi1)*Math.sin(phi2)*Math.sin(phi3) - 10*phid3*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)*Math.sin(phi3) - 10*phid1*Math.cos(phi1)*Math.sin(phi3)*Math.sin(theta2)*Math.sin(theta3) - 10*thetad2*Math.cos(phi3)*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta2) - 10*phid3*Math.cos(phi3)*Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3) - 10*thetad3*Math.cos(phi1)*Math.sin(phi2)*Math.sin(phi3)*Math.sin(theta3) - 10*thetad2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi3)*Math.sin(theta3) - 10*thetad3*Math.cos(theta3)*Math.sin(phi1)*Math.sin(phi3)*Math.sin(theta2) + 10*phid1*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi3) + 10*phid3*Math.cos(phi2)*Math.cos(phi3)*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi1) - 10*phid2*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi1)*Math.sin(phi2)*Math.sin(phi3) - 10*thetad2*Math.cos(phi2)*Math.cos(theta3)*Math.sin(phi1)*Math.sin(phi3)*Math.sin(theta2) - 10*thetad3*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi3)*Math.sin(theta3)) + 5*Math.sin(cr + theta1)*(crd + thetad1)*(10*Math.cos(phi1) + 10*Math.cos(phi1)*Math.cos(phi2) + 10*Math.cos(phi1)*Math.cos(phi2)*Math.cos(phi3) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 10*Math.cos(phi3)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 10*Math.cos(phi1)*Math.cos(theta3)*Math.sin(phi2)*Math.sin(phi3) + 10*Math.sin(phi1)*Math.sin(phi3)*Math.sin(theta2)*Math.sin(theta3) - 10*Math.cos(phi2)*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi1)*Math.sin(phi3)))*(Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.sin(phi3)*(10*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) + Math.cos(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 10*Math.sin(cr + theta1)*Math.sin(phi1) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 2*(Math.sin(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) - Math.cos(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))*((Math.sin(phi3)*(thetad2*Math.sin(theta2)*Math.sin(theta3) - thetad3*Math.cos(theta2)*Math.cos(theta3) - thetad2*Math.cos(phi2)*Math.cos(theta2)*Math.cos(theta3) + phid2*Math.cos(theta3)*Math.sin(phi2)*Math.sin(theta2) + thetad3*Math.cos(phi2)*Math.sin(theta2)*Math.sin(theta3)))/40 + (Math.cos(phi3)*(Math.cos(theta2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta3)*Math.sin(theta2)) - Math.sin(phi2)*Math.sin(phi3)*Math.sin(theta2))*(41*phid3 + 41*phid2*Math.cos(theta3) + 41*phid1*Math.cos(theta2)*Math.cos(theta3) + 41*thetad2*Math.sin(phi2)*Math.sin(theta3) + 41*crd*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3) + 41*crd*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2) + 41*thetad1*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3) - 41*phid1*Math.cos(phi2)*Math.sin(theta2)*Math.sin(theta3) + 41*thetad1*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2) + 41*crd*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3) + 41*thetad1*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3)) + (Math.cos(theta2)*Math.cos(theta3) - Math.cos(phi2)*Math.sin(theta2)*Math.sin(theta3))*(41*Math.cos(phi3)*(Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2))) + 41*Math.sin(phi3)*(thetad3 + thetad2*Math.cos(phi2) + crd*Math.cos(phi1)*Math.cos(phi2) + thetad1*Math.cos(phi1)*Math.cos(phi2) + phid1*Math.sin(phi2)*Math.sin(theta2) - crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))) - (phid3*Math.cos(phi3)*(Math.cos(theta2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta3)*Math.sin(theta2)))/40 - (phid2*Math.cos(phi2)*Math.cos(phi3)*Math.sin(theta2))/40 - (thetad2*Math.cos(phi3)*Math.cos(theta2)*Math.sin(phi2))/40 + (phid3*Math.sin(phi2)*Math.sin(phi3)*Math.sin(theta2))/40) + 2*(Math.cos(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) + Math.sin(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))*((Math.cos(theta2)*Math.cos(theta3) - Math.cos(phi2)*Math.sin(theta2)*Math.sin(theta3))*(41*Math.cos(phi3)*(thetad3 + thetad2*Math.cos(phi2) + crd*Math.cos(phi1)*Math.cos(phi2) + thetad1*Math.cos(phi1)*Math.cos(phi2) + phid1*Math.sin(phi2)*Math.sin(theta2) - crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) - 41*Math.sin(phi3)*(Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2)))) - (Math.sin(phi3)*(Math.cos(theta2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta3)*Math.sin(theta2)) + Math.cos(phi3)*Math.sin(phi2)*Math.sin(theta2))*(phid3/40 + (phid2*Math.cos(theta3))/40 + (phid1*Math.cos(theta2)*Math.cos(theta3))/40 + (thetad2*Math.sin(phi2)*Math.sin(theta3))/40 + (crd*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3))/40 + (crd*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2))/40 + (thetad1*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3))/40 - (phid1*Math.cos(phi2)*Math.sin(theta2)*Math.sin(theta3))/40 + (thetad1*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2))/40 + (crd*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3))/40 + (thetad1*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3))/40) + 41*Math.cos(phi3)*(thetad2*Math.sin(theta2)*Math.sin(theta3) - thetad3*Math.cos(theta2)*Math.cos(theta3) - thetad2*Math.cos(phi2)*Math.cos(theta2)*Math.cos(theta3) + phid2*Math.cos(theta3)*Math.sin(phi2)*Math.sin(theta2) + thetad3*Math.cos(phi2)*Math.sin(theta2)*Math.sin(theta3)) + 41*phid3*Math.sin(phi3)*(Math.cos(theta2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta3)*Math.sin(theta2)) + 41*phid2*Math.cos(phi2)*Math.sin(phi3)*Math.sin(theta2) + 41*phid3*Math.cos(phi3)*Math.sin(phi2)*Math.sin(theta2) + 41*thetad2*Math.cos(theta2)*Math.sin(phi2)*Math.sin(phi3)) + Math.cos(phi1)*(Math.cos(theta2)*(41*phid1*Math.sin(theta2) - 41*Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1)) - Math.sin(theta2)*(41*phid1*Math.cos(theta2) + 41*Math.sin(phi1)*Math.sin(theta2)*(crd + thetad1))) - 2*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))*(Math.cos(theta2)*(41*Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - 41*Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) + Math.cos(phi2)*Math.sin(theta2)*(41*phid2 + 41*phid1*Math.cos(theta2) + 41*crd*Math.sin(phi1)*Math.sin(theta2) + 41*thetad1*Math.sin(phi1)*Math.sin(theta2)) - (phid2*Math.cos(phi2)*Math.sin(theta2))/40 - (thetad2*Math.cos(theta2)*Math.sin(phi2))/40) + 2*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1))*(Math.cos(theta2)*(41*Math.cos(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) + 41*Math.sin(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - Math.sin(phi2)*Math.sin(theta2)*(phid2/40 + (phid1*Math.cos(theta2))/40 + (crd*Math.sin(phi1)*Math.sin(theta2))/40 + (thetad1*Math.sin(phi1)*Math.sin(theta2))/40) - 41*thetad2*Math.cos(phi2)*Math.cos(theta2) + 41*phid2*Math.sin(phi2)*Math.sin(theta2)) + 2*Math.sin(phi1)*Math.sin(theta2)*(Math.cos(phi2)*Math.sin(theta2)*(41*Math.cos(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) + 41*Math.sin(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - 41*thetad2*Math.sin(theta2) + Math.sin(phi2)*Math.sin(theta2)*((Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)))/40 - (Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1)))/40)) + 30*Math.cos(cr + theta1)*Math.sin(phi1)*(50*Math.cos(cr + theta1)*Math.cos(phi1)*(crd + thetad1) - 50*phid1*Math.sin(cr + theta1)*Math.sin(phi1)) + 30*Math.sin(cr + theta1)*Math.sin(phi1)*(50*Math.sin(cr + theta1)*Math.cos(phi1)*(crd + thetad1) + 50*phid1*Math.cos(cr + theta1)*Math.sin(phi1)) + Math.cos(theta2)*Math.sin(phi1)*(Math.cos(theta2)*(41*thetad2 + 41*crd*Math.cos(phi1) + 41*thetad1*Math.cos(phi1)) - 41*thetad2*Math.cos(theta2)) + Math.sin(phi1)*Math.sin(theta2)*(Math.sin(theta2)*(41*thetad2 + 41*crd*Math.cos(phi1) + 41*thetad1*Math.cos(phi1)) - 41*thetad2*Math.sin(theta2))",
        "vars": [
          "cr",
          "crd",
          "phi1",
          "phi2",
          "phi3",
          "phid1",
          "phid2",
          "phid3",
          "theta1",
          "theta2",
          "theta3",
          "thetad1",
          "thetad2",
          "thetad3"
        ]
      },
      {
        "expr": "2*(Math.sin(phi2)*(41*phid2 + 41*phid1*Math.cos(theta2) + 41*crd*Math.sin(phi1)*Math.sin(theta2) + 41*thetad1*Math.sin(phi1)*Math.sin(theta2)) - (phid2*Math.sin(phi2))/40)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) - 3*(5*Math.sin(phi2)*(10*thetad2*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(theta2)*(crd + thetad1) - 10*thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2) + 10*phid1*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)*(crd + thetad1)) - 5*phid2*Math.cos(phi2)*(10*Math.sin(cr + theta1)*Math.cos(theta2) + 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)))*(Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.sin(phi1) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) - 2*(Math.cos(phi2)*(phid2/40 + (phid1*Math.cos(theta2))/40 + (crd*Math.sin(phi1)*Math.sin(theta2))/40 + (thetad1*Math.sin(phi1)*Math.sin(theta2))/40) - 41*phid2*Math.cos(phi2))*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + (Math.sin(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2))*(Math.cos(phi2)*((Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))))/40 - (Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2)))/40) - Math.cos(theta3)*Math.sin(phi2)*(41*thetad3 + 41*thetad2*Math.cos(phi2) + 41*crd*Math.cos(phi1)*Math.cos(phi2) + 41*thetad1*Math.cos(phi1)*Math.cos(phi2) + 41*phid1*Math.sin(phi2)*Math.sin(theta2) - 41*crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 41*thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) + 41*phid2*Math.cos(phi2)*Math.sin(theta3) + 41*thetad3*Math.cos(theta3)*Math.sin(phi2)) - (Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.sin(phi3)*(10*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) + Math.cos(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 10*Math.sin(cr + theta1)*Math.sin(phi1) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1))*(5*Math.sin(phi2)*(10*thetad2*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(theta2)*(crd + thetad1) - 10*thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2) + 10*phid1*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)*(crd + thetad1)) + 5*Math.sin(phi3)*(10*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.sin(theta2)*(crd + thetad1) + thetad2*Math.sin(cr + theta1)*Math.cos(theta2) + phid1*Math.cos(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + 10*Math.cos(phi2)*Math.cos(theta3)*(thetad2*Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(theta2)*(crd + thetad1) - thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2) + phid1*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)*(crd + thetad1)) + 10*thetad3*Math.cos(theta3)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*phid2*Math.cos(theta3)*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*thetad3*Math.cos(phi2)*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) + 5*Math.cos(phi3)*Math.sin(phi2)*(10*thetad2*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(theta2)*(crd + thetad1) - 10*thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2) + 10*phid1*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)*(crd + thetad1)) + 5*phid3*Math.cos(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(phi2)*Math.cos(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) - 5*phid2*Math.cos(phi2)*(10*Math.sin(cr + theta1)*Math.cos(theta2) + 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) - 5*phid2*Math.cos(phi2)*Math.cos(phi3)*(10*Math.sin(cr + theta1)*Math.cos(theta2) + 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 5*phid3*Math.sin(phi2)*Math.sin(phi3)*(10*Math.sin(cr + theta1)*Math.cos(theta2) + 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) + (Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.sin(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) + Math.cos(phi3)*(10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) - 10*Math.cos(cr + theta1)*Math.sin(phi1) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1))*(5*Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.cos(theta2)*(crd + thetad1) + 10*thetad2*Math.cos(cr + theta1)*Math.sin(theta2) + 10*thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2) - 10*phid1*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(theta2) + 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)*(crd + thetad1)) + 5*Math.sin(phi3)*(10*Math.cos(phi2)*Math.cos(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2)*(crd + thetad1) + thetad2*Math.cos(cr + theta1)*Math.sin(theta2) + thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2) - phid1*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)*(crd + thetad1)) - 10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.sin(theta2)*(crd + thetad1) - thetad2*Math.cos(cr + theta1)*Math.cos(theta2) + phid1*Math.sin(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + 10*thetad3*Math.cos(theta3)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*phid2*Math.cos(theta3)*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*thetad3*Math.cos(phi2)*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) + 5*Math.cos(phi3)*Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.cos(theta2)*(crd + thetad1) + 10*thetad2*Math.cos(cr + theta1)*Math.sin(theta2) + 10*thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2) - 10*phid1*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(theta2) + 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)*(crd + thetad1)) + 5*phid3*Math.cos(phi3)*(10*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(phi2)*Math.cos(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) - 5*phid2*Math.cos(phi2)*(10*Math.cos(cr + theta1)*Math.cos(theta2) - 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) - 5*phid2*Math.cos(phi2)*Math.cos(phi3)*(10*Math.cos(cr + theta1)*Math.cos(theta2) - 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 5*phid3*Math.sin(phi2)*Math.sin(phi3)*(10*Math.cos(cr + theta1)*Math.cos(theta2) - 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) - (Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3))*(Math.cos(phi2)*((Math.sin(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))))/40 + (Math.cos(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2)))/40) - Math.sin(phi2)*Math.sin(theta3)*(41*thetad3 + 41*thetad2*Math.cos(phi2) + 41*crd*Math.cos(phi1)*Math.cos(phi2) + 41*thetad1*Math.cos(phi1)*Math.cos(phi2) + 41*phid1*Math.sin(phi2)*Math.sin(theta2) - 41*crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 41*thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) - 41*phid2*Math.cos(phi2)*Math.cos(theta3) + 41*thetad3*Math.sin(phi2)*Math.sin(theta3)) - 2*(Math.cos(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) + Math.sin(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))*((Math.cos(phi2)*Math.cos(phi3) - Math.cos(theta3)*Math.sin(phi2)*Math.sin(phi3))*(phid3/40 + (phid2*Math.cos(theta3))/40 + (phid1*Math.cos(theta2)*Math.cos(theta3))/40 + (thetad2*Math.sin(phi2)*Math.sin(theta3))/40 + (crd*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3))/40 + (crd*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2))/40 + (thetad1*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3))/40 - (phid1*Math.cos(phi2)*Math.sin(theta2)*Math.sin(theta3))/40 + (thetad1*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2))/40 + (crd*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3))/40 + (thetad1*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3))/40) - 41*phid3*Math.cos(phi2)*Math.cos(phi3) + 41*phid2*Math.sin(phi2)*Math.sin(phi3) - Math.sin(phi2)*Math.sin(theta3)*(41*Math.cos(phi3)*(thetad3 + thetad2*Math.cos(phi2) + crd*Math.cos(phi1)*Math.cos(phi2) + thetad1*Math.cos(phi1)*Math.cos(phi2) + phid1*Math.sin(phi2)*Math.sin(theta2) - crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) - 41*Math.sin(phi3)*(Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2)))) - 41*phid2*Math.cos(phi2)*Math.cos(phi3)*Math.cos(theta3) + 41*phid3*Math.cos(theta3)*Math.sin(phi2)*Math.sin(phi3) + 41*thetad3*Math.cos(phi3)*Math.sin(phi2)*Math.sin(theta3)) + 2*(Math.sin(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) - Math.cos(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))*((phid2*Math.cos(phi3)*Math.sin(phi2))/40 - (Math.cos(phi2)*Math.sin(phi3) + Math.cos(phi3)*Math.cos(theta3)*Math.sin(phi2))*(41*phid3 + 41*phid2*Math.cos(theta3) + 41*phid1*Math.cos(theta2)*Math.cos(theta3) + 41*thetad2*Math.sin(phi2)*Math.sin(theta3) + 41*crd*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3) + 41*crd*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2) + 41*thetad1*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3) - 41*phid1*Math.cos(phi2)*Math.sin(theta2)*Math.sin(theta3) + 41*thetad1*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2) + 41*crd*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3) + 41*thetad1*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3)) + (phid3*Math.cos(phi2)*Math.sin(phi3))/40 + Math.sin(phi2)*Math.sin(theta3)*(41*Math.cos(phi3)*(Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2))) + 41*Math.sin(phi3)*(thetad3 + thetad2*Math.cos(phi2) + crd*Math.cos(phi1)*Math.cos(phi2) + thetad1*Math.cos(phi1)*Math.cos(phi2) + phid1*Math.sin(phi2)*Math.sin(theta2) - crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))) + (phid2*Math.cos(phi2)*Math.cos(theta3)*Math.sin(phi3))/40 + (phid3*Math.cos(phi3)*Math.cos(theta3)*Math.sin(phi2))/40 - (thetad3*Math.sin(phi2)*Math.sin(phi3)*Math.sin(theta3))/40) + 2*(Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2) + Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3))*((Math.cos(phi2)*Math.cos(phi3) - Math.cos(theta3)*Math.sin(phi2)*Math.sin(phi3))*((Math.cos(phi3)*(Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2))))/40 + (Math.sin(phi3)*(thetad3 + thetad2*Math.cos(phi2) + crd*Math.cos(phi1)*Math.cos(phi2) + thetad1*Math.cos(phi1)*Math.cos(phi2) + phid1*Math.sin(phi2)*Math.sin(theta2) - crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))/40) - (Math.cos(phi2)*Math.sin(phi3) + Math.cos(phi3)*Math.cos(theta3)*Math.sin(phi2))*(41*Math.cos(phi3)*(thetad3 + thetad2*Math.cos(phi2) + crd*Math.cos(phi1)*Math.cos(phi2) + thetad1*Math.cos(phi1)*Math.cos(phi2) + phid1*Math.sin(phi2)*Math.sin(theta2) - crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) - 41*Math.sin(phi3)*(Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2)))) + 41*phid2*Math.cos(phi2)*Math.sin(theta3) + 41*thetad3*Math.cos(theta3)*Math.sin(phi2)) - (Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))*((phid2*Math.sin(phi2))/40 + Math.sin(phi2)*Math.sin(theta3)*(41*Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - 41*Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2))) - Math.cos(theta3)*Math.sin(phi2)*(41*Math.sin(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) + 41*Math.cos(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2)))) - 3*(5*Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.cos(theta2)*(crd + thetad1) + 10*thetad2*Math.cos(cr + theta1)*Math.sin(theta2) + 10*thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2) - 10*phid1*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(theta2) + 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)*(crd + thetad1)) - 5*phid2*Math.cos(phi2)*(10*Math.cos(cr + theta1)*Math.cos(theta2) - 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)))*(10*Math.cos(cr + theta1)*Math.sin(phi1) - Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) - Math.cos(theta2)*Math.sin(phi1)*((phid1*Math.cos(theta2))/40 + (Math.sin(phi1)*Math.sin(theta2)*(crd + thetad1))/40) - Math.sin(phi1)*Math.sin(theta2)*((phid1*Math.sin(theta2))/40 - (Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))/40) + 2*Math.sin(phi1)*Math.sin(theta2)*(Math.cos(phi2)*((Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)))/40 - (Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1)))/40) - Math.sin(phi2)*(41*Math.cos(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) + 41*Math.sin(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))))",
        "vars": [
          "cr",
          "crd",
          "phi1",
          "phi2",
          "phi3",
          "phid1",
          "phid2",
          "phid3",
          "theta1",
          "theta2",
          "theta3",
          "thetad1",
          "thetad2",
          "thetad3"
        ]
      },
      {
        "expr": "(Math.sin(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2))*(Math.sin(theta3)*(41*thetad3 + 41*thetad2*Math.cos(phi2) + 41*crd*Math.cos(phi1)*Math.cos(phi2) + 41*thetad1*Math.cos(phi1)*Math.cos(phi2) + 41*phid1*Math.sin(phi2)*Math.sin(theta2) - 41*crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 41*thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) - 41*thetad3*Math.sin(theta3)) + 2*(41*Math.cos(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) + 41*Math.sin(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1)))*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - 2*(41*Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - 41*Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1)))*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) + 3*(Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.sin(phi1) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1))*(5*Math.cos(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2)*(crd + thetad1) + 10*thetad2*Math.sin(cr + theta1)*Math.cos(theta2) + 10*phid1*Math.cos(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + 10*thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) - 5*phid2*Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 50*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)*(crd + thetad1) + 50*phid1*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(phi2) + 50*phid2*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) - 3*(10*Math.cos(cr + theta1)*Math.sin(phi1) - Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1))*(5*Math.cos(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2)*(crd + thetad1) - 10*thetad2*Math.cos(cr + theta1)*Math.cos(theta2) + 10*phid1*Math.sin(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + 10*thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + 5*phid2*Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 50*phid1*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(phi2) + 50*phid2*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1) + 50*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)*(crd + thetad1)) - (Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))*(Math.cos(theta3)*(41*Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - 41*Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2))) + Math.sin(theta3)*(41*Math.sin(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) + 41*Math.cos(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2)))) + (Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.sin(phi3)*(10*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) + Math.cos(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 10*Math.sin(cr + theta1)*Math.sin(phi1) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1))*(5*Math.cos(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2)*(crd + thetad1) + 10*thetad2*Math.sin(cr + theta1)*Math.cos(theta2) + 10*phid1*Math.cos(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + 10*thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + 5*Math.cos(phi3)*(10*Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2)*(crd + thetad1) + thetad2*Math.sin(cr + theta1)*Math.cos(theta2) + phid1*Math.cos(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) - 10*phid2*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)*(crd + thetad1) + 10*phid1*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(phi2) + 10*phid2*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) - 5*Math.cos(theta3)*Math.sin(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2)*(crd + thetad1) + thetad2*Math.sin(cr + theta1)*Math.cos(theta2) + phid1*Math.cos(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + 10*phid2*Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*phid1*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(phi2) + 10*phid2*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)*(crd + thetad1)) - 5*phid2*Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 5*phid3*Math.sin(phi3)*(10*Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)) - 50*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)*(crd + thetad1) + 50*phid1*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(phi2) + 50*phid2*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1) - 5*phid3*Math.cos(phi3)*Math.cos(theta3)*(10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 5*thetad3*Math.sin(phi3)*Math.sin(theta3)*(10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1))) + 2*(Math.sin(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) - Math.cos(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))*(Math.cos(theta3)*(41*Math.cos(phi3)*(Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2))) + 41*Math.sin(phi3)*(thetad3 + thetad2*Math.cos(phi2) + crd*Math.cos(phi1)*Math.cos(phi2) + thetad1*Math.cos(phi1)*Math.cos(phi2) + phid1*Math.sin(phi2)*Math.sin(theta2) - crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))) - (phid3*Math.cos(phi3)*Math.sin(theta3))/40 - (thetad3*Math.cos(theta3)*Math.sin(phi3))/40 + Math.cos(phi3)*Math.sin(theta3)*(41*phid3 + 41*phid2*Math.cos(theta3) + 41*phid1*Math.cos(theta2)*Math.cos(theta3) + 41*thetad2*Math.sin(phi2)*Math.sin(theta3) + 41*crd*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3) + 41*crd*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2) + 41*thetad1*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3) - 41*phid1*Math.cos(phi2)*Math.sin(theta2)*Math.sin(theta3) + 41*thetad1*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2) + 41*crd*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3) + 41*thetad1*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3))) + 2*(Math.cos(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) + Math.sin(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))*(Math.cos(theta3)*(41*Math.cos(phi3)*(thetad3 + thetad2*Math.cos(phi2) + crd*Math.cos(phi1)*Math.cos(phi2) + thetad1*Math.cos(phi1)*Math.cos(phi2) + phid1*Math.sin(phi2)*Math.sin(theta2) - crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) - 41*Math.sin(phi3)*(Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2)))) - 41*thetad3*Math.cos(phi3)*Math.cos(theta3) + 41*phid3*Math.sin(phi3)*Math.sin(theta3) - Math.sin(phi3)*Math.sin(theta3)*(phid3/40 + (phid2*Math.cos(theta3))/40 + (phid1*Math.cos(theta2)*Math.cos(theta3))/40 + (thetad2*Math.sin(phi2)*Math.sin(theta3))/40 + (crd*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3))/40 + (crd*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2))/40 + (thetad1*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3))/40 - (phid1*Math.cos(phi2)*Math.sin(theta2)*Math.sin(theta3))/40 + (thetad1*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2))/40 + (crd*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3))/40 + (thetad1*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3))/40)) + (Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.sin(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) + Math.cos(phi3)*(10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) - 10*Math.cos(cr + theta1)*Math.sin(phi1) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1))*(5*Math.cos(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2)*(crd + thetad1) - 10*thetad2*Math.cos(cr + theta1)*Math.cos(theta2) + 10*phid1*Math.sin(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + 10*thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + 5*Math.cos(phi3)*(10*Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2)*(crd + thetad1) - thetad2*Math.cos(cr + theta1)*Math.cos(theta2) + phid1*Math.sin(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + 10*phid2*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*phid1*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(phi2) + 10*phid2*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1) + 10*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)*(crd + thetad1)) + 5*phid3*Math.sin(phi3)*(10*Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)) + 5*phid2*Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 5*Math.cos(theta3)*Math.sin(phi3)*(10*phid2*Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2)*(crd + thetad1) - thetad2*Math.cos(cr + theta1)*Math.cos(theta2) + phid1*Math.sin(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + 10*phid1*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(phi2) - 10*phid2*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2) + 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)*(crd + thetad1)) + 50*phid1*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(phi2) + 50*phid2*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1) + 5*phid3*Math.cos(phi3)*Math.cos(theta3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 50*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)*(crd + thetad1) - 5*thetad3*Math.sin(phi3)*Math.sin(theta3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1))) + (Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3))*(Math.cos(theta3)*(41*thetad3 + 41*thetad2*Math.cos(phi2) + 41*crd*Math.cos(phi1)*Math.cos(phi2) + 41*thetad1*Math.cos(phi1)*Math.cos(phi2) + 41*phid1*Math.sin(phi2)*Math.sin(theta2) - 41*crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 41*thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) - 41*thetad3*Math.cos(theta3)) + 2*(Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2) + Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3))*(Math.cos(phi3)*Math.sin(theta3)*(41*Math.cos(phi3)*(thetad3 + thetad2*Math.cos(phi2) + crd*Math.cos(phi1)*Math.cos(phi2) + thetad1*Math.cos(phi1)*Math.cos(phi2) + phid1*Math.sin(phi2)*Math.sin(theta2) - crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) - 41*Math.sin(phi3)*(Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2)))) - 41*thetad3*Math.sin(theta3) + Math.sin(phi3)*Math.sin(theta3)*((Math.cos(phi3)*(Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2))))/40 + (Math.sin(phi3)*(thetad3 + thetad2*Math.cos(phi2) + crd*Math.cos(phi1)*Math.cos(phi2) + thetad1*Math.cos(phi1)*Math.cos(phi2) + phid1*Math.sin(phi2)*Math.sin(theta2) - crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))/40))",
        "vars": [
          "cr",
          "crd",
          "phi1",
          "phi2",
          "phi3",
          "phid1",
          "phid2",
          "phid3",
          "theta1",
          "theta2",
          "theta3",
          "thetad1",
          "thetad2",
          "thetad3"
        ]
      },
      {
        "expr": "(Math.sin(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2))*((Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))))/40 - (Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2)))/40) - (Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3))*((Math.sin(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))))/40 + (Math.cos(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2)))/40) - (5*Math.sin(phi3)*(10*Math.cos(theta3)*(thetad2*Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(theta2)*(crd + thetad1) - thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2) + phid1*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)*(crd + thetad1)) + 10*Math.sin(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2)*(crd + thetad1) + thetad2*Math.sin(cr + theta1)*Math.cos(theta2) + phid1*Math.cos(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) - phid2*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)*(crd + thetad1) + phid1*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(phi2) + phid2*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 10*thetad3*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*thetad3*Math.cos(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) - 5*phid3*Math.cos(phi3)*(10*Math.cos(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) - 10*Math.sin(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))))*(Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.sin(phi3)*(10*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) + Math.cos(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 10*Math.sin(cr + theta1)*Math.sin(phi1) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + (5*Math.sin(phi3)*(10*Math.cos(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2)*(crd + thetad1) + thetad2*Math.cos(cr + theta1)*Math.sin(theta2) + thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2) - phid1*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)*(crd + thetad1)) - 10*Math.sin(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2)*(crd + thetad1) - thetad2*Math.cos(cr + theta1)*Math.cos(theta2) + phid1*Math.sin(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + phid2*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + phid1*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(phi2) + phid2*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)*(crd + thetad1)) + 10*thetad3*Math.cos(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)) + 10*thetad3*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) - 5*phid3*Math.cos(phi3)*(10*Math.cos(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) - 10*Math.sin(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))))*(Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.sin(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) + Math.cos(phi3)*(10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) - 10*Math.cos(cr + theta1)*Math.sin(phi1) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 2*(Math.cos(phi3)*((Math.cos(phi3)*(Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2))))/40 + (Math.sin(phi3)*(thetad3 + thetad2*Math.cos(phi2) + crd*Math.cos(phi1)*Math.cos(phi2) + thetad1*Math.cos(phi1)*Math.cos(phi2) + phid1*Math.sin(phi2)*Math.sin(theta2) - crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))/40) - Math.sin(phi3)*(41*Math.cos(phi3)*(thetad3 + thetad2*Math.cos(phi2) + crd*Math.cos(phi1)*Math.cos(phi2) + thetad1*Math.cos(phi1)*Math.cos(phi2) + phid1*Math.sin(phi2)*Math.sin(theta2) - crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) - 41*Math.sin(phi3)*(Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2)))))*(Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2) + Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3)) + 2*(Math.cos(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) + Math.sin(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))*(41*phid3*Math.cos(phi3) - Math.cos(phi3)*(phid3/40 + (phid2*Math.cos(theta3))/40 + (phid1*Math.cos(theta2)*Math.cos(theta3))/40 + (thetad2*Math.sin(phi2)*Math.sin(theta3))/40 + (crd*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3))/40 + (crd*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2))/40 + (thetad1*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3))/40 - (phid1*Math.cos(phi2)*Math.sin(theta2)*Math.sin(theta3))/40 + (thetad1*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2))/40 + (crd*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3))/40 + (thetad1*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3))/40)) + 2*(Math.sin(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) - Math.cos(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))*((phid3*Math.sin(phi3))/40 - Math.sin(phi3)*(41*phid3 + 41*phid2*Math.cos(theta3) + 41*phid1*Math.cos(theta2)*Math.cos(theta3) + 41*thetad2*Math.sin(phi2)*Math.sin(theta3) + 41*crd*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3) + 41*crd*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2) + 41*thetad1*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3) - 41*phid1*Math.cos(phi2)*Math.sin(theta2)*Math.sin(theta3) + 41*thetad1*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2) + 41*crd*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3) + 41*thetad1*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3)))",
        "vars": [
          "cr",
          "crd",
          "phi1",
          "phi2",
          "phi3",
          "phid1",
          "phid2",
          "phid3",
          "theta1",
          "theta2",
          "theta3",
          "thetad1",
          "thetad2",
          "thetad3"
        ]
      },
      {
        "expr": "2*(Math.cos(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) + Math.sin(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))*(41*Math.cos(phi3)*(thetad3 + thetad2*Math.cos(phi2) + crd*Math.cos(phi1)*Math.cos(phi2) + thetad1*Math.cos(phi1)*Math.cos(phi2) + phid1*Math.sin(phi2)*Math.sin(theta2) - crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) - 41*Math.sin(phi3)*(Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2)))) - (5*Math.cos(phi3)*(10*Math.sin(theta3)*(thetad2*Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(theta2)*(crd + thetad1) - thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2) + phid1*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)*(crd + thetad1)) - 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2)*(crd + thetad1) + thetad2*Math.sin(cr + theta1)*Math.cos(theta2) + phid1*Math.cos(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) - phid2*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)*(crd + thetad1) + phid1*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(phi2) + phid2*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 10*thetad3*Math.sin(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)) - 10*thetad3*Math.cos(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) + 5*Math.sin(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2)*(crd + thetad1) + thetad2*Math.sin(cr + theta1)*Math.cos(theta2) + phid1*Math.cos(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + 10*phid2*Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*phid1*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(phi2) + 10*phid2*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)*(crd + thetad1)) + 5*phid3*Math.sin(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) + 5*phid3*Math.cos(phi3)*(10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)))*(Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.sin(phi3)*(10*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) + Math.cos(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 10*Math.sin(cr + theta1)*Math.sin(phi1) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 2*(Math.sin(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) - Math.cos(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))*(41*Math.cos(phi3)*(Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2))) + 41*Math.sin(phi3)*(thetad3 + thetad2*Math.cos(phi2) + crd*Math.cos(phi1)*Math.cos(phi2) + thetad1*Math.cos(phi1)*Math.cos(phi2) + phid1*Math.sin(phi2)*Math.sin(theta2) - crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))) + (5*Math.cos(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2)*(crd + thetad1) + thetad2*Math.cos(cr + theta1)*Math.sin(theta2) + thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2) - phid1*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)*(crd + thetad1)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2)*(crd + thetad1) - thetad2*Math.cos(cr + theta1)*Math.cos(theta2) + phid1*Math.sin(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + phid2*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + phid1*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(phi2) + phid2*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)*(crd + thetad1)) + 10*thetad3*Math.sin(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)) - 10*thetad3*Math.cos(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) + 5*Math.sin(phi3)*(10*phid2*Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2)*(crd + thetad1) - thetad2*Math.cos(cr + theta1)*Math.cos(theta2) + phid1*Math.sin(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + 10*phid1*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(phi2) - 10*phid2*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2) + 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)*(crd + thetad1)) + 5*phid3*Math.sin(phi3)*(10*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) + 5*phid3*Math.cos(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)))*(Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.sin(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) + Math.cos(phi3)*(10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) - 10*Math.cos(cr + theta1)*Math.sin(phi1) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1))",
        "vars": [
          "cr",
          "crd",
          "phi1",
          "phi2",
          "phi3",
          "phid1",
          "phid2",
          "phid3",
          "theta1",
          "theta2",
          "theta3",
          "thetad1",
          "thetad2",
          "thetad3"
        ]
      }
    ],
    [
      {
        "expr": "(Math.cos(theta2)*Math.cos(theta3) - Math.cos(phi2)*Math.sin(theta2)*Math.sin(theta3))*((Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))*((Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))))/40 - (Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2)))/40) - (Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3))*(41*thetad3 + 41*thetad2*Math.cos(phi2) + 41*crd*Math.cos(phi1)*Math.cos(phi2) + 41*thetad1*Math.cos(phi1)*Math.cos(phi2) + 41*phid1*Math.sin(phi2)*Math.sin(theta2) - 41*crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 41*thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) - 41*Math.sin(theta3)*(phid1*Math.sin(phi1)*Math.sin(phi2) - phid2*Math.cos(phi1)*Math.cos(phi2) - phid1*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2) + phid2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) + thetad2*Math.cos(phi2)*Math.sin(phi1)*Math.sin(theta2)) + 41*thetad3*Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + 41*phid1*Math.cos(phi1)*Math.cos(theta3)*Math.sin(theta2) + 41*thetad2*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi1) - 41*thetad3*Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) - 2*(Math.cos(theta2)*Math.cos(theta3) - Math.cos(phi2)*Math.sin(theta2)*Math.sin(theta3))*((Math.cos(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) + Math.sin(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))*(41*Math.cos(phi3)*(thetad3 + thetad2*Math.cos(phi2) + crd*Math.cos(phi1)*Math.cos(phi2) + thetad1*Math.cos(phi1)*Math.cos(phi2) + phid1*Math.sin(phi2)*Math.sin(theta2) - crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) - 41*Math.sin(phi3)*(Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2)))) + (Math.sin(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) - Math.cos(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))*((Math.cos(phi3)*(Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2))))/40 + (Math.sin(phi3)*(thetad3 + thetad2*Math.cos(phi2) + crd*Math.cos(phi1)*Math.cos(phi2) + thetad1*Math.cos(phi1)*Math.cos(phi2) + phid1*Math.sin(phi2)*Math.sin(theta2) - crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))/40) - 41*phid2*Math.cos(phi1)*Math.cos(phi2)*Math.sin(theta3) - 41*phid1*Math.cos(phi1)*Math.cos(theta3)*Math.sin(theta2) - 41*thetad3*Math.cos(phi1)*Math.cos(theta3)*Math.sin(phi2) - 41*thetad2*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi1) + 41*phid1*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta3) + 41*thetad3*Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3) - 41*phid1*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2)*Math.sin(theta3) - 41*thetad3*Math.cos(phi2)*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi1) + 41*phid2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta3) + 41*thetad2*Math.cos(phi2)*Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) + (Math.cos(theta2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta3)*Math.sin(theta2))*((Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))*((Math.sin(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))))/40 + (Math.cos(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2)))/40) - (Math.sin(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2))*(41*thetad3 + 41*thetad2*Math.cos(phi2) + 41*crd*Math.cos(phi1)*Math.cos(phi2) + 41*thetad1*Math.cos(phi1)*Math.cos(phi2) + 41*phid1*Math.sin(phi2)*Math.sin(theta2) - 41*crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 41*thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) + 41*Math.cos(theta3)*(phid1*Math.sin(phi1)*Math.sin(phi2) - phid2*Math.cos(phi1)*Math.cos(phi2) - phid1*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2) + phid2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) + thetad2*Math.cos(phi2)*Math.sin(phi1)*Math.sin(theta2)) + 41*thetad3*Math.sin(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + 41*phid1*Math.cos(phi1)*Math.sin(theta2)*Math.sin(theta3) + 41*thetad2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3) + 41*thetad3*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2)) - Math.cos(theta2)*(Math.cos(phi1)*((phid1*Math.sin(theta2))/40 - (Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))/40) - 41*phid1*Math.cos(phi1)*Math.sin(theta2) + Math.cos(theta2)*Math.sin(phi1)*(41*thetad2 + 41*crd*Math.cos(phi1) + 41*thetad1*Math.cos(phi1)) - 41*thetad2*Math.cos(theta2)*Math.sin(phi1)) + 2*Math.cos(theta2)*(((Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)))/40 - (Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1)))/40)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) - (41*Math.cos(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) + 41*Math.sin(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1)))*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + 41*phid1*Math.cos(phi1)*Math.sin(theta2) + 41*thetad2*Math.cos(theta2)*Math.sin(phi1)) - 2*(Math.sin(phi3)*(Math.cos(theta2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta3)*Math.sin(theta2)) + Math.cos(phi3)*Math.sin(phi2)*Math.sin(theta2))*((41*Math.cos(phi3)*(Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2))) + 41*Math.sin(phi3)*(thetad3 + thetad2*Math.cos(phi2) + crd*Math.cos(phi1)*Math.cos(phi2) + thetad1*Math.cos(phi1)*Math.cos(phi2) + phid1*Math.sin(phi2)*Math.sin(theta2) - crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))*(Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2) + Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3)) - (Math.cos(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) + Math.sin(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))*(41*phid3 + 41*phid2*Math.cos(theta3) + 41*phid1*Math.cos(theta2)*Math.cos(theta3) + 41*thetad2*Math.sin(phi2)*Math.sin(theta3) + 41*crd*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3) + 41*crd*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2) + 41*thetad1*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3) - 41*phid1*Math.cos(phi2)*Math.sin(theta2)*Math.sin(theta3) + 41*thetad1*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2) + 41*crd*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3) + 41*thetad1*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3)) + (Math.cos(phi3)*(phid1*Math.cos(phi2)*Math.sin(phi1) + phid2*Math.cos(phi1)*Math.sin(phi2) + phid1*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2) + phid2*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1) - thetad2*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta2)))/40 - (Math.sin(phi3)*(Math.cos(theta3)*(phid1*Math.sin(phi1)*Math.sin(phi2) - phid2*Math.cos(phi1)*Math.cos(phi2) - phid1*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2) + phid2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) + thetad2*Math.cos(phi2)*Math.sin(phi1)*Math.sin(theta2)) + thetad3*Math.sin(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + phid1*Math.cos(phi1)*Math.sin(theta2)*Math.sin(theta3) + thetad2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3) + thetad3*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2)))/40 + (phid3*Math.sin(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))/40 + (phid3*Math.cos(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)))/40) - 2*(Math.cos(phi3)*(Math.cos(theta2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta3)*Math.sin(theta2)) - Math.sin(phi2)*Math.sin(phi3)*Math.sin(theta2))*((41*Math.cos(phi3)*(thetad3 + thetad2*Math.cos(phi2) + crd*Math.cos(phi1)*Math.cos(phi2) + thetad1*Math.cos(phi1)*Math.cos(phi2) + phid1*Math.sin(phi2)*Math.sin(theta2) - crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) - 41*Math.sin(phi3)*(Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2))))*(Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2) + Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3)) + (Math.sin(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) - Math.cos(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))*(phid3/40 + (phid2*Math.cos(theta3))/40 + (phid1*Math.cos(theta2)*Math.cos(theta3))/40 + (thetad2*Math.sin(phi2)*Math.sin(theta3))/40 + (crd*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3))/40 + (crd*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2))/40 + (thetad1*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3))/40 - (phid1*Math.cos(phi2)*Math.sin(theta2)*Math.sin(theta3))/40 + (thetad1*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2))/40 + (crd*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3))/40 + (thetad1*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3))/40) - 41*Math.cos(phi3)*(Math.cos(theta3)*(phid1*Math.sin(phi1)*Math.sin(phi2) - phid2*Math.cos(phi1)*Math.cos(phi2) - phid1*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2) + phid2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) + thetad2*Math.cos(phi2)*Math.sin(phi1)*Math.sin(theta2)) + thetad3*Math.sin(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + phid1*Math.cos(phi1)*Math.sin(theta2)*Math.sin(theta3) + thetad2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3) + thetad3*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2)) - 41*Math.sin(phi3)*(phid1*Math.cos(phi2)*Math.sin(phi1) + phid2*Math.cos(phi1)*Math.sin(phi2) + phid1*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2) + phid2*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1) - thetad2*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta2)) + 41*phid3*Math.cos(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) - 41*phid3*Math.sin(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3))) + Math.sin(theta2)*(Math.cos(phi1)*((phid1*Math.cos(theta2))/40 + (Math.sin(phi1)*Math.sin(theta2)*(crd + thetad1))/40) - 41*phid1*Math.cos(phi1)*Math.cos(theta2) - Math.sin(phi1)*Math.sin(theta2)*(41*thetad2 + 41*crd*Math.cos(phi1) + 41*thetad1*Math.cos(phi1)) + 41*thetad2*Math.sin(phi1)*Math.sin(theta2)) + 2*Math.cos(phi2)*Math.sin(theta2)*((Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))*(phid2/40 + (phid1*Math.cos(theta2))/40 + (crd*Math.sin(phi1)*Math.sin(theta2))/40 + (thetad1*Math.sin(phi1)*Math.sin(theta2))/40) - 41*phid2*Math.cos(phi1)*Math.cos(phi2) - Math.sin(phi1)*Math.sin(theta2)*(41*Math.cos(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) + 41*Math.sin(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) + 41*phid1*Math.sin(phi1)*Math.sin(phi2) - 41*phid1*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2) + 41*phid2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) + 41*thetad2*Math.cos(phi2)*Math.sin(phi1)*Math.sin(theta2)) - 2*Math.sin(phi2)*Math.sin(theta2)*(Math.sin(phi1)*Math.sin(theta2)*(41*Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - 41*Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - (Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1))*(41*phid2 + 41*phid1*Math.cos(theta2) + 41*crd*Math.sin(phi1)*Math.sin(theta2) + 41*thetad1*Math.sin(phi1)*Math.sin(theta2)) + (phid1*Math.cos(phi2)*Math.sin(phi1))/40 + (phid2*Math.cos(phi1)*Math.sin(phi2))/40 + (phid1*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2))/40 + (phid2*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1))/40 - (thetad2*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta2))/40) - (1639*Math.cos(phi1)*Math.sin(phi1)*(crd + thetad1))/20 - Math.cos(cr + theta1)*(10*Math.cos(phi1) + 10*Math.cos(phi1)*Math.cos(phi2) + 10*Math.cos(phi1)*Math.cos(phi2)*Math.cos(phi3) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 10*Math.cos(phi3)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 10*Math.cos(phi1)*Math.cos(theta3)*Math.sin(phi2)*Math.sin(phi3) + 10*Math.sin(phi1)*Math.sin(phi3)*Math.sin(theta2)*Math.sin(theta3) - 10*Math.cos(phi2)*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi1)*Math.sin(phi3))*((61*crd*Math.cos(cr))/20 - 5*Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2)*(crd + thetad1) - 10*thetad2*Math.cos(cr + theta1)*Math.cos(theta2) + 10*phid1*Math.sin(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + 10*thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + (117*crd*Math.sin(cr))/5 - 5*Math.sin(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2)*(crd + thetad1) + thetad2*Math.cos(cr + theta1)*Math.sin(theta2) + thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2) - phid1*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)*(crd + thetad1)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2)*(crd + thetad1) - thetad2*Math.cos(cr + theta1)*Math.cos(theta2) + phid1*Math.sin(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + phid2*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + phid1*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(phi2) + phid2*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)*(crd + thetad1)) + 10*thetad3*Math.sin(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)) - 10*thetad3*Math.cos(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) + 5*Math.cos(phi3)*(10*phid2*Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2)*(crd + thetad1) - thetad2*Math.cos(cr + theta1)*Math.cos(theta2) + phid1*Math.sin(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + 10*phid1*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(phi2) - 10*phid2*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2) + 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)*(crd + thetad1)) - 5*phid3*Math.sin(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 50*Math.cos(cr + theta1)*Math.sin(phi1)*(crd + thetad1) + 50*phid1*Math.sin(cr + theta1)*Math.cos(phi1) + 5*phid2*Math.cos(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 5*phid3*Math.cos(phi3)*(10*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) + 50*phid1*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(phi2) - 50*phid2*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2) + 50*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)*(crd + thetad1)) - Math.sin(phi2)*Math.sin(theta2)*((Math.sin(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2))*(41*Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - 41*Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2))) - (Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3))*(41*Math.sin(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) + 41*Math.cos(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2))) + (phid1*Math.cos(phi2)*Math.sin(phi1))/40 + (phid2*Math.cos(phi1)*Math.sin(phi2))/40 + (phid1*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2))/40 + (phid2*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1))/40 - (thetad2*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta2))/40) - 3*Math.sin(cr + theta1)*(10*Math.cos(phi1) + 10*Math.cos(phi1)*Math.cos(phi2) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))*(5*Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2)*(crd + thetad1) + 10*thetad2*Math.sin(cr + theta1)*Math.cos(theta2) + 10*phid1*Math.cos(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + 10*thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) - (117*crd*Math.cos(cr))/5 + (61*crd*Math.sin(cr))/20 + 50*Math.sin(cr + theta1)*Math.sin(phi1)*(crd + thetad1) - 50*phid1*Math.cos(cr + theta1)*Math.cos(phi1) + 5*phid2*Math.cos(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 50*phid1*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(phi2) + 50*phid2*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2) + 50*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)*(crd + thetad1)) - 30*Math.cos(cr + theta1)*Math.cos(phi1)*((61*crd*Math.cos(cr))/20 + (117*crd*Math.sin(cr))/5 + 50*Math.cos(cr + theta1)*Math.sin(phi1)*(crd + thetad1) + 50*phid1*Math.sin(cr + theta1)*Math.cos(phi1)) - 3*Math.cos(cr + theta1)*(10*Math.cos(phi1) + 10*Math.cos(phi1)*Math.cos(phi2) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))*((61*crd*Math.cos(cr))/20 - 5*Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2)*(crd + thetad1) - 10*thetad2*Math.cos(cr + theta1)*Math.cos(theta2) + 10*phid1*Math.sin(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + 10*thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + (117*crd*Math.sin(cr))/5 + 50*Math.cos(cr + theta1)*Math.sin(phi1)*(crd + thetad1) + 50*phid1*Math.sin(cr + theta1)*Math.cos(phi1) + 5*phid2*Math.cos(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 50*phid1*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(phi2) - 50*phid2*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2) + 50*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)*(crd + thetad1)) + 30*Math.sin(cr + theta1)*Math.cos(phi1)*((117*crd*Math.cos(cr))/5 - (61*crd*Math.sin(cr))/20 - 50*Math.sin(cr + theta1)*Math.sin(phi1)*(crd + thetad1) + 50*phid1*Math.cos(cr + theta1)*Math.cos(phi1)) - Math.sin(cr + theta1)*(10*Math.cos(phi1) + 10*Math.cos(phi1)*Math.cos(phi2) + 10*Math.cos(phi1)*Math.cos(phi2)*Math.cos(phi3) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 10*Math.cos(phi3)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 10*Math.cos(phi1)*Math.cos(theta3)*Math.sin(phi2)*Math.sin(phi3) + 10*Math.sin(phi1)*Math.sin(phi3)*Math.sin(theta2)*Math.sin(theta3) - 10*Math.cos(phi2)*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi1)*Math.sin(phi3))*(5*Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2)*(crd + thetad1) + 10*thetad2*Math.sin(cr + theta1)*Math.cos(theta2) + 10*phid1*Math.cos(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + 10*thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) - 5*Math.sin(phi3)*(10*Math.sin(theta3)*(thetad2*Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(theta2)*(crd + thetad1) - thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2) + phid1*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)*(crd + thetad1)) - 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2)*(crd + thetad1) + thetad2*Math.sin(cr + theta1)*Math.cos(theta2) + phid1*Math.cos(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) - phid2*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)*(crd + thetad1) + phid1*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(phi2) + phid2*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 10*thetad3*Math.sin(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)) - 10*thetad3*Math.cos(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) - (117*crd*Math.cos(cr))/5 + (61*crd*Math.sin(cr))/20 + 5*Math.cos(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2)*(crd + thetad1) + thetad2*Math.sin(cr + theta1)*Math.cos(theta2) + phid1*Math.cos(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + 10*phid2*Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*phid1*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(phi2) + 10*phid2*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)*(crd + thetad1)) + 50*Math.sin(cr + theta1)*Math.sin(phi1)*(crd + thetad1) - 50*phid1*Math.cos(cr + theta1)*Math.cos(phi1) + 5*phid2*Math.cos(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 5*phid3*Math.cos(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) - 5*phid3*Math.sin(phi3)*(10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) - 50*phid1*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(phi2) + 50*phid2*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2) + 50*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)*(crd + thetad1))",
        "vars": [
          "cr",
          "crd",
          "phi1",
          "phi2",
          "phi3",
          "phid1",
          "phid2",
          "phid3",
          "theta1",
          "theta2",
          "theta3",
          "thetad1",
          "thetad2",
          "thetad3"
        ]
      },
      {
        "expr": "3*Math.cos(cr + theta1)*(10*crd*Math.cos(cr) - 5*cr*crd*Math.sin(cr))*(10*Math.cos(phi1) + 10*Math.cos(phi1)*Math.cos(phi2) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) + 3*Math.sin(cr + theta1)*(10*crd*Math.sin(cr) + 5*cr*crd*Math.cos(cr))*(10*Math.cos(phi1) + 10*Math.cos(phi1)*Math.cos(phi2) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) + Math.cos(cr + theta1)*(10*crd*Math.cos(cr) - 5*cr*crd*Math.sin(cr))*(10*Math.cos(phi1) + 10*Math.cos(phi1)*Math.cos(phi2) + 10*Math.cos(phi1)*Math.cos(phi2)*Math.cos(phi3) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 10*Math.cos(phi3)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 10*Math.cos(phi1)*Math.cos(theta3)*Math.sin(phi2)*Math.sin(phi3) + 10*Math.sin(phi1)*Math.sin(phi3)*Math.sin(theta2)*Math.sin(theta3) - 10*Math.cos(phi2)*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi1)*Math.sin(phi3)) + Math.sin(cr + theta1)*(10*crd*Math.sin(cr) + 5*cr*crd*Math.cos(cr))*(10*Math.cos(phi1) + 10*Math.cos(phi1)*Math.cos(phi2) + 10*Math.cos(phi1)*Math.cos(phi2)*Math.cos(phi3) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 10*Math.cos(phi3)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 10*Math.cos(phi1)*Math.cos(theta3)*Math.sin(phi2)*Math.sin(phi3) + 10*Math.sin(phi1)*Math.sin(phi3)*Math.sin(theta2)*Math.sin(theta3) - 10*Math.cos(phi2)*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi1)*Math.sin(phi3)) + 30*Math.cos(cr + theta1)*Math.cos(phi1)*(10*crd*Math.cos(cr) - 5*cr*crd*Math.sin(cr)) + 30*Math.sin(cr + theta1)*Math.cos(phi1)*(10*crd*Math.sin(cr) + 5*cr*crd*Math.cos(cr))",
        "vars": [
          "cr",
          "crd",
          "phi1",
          "phi2",
          "phi3",
          "theta1",
          "theta2",
          "theta3"
        ]
      },
      {
        "expr": "(Math.cos(theta2)*Math.cos(theta3) - Math.cos(phi2)*Math.sin(theta2)*Math.sin(theta3))*((Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))*((Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))))/40 - (Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2)))/40) - (Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3))*(41*thetad3 + 41*thetad2*Math.cos(phi2) + 41*crd*Math.cos(phi1)*Math.cos(phi2) + 41*thetad1*Math.cos(phi1)*Math.cos(phi2) + 41*phid1*Math.sin(phi2)*Math.sin(theta2) - 41*crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 41*thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) - 41*Math.sin(theta3)*(phid1*Math.sin(phi1)*Math.sin(phi2) - phid2*Math.cos(phi1)*Math.cos(phi2) - phid1*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2) + phid2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) + thetad2*Math.cos(phi2)*Math.sin(phi1)*Math.sin(theta2)) + 41*thetad3*Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + 41*phid1*Math.cos(phi1)*Math.cos(theta3)*Math.sin(theta2) + 41*thetad2*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi1) - 41*thetad3*Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) - 2*(Math.cos(theta2)*Math.cos(theta3) - Math.cos(phi2)*Math.sin(theta2)*Math.sin(theta3))*((Math.cos(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) + Math.sin(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))*(41*Math.cos(phi3)*(thetad3 + thetad2*Math.cos(phi2) + crd*Math.cos(phi1)*Math.cos(phi2) + thetad1*Math.cos(phi1)*Math.cos(phi2) + phid1*Math.sin(phi2)*Math.sin(theta2) - crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) - 41*Math.sin(phi3)*(Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2)))) + (Math.sin(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) - Math.cos(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))*((Math.cos(phi3)*(Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2))))/40 + (Math.sin(phi3)*(thetad3 + thetad2*Math.cos(phi2) + crd*Math.cos(phi1)*Math.cos(phi2) + thetad1*Math.cos(phi1)*Math.cos(phi2) + phid1*Math.sin(phi2)*Math.sin(theta2) - crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))/40) - 41*phid2*Math.cos(phi1)*Math.cos(phi2)*Math.sin(theta3) - 41*phid1*Math.cos(phi1)*Math.cos(theta3)*Math.sin(theta2) - 41*thetad3*Math.cos(phi1)*Math.cos(theta3)*Math.sin(phi2) - 41*thetad2*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi1) + 41*phid1*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta3) + 41*thetad3*Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3) - 41*phid1*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2)*Math.sin(theta3) - 41*thetad3*Math.cos(phi2)*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi1) + 41*phid2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta3) + 41*thetad2*Math.cos(phi2)*Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) + (Math.cos(theta2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta3)*Math.sin(theta2))*((Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))*((Math.sin(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))))/40 + (Math.cos(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2)))/40) - (Math.sin(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2))*(41*thetad3 + 41*thetad2*Math.cos(phi2) + 41*crd*Math.cos(phi1)*Math.cos(phi2) + 41*thetad1*Math.cos(phi1)*Math.cos(phi2) + 41*phid1*Math.sin(phi2)*Math.sin(theta2) - 41*crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 41*thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) + 41*Math.cos(theta3)*(phid1*Math.sin(phi1)*Math.sin(phi2) - phid2*Math.cos(phi1)*Math.cos(phi2) - phid1*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2) + phid2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) + thetad2*Math.cos(phi2)*Math.sin(phi1)*Math.sin(theta2)) + 41*thetad3*Math.sin(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + 41*phid1*Math.cos(phi1)*Math.sin(theta2)*Math.sin(theta3) + 41*thetad2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3) + 41*thetad3*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2)) - Math.cos(theta2)*(Math.cos(phi1)*((phid1*Math.sin(theta2))/40 - (Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))/40) - 41*phid1*Math.cos(phi1)*Math.sin(theta2) + Math.cos(theta2)*Math.sin(phi1)*(41*thetad2 + 41*crd*Math.cos(phi1) + 41*thetad1*Math.cos(phi1)) - 41*thetad2*Math.cos(theta2)*Math.sin(phi1)) + 2*Math.cos(theta2)*(((Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)))/40 - (Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1)))/40)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) - (41*Math.cos(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) + 41*Math.sin(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1)))*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + 41*phid1*Math.cos(phi1)*Math.sin(theta2) + 41*thetad2*Math.cos(theta2)*Math.sin(phi1)) - 2*(Math.sin(phi3)*(Math.cos(theta2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta3)*Math.sin(theta2)) + Math.cos(phi3)*Math.sin(phi2)*Math.sin(theta2))*((41*Math.cos(phi3)*(Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2))) + 41*Math.sin(phi3)*(thetad3 + thetad2*Math.cos(phi2) + crd*Math.cos(phi1)*Math.cos(phi2) + thetad1*Math.cos(phi1)*Math.cos(phi2) + phid1*Math.sin(phi2)*Math.sin(theta2) - crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))*(Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2) + Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3)) - (Math.cos(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) + Math.sin(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))*(41*phid3 + 41*phid2*Math.cos(theta3) + 41*phid1*Math.cos(theta2)*Math.cos(theta3) + 41*thetad2*Math.sin(phi2)*Math.sin(theta3) + 41*crd*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3) + 41*crd*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2) + 41*thetad1*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3) - 41*phid1*Math.cos(phi2)*Math.sin(theta2)*Math.sin(theta3) + 41*thetad1*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2) + 41*crd*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3) + 41*thetad1*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3)) + (Math.cos(phi3)*(phid1*Math.cos(phi2)*Math.sin(phi1) + phid2*Math.cos(phi1)*Math.sin(phi2) + phid1*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2) + phid2*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1) - thetad2*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta2)))/40 - (Math.sin(phi3)*(Math.cos(theta3)*(phid1*Math.sin(phi1)*Math.sin(phi2) - phid2*Math.cos(phi1)*Math.cos(phi2) - phid1*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2) + phid2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) + thetad2*Math.cos(phi2)*Math.sin(phi1)*Math.sin(theta2)) + thetad3*Math.sin(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + phid1*Math.cos(phi1)*Math.sin(theta2)*Math.sin(theta3) + thetad2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3) + thetad3*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2)))/40 + (phid3*Math.sin(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))/40 + (phid3*Math.cos(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)))/40) - 2*(Math.cos(phi3)*(Math.cos(theta2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta3)*Math.sin(theta2)) - Math.sin(phi2)*Math.sin(phi3)*Math.sin(theta2))*((41*Math.cos(phi3)*(thetad3 + thetad2*Math.cos(phi2) + crd*Math.cos(phi1)*Math.cos(phi2) + thetad1*Math.cos(phi1)*Math.cos(phi2) + phid1*Math.sin(phi2)*Math.sin(theta2) - crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) - 41*Math.sin(phi3)*(Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2))))*(Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2) + Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3)) + (Math.sin(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) - Math.cos(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))*(phid3/40 + (phid2*Math.cos(theta3))/40 + (phid1*Math.cos(theta2)*Math.cos(theta3))/40 + (thetad2*Math.sin(phi2)*Math.sin(theta3))/40 + (crd*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3))/40 + (crd*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2))/40 + (thetad1*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3))/40 - (phid1*Math.cos(phi2)*Math.sin(theta2)*Math.sin(theta3))/40 + (thetad1*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2))/40 + (crd*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3))/40 + (thetad1*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3))/40) - 41*Math.cos(phi3)*(Math.cos(theta3)*(phid1*Math.sin(phi1)*Math.sin(phi2) - phid2*Math.cos(phi1)*Math.cos(phi2) - phid1*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2) + phid2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) + thetad2*Math.cos(phi2)*Math.sin(phi1)*Math.sin(theta2)) + thetad3*Math.sin(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + phid1*Math.cos(phi1)*Math.sin(theta2)*Math.sin(theta3) + thetad2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3) + thetad3*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2)) - 41*Math.sin(phi3)*(phid1*Math.cos(phi2)*Math.sin(phi1) + phid2*Math.cos(phi1)*Math.sin(phi2) + phid1*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2) + phid2*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1) - thetad2*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta2)) + 41*phid3*Math.cos(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) - 41*phid3*Math.sin(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3))) + Math.sin(theta2)*(Math.cos(phi1)*((phid1*Math.cos(theta2))/40 + (Math.sin(phi1)*Math.sin(theta2)*(crd + thetad1))/40) - 41*phid1*Math.cos(phi1)*Math.cos(theta2) - Math.sin(phi1)*Math.sin(theta2)*(41*thetad2 + 41*crd*Math.cos(phi1) + 41*thetad1*Math.cos(phi1)) + 41*thetad2*Math.sin(phi1)*Math.sin(theta2)) + 2*Math.cos(phi2)*Math.sin(theta2)*((Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))*(phid2/40 + (phid1*Math.cos(theta2))/40 + (crd*Math.sin(phi1)*Math.sin(theta2))/40 + (thetad1*Math.sin(phi1)*Math.sin(theta2))/40) - 41*phid2*Math.cos(phi1)*Math.cos(phi2) - Math.sin(phi1)*Math.sin(theta2)*(41*Math.cos(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) + 41*Math.sin(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) + 41*phid1*Math.sin(phi1)*Math.sin(phi2) - 41*phid1*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2) + 41*phid2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) + 41*thetad2*Math.cos(phi2)*Math.sin(phi1)*Math.sin(theta2)) - 2*Math.sin(phi2)*Math.sin(theta2)*(Math.sin(phi1)*Math.sin(theta2)*(41*Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - 41*Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - (Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1))*(41*phid2 + 41*phid1*Math.cos(theta2) + 41*crd*Math.sin(phi1)*Math.sin(theta2) + 41*thetad1*Math.sin(phi1)*Math.sin(theta2)) + (phid1*Math.cos(phi2)*Math.sin(phi1))/40 + (phid2*Math.cos(phi1)*Math.sin(phi2))/40 + (phid1*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2))/40 + (phid2*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1))/40 - (thetad2*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta2))/40) - Math.cos(cr + theta1)*(10*Math.cos(phi1) + 10*Math.cos(phi1)*Math.cos(phi2) + 10*Math.cos(phi1)*Math.cos(phi2)*Math.cos(phi3) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 10*Math.cos(phi3)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 10*Math.cos(phi1)*Math.cos(theta3)*Math.sin(phi2)*Math.sin(phi3) + 10*Math.sin(phi1)*Math.sin(phi3)*Math.sin(theta2)*Math.sin(theta3) - 10*Math.cos(phi2)*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi1)*Math.sin(phi3))*(5*Math.cos(phi3)*(10*phid2*Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2)*(crd + thetad1) - thetad2*Math.cos(cr + theta1)*Math.cos(theta2) + phid1*Math.sin(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + 10*phid1*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(phi2) - 10*phid2*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2) + 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)*(crd + thetad1)) - 5*Math.sin(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2)*(crd + thetad1) + thetad2*Math.cos(cr + theta1)*Math.sin(theta2) + thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2) - phid1*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)*(crd + thetad1)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2)*(crd + thetad1) - thetad2*Math.cos(cr + theta1)*Math.cos(theta2) + phid1*Math.sin(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + phid2*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + phid1*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(phi2) + phid2*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)*(crd + thetad1)) + 10*thetad3*Math.sin(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)) - 10*thetad3*Math.cos(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) - 5*Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2)*(crd + thetad1) - 10*thetad2*Math.cos(cr + theta1)*Math.cos(theta2) + 10*phid1*Math.sin(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + 10*thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) - 5*phid3*Math.sin(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 50*Math.cos(cr + theta1)*Math.sin(phi1)*(crd + thetad1) + 50*phid1*Math.sin(cr + theta1)*Math.cos(phi1) + 5*phid2*Math.cos(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 5*phid3*Math.cos(phi3)*(10*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) + 50*phid1*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(phi2) - 50*phid2*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2) + 50*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)*(crd + thetad1)) - (1639*Math.cos(phi1)*Math.sin(phi1)*(crd + thetad1))/20 - Math.sin(phi2)*Math.sin(theta2)*((Math.sin(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2))*(41*Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - 41*Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2))) - (Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3))*(41*Math.sin(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) + 41*Math.cos(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2))) + (phid1*Math.cos(phi2)*Math.sin(phi1))/40 + (phid2*Math.cos(phi1)*Math.sin(phi2))/40 + (phid1*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2))/40 + (phid2*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1))/40 - (thetad2*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta2))/40) - 3*Math.sin(cr + theta1)*(10*Math.cos(phi1) + 10*Math.cos(phi1)*Math.cos(phi2) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))*(5*Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2)*(crd + thetad1) + 10*thetad2*Math.sin(cr + theta1)*Math.cos(theta2) + 10*phid1*Math.cos(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + 10*thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + 50*Math.sin(cr + theta1)*Math.sin(phi1)*(crd + thetad1) - 50*phid1*Math.cos(cr + theta1)*Math.cos(phi1) + 5*phid2*Math.cos(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 50*phid1*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(phi2) + 50*phid2*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2) + 50*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)*(crd + thetad1)) - 30*Math.cos(cr + theta1)*Math.cos(phi1)*(50*Math.cos(cr + theta1)*Math.sin(phi1)*(crd + thetad1) + 50*phid1*Math.sin(cr + theta1)*Math.cos(phi1)) - 3*Math.cos(cr + theta1)*(10*Math.cos(phi1) + 10*Math.cos(phi1)*Math.cos(phi2) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))*(50*Math.cos(cr + theta1)*Math.sin(phi1)*(crd + thetad1) - 5*Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2)*(crd + thetad1) - 10*thetad2*Math.cos(cr + theta1)*Math.cos(theta2) + 10*phid1*Math.sin(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + 10*thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + 50*phid1*Math.sin(cr + theta1)*Math.cos(phi1) + 5*phid2*Math.cos(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 50*phid1*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(phi2) - 50*phid2*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2) + 50*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)*(crd + thetad1)) - 30*Math.sin(cr + theta1)*Math.cos(phi1)*(50*Math.sin(cr + theta1)*Math.sin(phi1)*(crd + thetad1) - 50*phid1*Math.cos(cr + theta1)*Math.cos(phi1)) - Math.sin(cr + theta1)*(10*Math.cos(phi1) + 10*Math.cos(phi1)*Math.cos(phi2) + 10*Math.cos(phi1)*Math.cos(phi2)*Math.cos(phi3) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 10*Math.cos(phi3)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 10*Math.cos(phi1)*Math.cos(theta3)*Math.sin(phi2)*Math.sin(phi3) + 10*Math.sin(phi1)*Math.sin(phi3)*Math.sin(theta2)*Math.sin(theta3) - 10*Math.cos(phi2)*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi1)*Math.sin(phi3))*(5*Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2)*(crd + thetad1) + 10*thetad2*Math.sin(cr + theta1)*Math.cos(theta2) + 10*phid1*Math.cos(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + 10*thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) - 5*Math.sin(phi3)*(10*Math.sin(theta3)*(thetad2*Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(theta2)*(crd + thetad1) - thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2) + phid1*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)*(crd + thetad1)) - 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2)*(crd + thetad1) + thetad2*Math.sin(cr + theta1)*Math.cos(theta2) + phid1*Math.cos(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) - phid2*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)*(crd + thetad1) + phid1*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(phi2) + phid2*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 10*thetad3*Math.sin(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)) - 10*thetad3*Math.cos(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) + 5*Math.cos(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2)*(crd + thetad1) + thetad2*Math.sin(cr + theta1)*Math.cos(theta2) + phid1*Math.cos(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + 10*phid2*Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*phid1*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(phi2) + 10*phid2*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)*(crd + thetad1)) + 50*Math.sin(cr + theta1)*Math.sin(phi1)*(crd + thetad1) - 50*phid1*Math.cos(cr + theta1)*Math.cos(phi1) + 5*phid2*Math.cos(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 5*phid3*Math.cos(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) - 5*phid3*Math.sin(phi3)*(10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) - 50*phid1*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(phi2) + 50*phid2*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2) + 50*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)*(crd + thetad1))",
        "vars": [
          "cr",
          "crd",
          "phi1",
          "phi2",
          "phi3",
          "phid1",
          "phid2",
          "phid3",
          "theta1",
          "theta2",
          "theta3",
          "thetad1",
          "thetad2",
          "thetad3"
        ]
      },
      {
        "expr": "Math.cos(theta2)*(Math.sin(theta2)*(41*thetad2 + 41*crd*Math.cos(phi1) + 41*thetad1*Math.cos(phi1)) - 41*thetad2*Math.sin(theta2)) + 2*Math.cos(theta2)*(Math.cos(phi2)*Math.sin(theta2)*(41*Math.cos(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) + 41*Math.sin(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - 41*thetad2*Math.sin(theta2) + Math.sin(phi2)*Math.sin(theta2)*((Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)))/40 - (Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1)))/40)) + 3*(10*Math.sin(phi1) + 10*Math.cos(phi2)*Math.sin(phi1) + 10*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2))*(50*phid1*Math.cos(phi1) + 50*phid1*Math.cos(phi1)*Math.cos(phi2) - 50*phid2*Math.sin(phi1)*Math.sin(phi2) + 50*phid2*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2) - 50*phid1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 50*thetad2*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta2)) - 2*(Math.cos(theta2)*Math.cos(theta3) - Math.cos(phi2)*Math.sin(theta2)*Math.sin(theta3))*(41*thetad2*Math.cos(theta3)*Math.sin(theta2) - (Math.cos(phi3)*(Math.cos(theta2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta3)*Math.sin(theta2)) - Math.sin(phi2)*Math.sin(phi3)*Math.sin(theta2))*(41*Math.cos(phi3)*(thetad3 + thetad2*Math.cos(phi2) + crd*Math.cos(phi1)*Math.cos(phi2) + thetad1*Math.cos(phi1)*Math.cos(phi2) + phid1*Math.sin(phi2)*Math.sin(theta2) - crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) - 41*Math.sin(phi3)*(Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2)))) - (Math.sin(phi3)*(Math.cos(theta2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta3)*Math.sin(theta2)) + Math.cos(phi3)*Math.sin(phi2)*Math.sin(theta2))*((Math.cos(phi3)*(Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2))))/40 + (Math.sin(phi3)*(thetad3 + thetad2*Math.cos(phi2) + crd*Math.cos(phi1)*Math.cos(phi2) + thetad1*Math.cos(phi1)*Math.cos(phi2) + phid1*Math.sin(phi2)*Math.sin(theta2) - crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))/40) + 41*thetad3*Math.cos(theta2)*Math.sin(theta3) + 41*thetad2*Math.cos(phi2)*Math.cos(theta2)*Math.sin(theta3) + 41*thetad3*Math.cos(phi2)*Math.cos(theta3)*Math.sin(theta2) - 41*phid2*Math.sin(phi2)*Math.sin(theta2)*Math.sin(theta3)) - (10*Math.sin(phi1) + 10*Math.cos(phi2)*Math.sin(phi1) - Math.sin(phi3)*(10*Math.cos(theta3)*(Math.sin(phi1)*Math.sin(phi2) - Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2)) + 10*Math.cos(phi1)*Math.sin(theta2)*Math.sin(theta3)) + Math.cos(phi3)*(10*Math.cos(phi2)*Math.sin(phi1) + 10*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2)) + 10*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2))*(5*Math.cos(phi3)*(10*phid2*Math.sin(phi1)*Math.sin(phi2) - 10*phid1*Math.cos(phi1)*Math.cos(phi2) - 10*phid2*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2) + 10*phid1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) + 10*thetad2*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta2)) - 50*phid1*Math.cos(phi1) + 5*Math.sin(phi3)*(10*Math.cos(theta3)*(phid1*Math.cos(phi1)*Math.sin(phi2) + phid2*Math.cos(phi2)*Math.sin(phi1) + phid1*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1) + phid2*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2) + thetad2*Math.cos(phi1)*Math.cos(phi2)*Math.sin(theta2)) - 10*thetad3*Math.sin(theta3)*(Math.sin(phi1)*Math.sin(phi2) - Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2)) + 10*thetad2*Math.cos(phi1)*Math.cos(theta2)*Math.sin(theta3) + 10*thetad3*Math.cos(phi1)*Math.cos(theta3)*Math.sin(theta2) - 10*phid1*Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) + 5*phid3*Math.sin(phi3)*(10*Math.cos(phi2)*Math.sin(phi1) + 10*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2)) - 50*phid1*Math.cos(phi1)*Math.cos(phi2) + 50*phid2*Math.sin(phi1)*Math.sin(phi2) + 5*phid3*Math.cos(phi3)*(10*Math.cos(theta3)*(Math.sin(phi1)*Math.sin(phi2) - Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2)) + 10*Math.cos(phi1)*Math.sin(theta2)*Math.sin(theta3)) - 50*phid2*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2) + 50*phid1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) + 50*thetad2*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta2)) - 2*(Math.sin(phi3)*(Math.cos(theta2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta3)*Math.sin(theta2)) + Math.cos(phi3)*Math.sin(phi2)*Math.sin(theta2))*((Math.sin(phi3)*(thetad2*Math.sin(theta2)*Math.sin(theta3) - thetad3*Math.cos(theta2)*Math.cos(theta3) - thetad2*Math.cos(phi2)*Math.cos(theta2)*Math.cos(theta3) + phid2*Math.cos(theta3)*Math.sin(phi2)*Math.sin(theta2) + thetad3*Math.cos(phi2)*Math.sin(theta2)*Math.sin(theta3)))/40 + (Math.cos(phi3)*(Math.cos(theta2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta3)*Math.sin(theta2)) - Math.sin(phi2)*Math.sin(phi3)*Math.sin(theta2))*(41*phid3 + 41*phid2*Math.cos(theta3) + 41*phid1*Math.cos(theta2)*Math.cos(theta3) + 41*thetad2*Math.sin(phi2)*Math.sin(theta3) + 41*crd*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3) + 41*crd*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2) + 41*thetad1*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3) - 41*phid1*Math.cos(phi2)*Math.sin(theta2)*Math.sin(theta3) + 41*thetad1*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2) + 41*crd*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3) + 41*thetad1*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3)) + (Math.cos(theta2)*Math.cos(theta3) - Math.cos(phi2)*Math.sin(theta2)*Math.sin(theta3))*(41*Math.cos(phi3)*(Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2))) + 41*Math.sin(phi3)*(thetad3 + thetad2*Math.cos(phi2) + crd*Math.cos(phi1)*Math.cos(phi2) + thetad1*Math.cos(phi1)*Math.cos(phi2) + phid1*Math.sin(phi2)*Math.sin(theta2) - crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))) - (phid3*Math.cos(phi3)*(Math.cos(theta2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta3)*Math.sin(theta2)))/40 - (phid2*Math.cos(phi2)*Math.cos(phi3)*Math.sin(theta2))/40 - (thetad2*Math.cos(phi3)*Math.cos(theta2)*Math.sin(phi2))/40 + (phid3*Math.sin(phi2)*Math.sin(phi3)*Math.sin(theta2))/40) - (Math.cos(theta2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta3)*Math.sin(theta2))*((Math.cos(theta2)*Math.cos(theta3) - Math.cos(phi2)*Math.sin(theta2)*Math.sin(theta3))*(41*thetad3 + 41*thetad2*Math.cos(phi2) + 41*crd*Math.cos(phi1)*Math.cos(phi2) + 41*thetad1*Math.cos(phi1)*Math.cos(phi2) + 41*phid1*Math.sin(phi2)*Math.sin(theta2) - 41*crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 41*thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) - Math.sin(phi2)*Math.sin(theta2)*((Math.sin(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))))/40 + (Math.cos(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2)))/40) - 41*thetad3*Math.cos(theta2)*Math.cos(theta3) + 41*thetad2*Math.sin(theta2)*Math.sin(theta3) - 41*thetad2*Math.cos(phi2)*Math.cos(theta2)*Math.cos(theta3) + 41*phid2*Math.cos(theta3)*Math.sin(phi2)*Math.sin(theta2) + 41*thetad3*Math.cos(phi2)*Math.sin(theta2)*Math.sin(theta3)) - 2*(Math.cos(phi3)*(Math.cos(theta2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta3)*Math.sin(theta2)) - Math.sin(phi2)*Math.sin(phi3)*Math.sin(theta2))*((Math.cos(theta2)*Math.cos(theta3) - Math.cos(phi2)*Math.sin(theta2)*Math.sin(theta3))*(41*Math.cos(phi3)*(thetad3 + thetad2*Math.cos(phi2) + crd*Math.cos(phi1)*Math.cos(phi2) + thetad1*Math.cos(phi1)*Math.cos(phi2) + phid1*Math.sin(phi2)*Math.sin(theta2) - crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) - 41*Math.sin(phi3)*(Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2)))) - (Math.sin(phi3)*(Math.cos(theta2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta3)*Math.sin(theta2)) + Math.cos(phi3)*Math.sin(phi2)*Math.sin(theta2))*(phid3/40 + (phid2*Math.cos(theta3))/40 + (phid1*Math.cos(theta2)*Math.cos(theta3))/40 + (thetad2*Math.sin(phi2)*Math.sin(theta3))/40 + (crd*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3))/40 + (crd*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2))/40 + (thetad1*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3))/40 - (phid1*Math.cos(phi2)*Math.sin(theta2)*Math.sin(theta3))/40 + (thetad1*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2))/40 + (crd*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3))/40 + (thetad1*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3))/40) + 41*Math.cos(phi3)*(thetad2*Math.sin(theta2)*Math.sin(theta3) - thetad3*Math.cos(theta2)*Math.cos(theta3) - thetad2*Math.cos(phi2)*Math.cos(theta2)*Math.cos(theta3) + phid2*Math.cos(theta3)*Math.sin(phi2)*Math.sin(theta2) + thetad3*Math.cos(phi2)*Math.sin(theta2)*Math.sin(theta3)) + 41*phid3*Math.sin(phi3)*(Math.cos(theta2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta3)*Math.sin(theta2)) + 41*phid2*Math.cos(phi2)*Math.sin(phi3)*Math.sin(theta2) + 41*phid3*Math.cos(phi3)*Math.sin(phi2)*Math.sin(theta2) + 41*thetad2*Math.cos(theta2)*Math.sin(phi2)*Math.sin(phi3)) - (Math.cos(theta2)*Math.cos(theta3) - Math.cos(phi2)*Math.sin(theta2)*Math.sin(theta3))*(41*thetad2*Math.cos(theta3)*Math.sin(theta2) - Math.sin(phi2)*Math.sin(theta2)*((Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))))/40 - (Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2)))/40) - (Math.cos(theta2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta3)*Math.sin(theta2))*(41*thetad3 + 41*thetad2*Math.cos(phi2) + 41*crd*Math.cos(phi1)*Math.cos(phi2) + 41*thetad1*Math.cos(phi1)*Math.cos(phi2) + 41*phid1*Math.sin(phi2)*Math.sin(theta2) - 41*crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 41*thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) + 41*thetad3*Math.cos(theta2)*Math.sin(theta3) + 41*thetad2*Math.cos(phi2)*Math.cos(theta2)*Math.sin(theta3) + 41*thetad3*Math.cos(phi2)*Math.cos(theta3)*Math.sin(theta2) - 41*phid2*Math.sin(phi2)*Math.sin(theta2)*Math.sin(theta3)) - Math.sin(theta2)*(Math.cos(theta2)*(41*thetad2 + 41*crd*Math.cos(phi1) + 41*thetad1*Math.cos(phi1)) - 41*thetad2*Math.cos(theta2)) - 3*Math.cos(cr + theta1)*(5*Math.cos(cr + theta1)*(10*phid1*Math.sin(phi1) + 10*phid1*Math.cos(phi2)*Math.sin(phi1) + 10*phid2*Math.cos(phi1)*Math.sin(phi2) + 10*phid1*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2) + 10*phid2*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1) - 10*thetad2*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta2)) + 5*Math.sin(cr + theta1)*(crd + thetad1)*(10*Math.cos(phi1) + 10*Math.cos(phi1)*Math.cos(phi2) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))*(10*Math.cos(phi1) + 10*Math.cos(phi1)*Math.cos(phi2) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) - 3*Math.sin(cr + theta1)*(5*Math.sin(cr + theta1)*(10*phid1*Math.sin(phi1) + 10*phid1*Math.cos(phi2)*Math.sin(phi1) + 10*phid2*Math.cos(phi1)*Math.sin(phi2) + 10*phid1*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2) + 10*phid2*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1) - 10*thetad2*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta2)) - 5*Math.cos(cr + theta1)*(crd + thetad1)*(10*Math.cos(phi1) + 10*Math.cos(phi1)*Math.cos(phi2) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))*(10*Math.cos(phi1) + 10*Math.cos(phi1)*Math.cos(phi2) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) - 2*Math.sin(phi2)*Math.sin(theta2)*(Math.cos(theta2)*(41*Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - 41*Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) + Math.cos(phi2)*Math.sin(theta2)*(41*phid2 + 41*phid1*Math.cos(theta2) + 41*crd*Math.sin(phi1)*Math.sin(theta2) + 41*thetad1*Math.sin(phi1)*Math.sin(theta2)) - (phid2*Math.cos(phi2)*Math.sin(theta2))/40 - (thetad2*Math.cos(theta2)*Math.sin(phi2))/40) - 2*Math.cos(phi2)*Math.sin(theta2)*(Math.cos(theta2)*(41*Math.cos(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) + 41*Math.sin(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - Math.sin(phi2)*Math.sin(theta2)*(phid2/40 + (phid1*Math.cos(theta2))/40 + (crd*Math.sin(phi1)*Math.sin(theta2))/40 + (thetad1*Math.sin(phi1)*Math.sin(theta2))/40) - 41*thetad2*Math.cos(phi2)*Math.cos(theta2) + 41*phid2*Math.sin(phi2)*Math.sin(theta2)) + 1500*phid1*Math.cos(phi1)*Math.sin(phi1) - 30*Math.cos(cr + theta1)*Math.cos(phi1)*(50*Math.sin(cr + theta1)*Math.cos(phi1)*(crd + thetad1) + 50*phid1*Math.cos(cr + theta1)*Math.sin(phi1)) + 30*Math.sin(cr + theta1)*Math.cos(phi1)*(50*Math.cos(cr + theta1)*Math.cos(phi1)*(crd + thetad1) - 50*phid1*Math.sin(cr + theta1)*Math.sin(phi1)) - Math.cos(cr + theta1)*(5*Math.cos(cr + theta1)*(10*phid1*Math.sin(phi1) + 10*phid1*Math.cos(phi2)*Math.sin(phi1) + 10*phid2*Math.cos(phi1)*Math.sin(phi2) + 10*phid1*Math.cos(phi2)*Math.cos(phi3)*Math.sin(phi1) + 10*phid2*Math.cos(phi1)*Math.cos(phi3)*Math.sin(phi2) + 10*phid3*Math.cos(phi1)*Math.cos(phi2)*Math.sin(phi3) + 10*phid1*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2) + 10*phid2*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1) - 10*thetad2*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta2) + 10*phid1*Math.cos(phi1)*Math.cos(phi3)*Math.cos(theta2)*Math.sin(phi2) + 10*phid2*Math.cos(phi2)*Math.cos(phi3)*Math.cos(theta2)*Math.sin(phi1) + 10*phid2*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta3)*Math.sin(phi3) + 10*phid3*Math.cos(phi1)*Math.cos(phi3)*Math.cos(theta3)*Math.sin(phi2) - 10*phid1*Math.cos(theta3)*Math.sin(phi1)*Math.sin(phi2)*Math.sin(phi3) - 10*phid3*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)*Math.sin(phi3) - 10*phid1*Math.cos(phi1)*Math.sin(phi3)*Math.sin(theta2)*Math.sin(theta3) - 10*thetad2*Math.cos(phi3)*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta2) - 10*phid3*Math.cos(phi3)*Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3) - 10*thetad3*Math.cos(phi1)*Math.sin(phi2)*Math.sin(phi3)*Math.sin(theta3) - 10*thetad2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi3)*Math.sin(theta3) - 10*thetad3*Math.cos(theta3)*Math.sin(phi1)*Math.sin(phi3)*Math.sin(theta2) + 10*phid1*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi3) + 10*phid3*Math.cos(phi2)*Math.cos(phi3)*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi1) - 10*phid2*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi1)*Math.sin(phi2)*Math.sin(phi3) - 10*thetad2*Math.cos(phi2)*Math.cos(theta3)*Math.sin(phi1)*Math.sin(phi3)*Math.sin(theta2) - 10*thetad3*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi3)*Math.sin(theta3)) + 5*Math.sin(cr + theta1)*(crd + thetad1)*(10*Math.cos(phi1) + 10*Math.cos(phi1)*Math.cos(phi2) + 10*Math.cos(phi1)*Math.cos(phi2)*Math.cos(phi3) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 10*Math.cos(phi3)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 10*Math.cos(phi1)*Math.cos(theta3)*Math.sin(phi2)*Math.sin(phi3) + 10*Math.sin(phi1)*Math.sin(phi3)*Math.sin(theta2)*Math.sin(theta3) - 10*Math.cos(phi2)*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi1)*Math.sin(phi3)))*(10*Math.cos(phi1) + 10*Math.cos(phi1)*Math.cos(phi2) + 10*Math.cos(phi1)*Math.cos(phi2)*Math.cos(phi3) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 10*Math.cos(phi3)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 10*Math.cos(phi1)*Math.cos(theta3)*Math.sin(phi2)*Math.sin(phi3) + 10*Math.sin(phi1)*Math.sin(phi3)*Math.sin(theta2)*Math.sin(theta3) - 10*Math.cos(phi2)*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi1)*Math.sin(phi3)) - Math.sin(cr + theta1)*(5*Math.sin(cr + theta1)*(10*phid1*Math.sin(phi1) + 10*phid1*Math.cos(phi2)*Math.sin(phi1) + 10*phid2*Math.cos(phi1)*Math.sin(phi2) + 10*phid1*Math.cos(phi2)*Math.cos(phi3)*Math.sin(phi1) + 10*phid2*Math.cos(phi1)*Math.cos(phi3)*Math.sin(phi2) + 10*phid3*Math.cos(phi1)*Math.cos(phi2)*Math.sin(phi3) + 10*phid1*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2) + 10*phid2*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1) - 10*thetad2*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta2) + 10*phid1*Math.cos(phi1)*Math.cos(phi3)*Math.cos(theta2)*Math.sin(phi2) + 10*phid2*Math.cos(phi2)*Math.cos(phi3)*Math.cos(theta2)*Math.sin(phi1) + 10*phid2*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta3)*Math.sin(phi3) + 10*phid3*Math.cos(phi1)*Math.cos(phi3)*Math.cos(theta3)*Math.sin(phi2) - 10*phid1*Math.cos(theta3)*Math.sin(phi1)*Math.sin(phi2)*Math.sin(phi3) - 10*phid3*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)*Math.sin(phi3) - 10*phid1*Math.cos(phi1)*Math.sin(phi3)*Math.sin(theta2)*Math.sin(theta3) - 10*thetad2*Math.cos(phi3)*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta2) - 10*phid3*Math.cos(phi3)*Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3) - 10*thetad3*Math.cos(phi1)*Math.sin(phi2)*Math.sin(phi3)*Math.sin(theta3) - 10*thetad2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi3)*Math.sin(theta3) - 10*thetad3*Math.cos(theta3)*Math.sin(phi1)*Math.sin(phi3)*Math.sin(theta2) + 10*phid1*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi3) + 10*phid3*Math.cos(phi2)*Math.cos(phi3)*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi1) - 10*phid2*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi1)*Math.sin(phi2)*Math.sin(phi3) - 10*thetad2*Math.cos(phi2)*Math.cos(theta3)*Math.sin(phi1)*Math.sin(phi3)*Math.sin(theta2) - 10*thetad3*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi3)*Math.sin(theta3)) - 5*Math.cos(cr + theta1)*(crd + thetad1)*(10*Math.cos(phi1) + 10*Math.cos(phi1)*Math.cos(phi2) + 10*Math.cos(phi1)*Math.cos(phi2)*Math.cos(phi3) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 10*Math.cos(phi3)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 10*Math.cos(phi1)*Math.cos(theta3)*Math.sin(phi2)*Math.sin(phi3) + 10*Math.sin(phi1)*Math.sin(phi3)*Math.sin(theta2)*Math.sin(theta3) - 10*Math.cos(phi2)*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi1)*Math.sin(phi3)))*(10*Math.cos(phi1) + 10*Math.cos(phi1)*Math.cos(phi2) + 10*Math.cos(phi1)*Math.cos(phi2)*Math.cos(phi3) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 10*Math.cos(phi3)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 10*Math.cos(phi1)*Math.cos(theta3)*Math.sin(phi2)*Math.sin(phi3) + 10*Math.sin(phi1)*Math.sin(phi3)*Math.sin(theta2)*Math.sin(theta3) - 10*Math.cos(phi2)*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi1)*Math.sin(phi3)) - Math.sin(phi2)*Math.sin(theta2)*((Math.cos(theta2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta3)*Math.sin(theta2))*(41*Math.sin(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) + 41*Math.cos(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2))) + (Math.cos(theta2)*Math.cos(theta3) - Math.cos(phi2)*Math.sin(theta2)*Math.sin(theta3))*(41*Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - 41*Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2))) - (phid2*Math.cos(phi2)*Math.sin(theta2))/40 - (thetad2*Math.cos(theta2)*Math.sin(phi2))/40)",
        "vars": [
          "cr",
          "crd",
          "phi1",
          "phi2",
          "phi3",
          "phid1",
          "phid2",
          "phid3",
          "theta1",
          "theta2",
          "theta3",
          "thetad1",
          "thetad2",
          "thetad3"
        ]
      },
      {
        "expr": "2*(Math.cos(phi3)*(Math.cos(theta2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta3)*Math.sin(theta2)) - Math.sin(phi2)*Math.sin(phi3)*Math.sin(theta2))*((Math.cos(phi2)*Math.cos(phi3) - Math.cos(theta3)*Math.sin(phi2)*Math.sin(phi3))*(phid3/40 + (phid2*Math.cos(theta3))/40 + (phid1*Math.cos(theta2)*Math.cos(theta3))/40 + (thetad2*Math.sin(phi2)*Math.sin(theta3))/40 + (crd*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3))/40 + (crd*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2))/40 + (thetad1*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3))/40 - (phid1*Math.cos(phi2)*Math.sin(theta2)*Math.sin(theta3))/40 + (thetad1*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2))/40 + (crd*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3))/40 + (thetad1*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3))/40) - 41*phid3*Math.cos(phi2)*Math.cos(phi3) + 41*phid2*Math.sin(phi2)*Math.sin(phi3) - Math.sin(phi2)*Math.sin(theta3)*(41*Math.cos(phi3)*(thetad3 + thetad2*Math.cos(phi2) + crd*Math.cos(phi1)*Math.cos(phi2) + thetad1*Math.cos(phi1)*Math.cos(phi2) + phid1*Math.sin(phi2)*Math.sin(theta2) - crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) - 41*Math.sin(phi3)*(Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2)))) - 41*phid2*Math.cos(phi2)*Math.cos(phi3)*Math.cos(theta3) + 41*phid3*Math.cos(theta3)*Math.sin(phi2)*Math.sin(phi3) + 41*thetad3*Math.cos(phi3)*Math.sin(phi2)*Math.sin(theta3)) - 2*(Math.sin(phi3)*(Math.cos(theta2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta3)*Math.sin(theta2)) + Math.cos(phi3)*Math.sin(phi2)*Math.sin(theta2))*((phid2*Math.cos(phi3)*Math.sin(phi2))/40 - (Math.cos(phi2)*Math.sin(phi3) + Math.cos(phi3)*Math.cos(theta3)*Math.sin(phi2))*(41*phid3 + 41*phid2*Math.cos(theta3) + 41*phid1*Math.cos(theta2)*Math.cos(theta3) + 41*thetad2*Math.sin(phi2)*Math.sin(theta3) + 41*crd*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3) + 41*crd*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2) + 41*thetad1*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3) - 41*phid1*Math.cos(phi2)*Math.sin(theta2)*Math.sin(theta3) + 41*thetad1*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2) + 41*crd*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3) + 41*thetad1*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3)) + (phid3*Math.cos(phi2)*Math.sin(phi3))/40 + Math.sin(phi2)*Math.sin(theta3)*(41*Math.cos(phi3)*(Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2))) + 41*Math.sin(phi3)*(thetad3 + thetad2*Math.cos(phi2) + crd*Math.cos(phi1)*Math.cos(phi2) + thetad1*Math.cos(phi1)*Math.cos(phi2) + phid1*Math.sin(phi2)*Math.sin(theta2) - crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))) + (phid2*Math.cos(phi2)*Math.cos(theta3)*Math.sin(phi3))/40 + (phid3*Math.cos(phi3)*Math.cos(theta3)*Math.sin(phi2))/40 - (thetad3*Math.sin(phi2)*Math.sin(phi3)*Math.sin(theta3))/40) - Math.cos(theta2)*((phid1*Math.sin(theta2))/40 - (Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))/40) + (Math.cos(theta2)*Math.cos(theta3) - Math.cos(phi2)*Math.sin(theta2)*Math.sin(theta3))*(Math.cos(phi2)*((Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))))/40 - (Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2)))/40) - Math.cos(theta3)*Math.sin(phi2)*(41*thetad3 + 41*thetad2*Math.cos(phi2) + 41*crd*Math.cos(phi1)*Math.cos(phi2) + 41*thetad1*Math.cos(phi1)*Math.cos(phi2) + 41*phid1*Math.sin(phi2)*Math.sin(theta2) - 41*crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 41*thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) + 41*phid2*Math.cos(phi2)*Math.sin(theta3) + 41*thetad3*Math.cos(theta3)*Math.sin(phi2)) + 2*Math.cos(theta2)*(Math.cos(phi2)*((Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)))/40 - (Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1)))/40) - Math.sin(phi2)*(41*Math.cos(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) + 41*Math.sin(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1)))) + Math.sin(theta2)*((phid1*Math.cos(theta2))/40 + (Math.sin(phi1)*Math.sin(theta2)*(crd + thetad1))/40) + (Math.cos(theta2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta3)*Math.sin(theta2))*(Math.cos(phi2)*((Math.sin(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))))/40 + (Math.cos(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2)))/40) - Math.sin(phi2)*Math.sin(theta3)*(41*thetad3 + 41*thetad2*Math.cos(phi2) + 41*crd*Math.cos(phi1)*Math.cos(phi2) + 41*thetad1*Math.cos(phi1)*Math.cos(phi2) + 41*phid1*Math.sin(phi2)*Math.sin(theta2) - 41*crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 41*thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) - 41*phid2*Math.cos(phi2)*Math.cos(theta3) + 41*thetad3*Math.sin(phi2)*Math.sin(theta3)) - 3*(10*Math.sin(phi1) + 10*Math.cos(phi2)*Math.sin(phi1) + 10*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2))*(50*phid1*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta2) + 50*phid2*Math.cos(phi2)*Math.sin(phi1)*Math.sin(theta2) + 50*thetad2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) - (5*Math.sin(phi1)*(10*phid2*Math.cos(phi2)*Math.sin(theta2) + 10*thetad2*Math.cos(theta2)*Math.sin(phi2) + 10*phid2*Math.cos(phi2)*Math.cos(phi3)*Math.sin(theta2) + 10*thetad2*Math.cos(phi3)*Math.cos(theta2)*Math.sin(phi2) + 10*phid3*Math.cos(phi3)*Math.cos(theta2)*Math.sin(theta3) + 10*thetad3*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi3) - 10*phid3*Math.sin(phi2)*Math.sin(phi3)*Math.sin(theta2) - 10*thetad2*Math.sin(phi3)*Math.sin(theta2)*Math.sin(theta3) + 10*phid3*Math.cos(phi2)*Math.cos(phi3)*Math.cos(theta3)*Math.sin(theta2) + 10*thetad2*Math.cos(phi2)*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi3) - 10*phid2*Math.cos(theta3)*Math.sin(phi2)*Math.sin(phi3)*Math.sin(theta2) - 10*thetad3*Math.cos(phi2)*Math.sin(phi3)*Math.sin(theta2)*Math.sin(theta3)) + 5*phid1*Math.cos(phi1)*(10*Math.sin(phi2)*Math.sin(theta2) + 10*Math.cos(theta2)*Math.sin(phi3)*Math.sin(theta3) + 10*Math.cos(phi3)*Math.sin(phi2)*Math.sin(theta2) + 10*Math.cos(phi2)*Math.cos(theta3)*Math.sin(phi3)*Math.sin(theta2)))*(10*Math.sin(phi1) + 10*Math.cos(phi2)*Math.sin(phi1) - Math.sin(phi3)*(10*Math.cos(theta3)*(Math.sin(phi1)*Math.sin(phi2) - Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2)) + 10*Math.cos(phi1)*Math.sin(theta2)*Math.sin(theta3)) + Math.cos(phi3)*(10*Math.cos(phi2)*Math.sin(phi1) + 10*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2)) + 10*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2)) + 2*(Math.cos(theta2)*Math.cos(theta3) - Math.cos(phi2)*Math.sin(theta2)*Math.sin(theta3))*((Math.cos(phi2)*Math.cos(phi3) - Math.cos(theta3)*Math.sin(phi2)*Math.sin(phi3))*((Math.cos(phi3)*(Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2))))/40 + (Math.sin(phi3)*(thetad3 + thetad2*Math.cos(phi2) + crd*Math.cos(phi1)*Math.cos(phi2) + thetad1*Math.cos(phi1)*Math.cos(phi2) + phid1*Math.sin(phi2)*Math.sin(theta2) - crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))/40) - (Math.cos(phi2)*Math.sin(phi3) + Math.cos(phi3)*Math.cos(theta3)*Math.sin(phi2))*(41*Math.cos(phi3)*(thetad3 + thetad2*Math.cos(phi2) + crd*Math.cos(phi1)*Math.cos(phi2) + thetad1*Math.cos(phi1)*Math.cos(phi2) + phid1*Math.sin(phi2)*Math.sin(theta2) - crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) - 41*Math.sin(phi3)*(Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2)))) + 41*phid2*Math.cos(phi2)*Math.sin(theta3) + 41*thetad3*Math.cos(theta3)*Math.sin(phi2)) - 3*Math.sin(cr + theta1)*(5*Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.cos(theta2)*(crd + thetad1) + 10*thetad2*Math.cos(cr + theta1)*Math.sin(theta2) + 10*thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2) - 10*phid1*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(theta2) + 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)*(crd + thetad1)) - 5*phid2*Math.cos(phi2)*(10*Math.cos(cr + theta1)*Math.cos(theta2) - 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)))*(10*Math.cos(phi1) + 10*Math.cos(phi1)*Math.cos(phi2) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) - Math.sin(phi2)*Math.sin(theta2)*((phid2*Math.sin(phi2))/40 + Math.sin(phi2)*Math.sin(theta3)*(41*Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - 41*Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2))) - Math.cos(theta3)*Math.sin(phi2)*(41*Math.sin(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) + 41*Math.cos(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2)))) + Math.cos(cr + theta1)*(5*Math.sin(phi2)*(10*thetad2*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(theta2)*(crd + thetad1) - 10*thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2) + 10*phid1*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)*(crd + thetad1)) + 5*Math.sin(phi3)*(10*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.sin(theta2)*(crd + thetad1) + thetad2*Math.sin(cr + theta1)*Math.cos(theta2) + phid1*Math.cos(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + 10*Math.cos(phi2)*Math.cos(theta3)*(thetad2*Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(theta2)*(crd + thetad1) - thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2) + phid1*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)*(crd + thetad1)) + 10*thetad3*Math.cos(theta3)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*phid2*Math.cos(theta3)*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*thetad3*Math.cos(phi2)*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) + 5*Math.cos(phi3)*Math.sin(phi2)*(10*thetad2*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(theta2)*(crd + thetad1) - 10*thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2) + 10*phid1*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)*(crd + thetad1)) + 5*phid3*Math.cos(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(phi2)*Math.cos(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) - 5*phid2*Math.cos(phi2)*(10*Math.sin(cr + theta1)*Math.cos(theta2) + 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) - 5*phid2*Math.cos(phi2)*Math.cos(phi3)*(10*Math.sin(cr + theta1)*Math.cos(theta2) + 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 5*phid3*Math.sin(phi2)*Math.sin(phi3)*(10*Math.sin(cr + theta1)*Math.cos(theta2) + 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)))*(10*Math.cos(phi1) + 10*Math.cos(phi1)*Math.cos(phi2) + 10*Math.cos(phi1)*Math.cos(phi2)*Math.cos(phi3) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 10*Math.cos(phi3)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 10*Math.cos(phi1)*Math.cos(theta3)*Math.sin(phi2)*Math.sin(phi3) + 10*Math.sin(phi1)*Math.sin(phi3)*Math.sin(theta2)*Math.sin(theta3) - 10*Math.cos(phi2)*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi1)*Math.sin(phi3)) + 2*Math.cos(phi2)*Math.sin(theta2)*(Math.cos(phi2)*(phid2/40 + (phid1*Math.cos(theta2))/40 + (crd*Math.sin(phi1)*Math.sin(theta2))/40 + (thetad1*Math.sin(phi1)*Math.sin(theta2))/40) - 41*phid2*Math.cos(phi2)) + 2*Math.sin(phi2)*Math.sin(theta2)*(Math.sin(phi2)*(41*phid2 + 41*phid1*Math.cos(theta2) + 41*crd*Math.sin(phi1)*Math.sin(theta2) + 41*thetad1*Math.sin(phi1)*Math.sin(theta2)) - (phid2*Math.sin(phi2))/40) - Math.sin(cr + theta1)*(5*Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.cos(theta2)*(crd + thetad1) + 10*thetad2*Math.cos(cr + theta1)*Math.sin(theta2) + 10*thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2) - 10*phid1*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(theta2) + 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)*(crd + thetad1)) + 5*Math.sin(phi3)*(10*Math.cos(phi2)*Math.cos(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2)*(crd + thetad1) + thetad2*Math.cos(cr + theta1)*Math.sin(theta2) + thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2) - phid1*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)*(crd + thetad1)) - 10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.sin(theta2)*(crd + thetad1) - thetad2*Math.cos(cr + theta1)*Math.cos(theta2) + phid1*Math.sin(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + 10*thetad3*Math.cos(theta3)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*phid2*Math.cos(theta3)*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*thetad3*Math.cos(phi2)*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) + 5*Math.cos(phi3)*Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.cos(theta2)*(crd + thetad1) + 10*thetad2*Math.cos(cr + theta1)*Math.sin(theta2) + 10*thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2) - 10*phid1*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(theta2) + 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)*(crd + thetad1)) + 5*phid3*Math.cos(phi3)*(10*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(phi2)*Math.cos(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) - 5*phid2*Math.cos(phi2)*(10*Math.cos(cr + theta1)*Math.cos(theta2) - 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) - 5*phid2*Math.cos(phi2)*Math.cos(phi3)*(10*Math.cos(cr + theta1)*Math.cos(theta2) - 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 5*phid3*Math.sin(phi2)*Math.sin(phi3)*(10*Math.cos(cr + theta1)*Math.cos(theta2) - 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)))*(10*Math.cos(phi1) + 10*Math.cos(phi1)*Math.cos(phi2) + 10*Math.cos(phi1)*Math.cos(phi2)*Math.cos(phi3) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 10*Math.cos(phi3)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 10*Math.cos(phi1)*Math.cos(theta3)*Math.sin(phi2)*Math.sin(phi3) + 10*Math.sin(phi1)*Math.sin(phi3)*Math.sin(theta2)*Math.sin(theta3) - 10*Math.cos(phi2)*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi1)*Math.sin(phi3)) + 3*Math.cos(cr + theta1)*(5*Math.sin(phi2)*(10*thetad2*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(theta2)*(crd + thetad1) - 10*thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2) + 10*phid1*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)*(crd + thetad1)) - 5*phid2*Math.cos(phi2)*(10*Math.sin(cr + theta1)*Math.cos(theta2) + 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)))*(10*Math.cos(phi1) + 10*Math.cos(phi1)*Math.cos(phi2) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))",
        "vars": [
          "cr",
          "crd",
          "phi1",
          "phi2",
          "phi3",
          "phid1",
          "phid2",
          "phid3",
          "theta1",
          "theta2",
          "theta3",
          "thetad1",
          "thetad2",
          "thetad3"
        ]
      },
      {
        "expr": "2*(Math.cos(theta2)*Math.cos(theta3) - Math.cos(phi2)*Math.sin(theta2)*Math.sin(theta3))*(Math.cos(phi3)*Math.sin(theta3)*(41*Math.cos(phi3)*(thetad3 + thetad2*Math.cos(phi2) + crd*Math.cos(phi1)*Math.cos(phi2) + thetad1*Math.cos(phi1)*Math.cos(phi2) + phid1*Math.sin(phi2)*Math.sin(theta2) - crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) - 41*Math.sin(phi3)*(Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2)))) - 41*thetad3*Math.sin(theta3) + Math.sin(phi3)*Math.sin(theta3)*((Math.cos(phi3)*(Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2))))/40 + (Math.sin(phi3)*(thetad3 + thetad2*Math.cos(phi2) + crd*Math.cos(phi1)*Math.cos(phi2) + thetad1*Math.cos(phi1)*Math.cos(phi2) + phid1*Math.sin(phi2)*Math.sin(theta2) - crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))/40)) - (10*Math.sin(phi1) + 10*Math.cos(phi2)*Math.sin(phi1) - Math.sin(phi3)*(10*Math.cos(theta3)*(Math.sin(phi1)*Math.sin(phi2) - Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2)) + 10*Math.cos(phi1)*Math.sin(theta2)*Math.sin(theta3)) + Math.cos(phi3)*(10*Math.cos(phi2)*Math.sin(phi1) + 10*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2)) + 10*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2))*(5*Math.cos(phi3)*(10*phid1*Math.sin(phi1)*Math.sin(phi2) - 10*phid2*Math.cos(phi1)*Math.cos(phi2) - 10*phid1*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2) + 10*phid2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) + 10*thetad2*Math.cos(phi2)*Math.sin(phi1)*Math.sin(theta2)) + 5*phid3*Math.sin(phi3)*(10*Math.cos(phi1)*Math.sin(phi2) + 10*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - 50*phid2*Math.cos(phi1)*Math.cos(phi2) + 50*phid1*Math.sin(phi1)*Math.sin(phi2) + 5*Math.cos(theta3)*Math.sin(phi3)*(10*phid1*Math.cos(phi2)*Math.sin(phi1) + 10*phid2*Math.cos(phi1)*Math.sin(phi2) + 10*phid1*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2) + 10*phid2*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1) - 10*thetad2*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta2)) + 5*thetad3*Math.sin(phi3)*Math.sin(theta3)*(10*Math.cos(phi1)*Math.cos(phi2) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) - 50*phid1*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2) + 50*phid2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) + 50*thetad2*Math.cos(phi2)*Math.sin(phi1)*Math.sin(theta2) - 5*phid3*Math.cos(phi3)*Math.cos(theta3)*(10*Math.cos(phi1)*Math.cos(phi2) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))) - (Math.cos(theta2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta3)*Math.sin(theta2))*(Math.cos(theta3)*(41*thetad3 + 41*thetad2*Math.cos(phi2) + 41*crd*Math.cos(phi1)*Math.cos(phi2) + 41*thetad1*Math.cos(phi1)*Math.cos(phi2) + 41*phid1*Math.sin(phi2)*Math.sin(theta2) - 41*crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 41*thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) - 41*thetad3*Math.cos(theta3)) - 2*(Math.sin(phi3)*(Math.cos(theta2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta3)*Math.sin(theta2)) + Math.cos(phi3)*Math.sin(phi2)*Math.sin(theta2))*(Math.cos(theta3)*(41*Math.cos(phi3)*(Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2))) + 41*Math.sin(phi3)*(thetad3 + thetad2*Math.cos(phi2) + crd*Math.cos(phi1)*Math.cos(phi2) + thetad1*Math.cos(phi1)*Math.cos(phi2) + phid1*Math.sin(phi2)*Math.sin(theta2) - crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))) - (phid3*Math.cos(phi3)*Math.sin(theta3))/40 - (thetad3*Math.cos(theta3)*Math.sin(phi3))/40 + Math.cos(phi3)*Math.sin(theta3)*(41*phid3 + 41*phid2*Math.cos(theta3) + 41*phid1*Math.cos(theta2)*Math.cos(theta3) + 41*thetad2*Math.sin(phi2)*Math.sin(theta3) + 41*crd*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3) + 41*crd*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2) + 41*thetad1*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3) - 41*phid1*Math.cos(phi2)*Math.sin(theta2)*Math.sin(theta3) + 41*thetad1*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2) + 41*crd*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3) + 41*thetad1*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3))) + (Math.cos(theta2)*Math.cos(theta3) - Math.cos(phi2)*Math.sin(theta2)*Math.sin(theta3))*(Math.sin(theta3)*(41*thetad3 + 41*thetad2*Math.cos(phi2) + 41*crd*Math.cos(phi1)*Math.cos(phi2) + 41*thetad1*Math.cos(phi1)*Math.cos(phi2) + 41*phid1*Math.sin(phi2)*Math.sin(theta2) - 41*crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 41*thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) - 41*thetad3*Math.sin(theta3)) - 2*(Math.cos(phi3)*(Math.cos(theta2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta3)*Math.sin(theta2)) - Math.sin(phi2)*Math.sin(phi3)*Math.sin(theta2))*(Math.cos(theta3)*(41*Math.cos(phi3)*(thetad3 + thetad2*Math.cos(phi2) + crd*Math.cos(phi1)*Math.cos(phi2) + thetad1*Math.cos(phi1)*Math.cos(phi2) + phid1*Math.sin(phi2)*Math.sin(theta2) - crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) - 41*Math.sin(phi3)*(Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2)))) - 41*thetad3*Math.cos(phi3)*Math.cos(theta3) + 41*phid3*Math.sin(phi3)*Math.sin(theta3) - Math.sin(phi3)*Math.sin(theta3)*(phid3/40 + (phid2*Math.cos(theta3))/40 + (phid1*Math.cos(theta2)*Math.cos(theta3))/40 + (thetad2*Math.sin(phi2)*Math.sin(theta3))/40 + (crd*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3))/40 + (crd*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2))/40 + (thetad1*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3))/40 - (phid1*Math.cos(phi2)*Math.sin(theta2)*Math.sin(theta3))/40 + (thetad1*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2))/40 + (crd*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3))/40 + (thetad1*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3))/40)) - 3*(10*Math.sin(phi1) + 10*Math.cos(phi2)*Math.sin(phi1) + 10*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2))*(50*phid1*Math.sin(phi1)*Math.sin(phi2) - 50*phid2*Math.cos(phi1)*Math.cos(phi2) - 50*phid1*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2) + 50*phid2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) + 50*thetad2*Math.cos(phi2)*Math.sin(phi1)*Math.sin(theta2)) - Math.sin(cr + theta1)*(10*Math.cos(phi1) + 10*Math.cos(phi1)*Math.cos(phi2) + 10*Math.cos(phi1)*Math.cos(phi2)*Math.cos(phi3) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 10*Math.cos(phi3)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 10*Math.cos(phi1)*Math.cos(theta3)*Math.sin(phi2)*Math.sin(phi3) + 10*Math.sin(phi1)*Math.sin(phi3)*Math.sin(theta2)*Math.sin(theta3) - 10*Math.cos(phi2)*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi1)*Math.sin(phi3))*(5*Math.cos(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2)*(crd + thetad1) - 10*thetad2*Math.cos(cr + theta1)*Math.cos(theta2) + 10*phid1*Math.sin(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + 10*thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + 5*Math.cos(phi3)*(10*Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2)*(crd + thetad1) - thetad2*Math.cos(cr + theta1)*Math.cos(theta2) + phid1*Math.sin(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + 10*phid2*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*phid1*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(phi2) + 10*phid2*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1) + 10*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)*(crd + thetad1)) + 5*phid3*Math.sin(phi3)*(10*Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)) + 5*phid2*Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 5*Math.cos(theta3)*Math.sin(phi3)*(10*phid2*Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2)*(crd + thetad1) - thetad2*Math.cos(cr + theta1)*Math.cos(theta2) + phid1*Math.sin(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + 10*phid1*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(phi2) - 10*phid2*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2) + 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)*(crd + thetad1)) + 50*phid1*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(phi2) + 50*phid2*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1) + 5*phid3*Math.cos(phi3)*Math.cos(theta3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 50*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)*(crd + thetad1) - 5*thetad3*Math.sin(phi3)*Math.sin(theta3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1))) - 3*Math.cos(cr + theta1)*(10*Math.cos(phi1) + 10*Math.cos(phi1)*Math.cos(phi2) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))*(5*Math.cos(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2)*(crd + thetad1) + 10*thetad2*Math.sin(cr + theta1)*Math.cos(theta2) + 10*phid1*Math.cos(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + 10*thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) - 5*phid2*Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 50*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)*(crd + thetad1) + 50*phid1*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(phi2) + 50*phid2*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) - 3*Math.sin(cr + theta1)*(10*Math.cos(phi1) + 10*Math.cos(phi1)*Math.cos(phi2) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))*(5*Math.cos(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2)*(crd + thetad1) - 10*thetad2*Math.cos(cr + theta1)*Math.cos(theta2) + 10*phid1*Math.sin(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + 10*thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + 5*phid2*Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 50*phid1*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(phi2) + 50*phid2*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1) + 50*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)*(crd + thetad1)) - Math.cos(cr + theta1)*(10*Math.cos(phi1) + 10*Math.cos(phi1)*Math.cos(phi2) + 10*Math.cos(phi1)*Math.cos(phi2)*Math.cos(phi3) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 10*Math.cos(phi3)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 10*Math.cos(phi1)*Math.cos(theta3)*Math.sin(phi2)*Math.sin(phi3) + 10*Math.sin(phi1)*Math.sin(phi3)*Math.sin(theta2)*Math.sin(theta3) - 10*Math.cos(phi2)*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi1)*Math.sin(phi3))*(5*Math.cos(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2)*(crd + thetad1) + 10*thetad2*Math.sin(cr + theta1)*Math.cos(theta2) + 10*phid1*Math.cos(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + 10*thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + 5*Math.cos(phi3)*(10*Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2)*(crd + thetad1) + thetad2*Math.sin(cr + theta1)*Math.cos(theta2) + phid1*Math.cos(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) - 10*phid2*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)*(crd + thetad1) + 10*phid1*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(phi2) + 10*phid2*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) - 5*Math.cos(theta3)*Math.sin(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2)*(crd + thetad1) + thetad2*Math.sin(cr + theta1)*Math.cos(theta2) + phid1*Math.cos(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + 10*phid2*Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*phid1*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(phi2) + 10*phid2*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)*(crd + thetad1)) - 5*phid2*Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 5*phid3*Math.sin(phi3)*(10*Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)) - 50*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)*(crd + thetad1) + 50*phid1*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(phi2) + 50*phid2*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1) - 5*phid3*Math.cos(phi3)*Math.cos(theta3)*(10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 5*thetad3*Math.sin(phi3)*Math.sin(theta3)*(10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1))) - 2*Math.cos(phi2)*Math.sin(theta2)*(41*Math.cos(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) + 41*Math.sin(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - 2*Math.sin(phi2)*Math.sin(theta2)*(41*Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - 41*Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - Math.sin(phi2)*Math.sin(theta2)*(Math.cos(theta3)*(41*Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - 41*Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2))) + Math.sin(theta3)*(41*Math.sin(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) + 41*Math.cos(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2))))",
        "vars": [
          "cr",
          "crd",
          "phi1",
          "phi2",
          "phi3",
          "phid1",
          "phid2",
          "phid3",
          "theta1",
          "theta2",
          "theta3",
          "thetad1",
          "thetad2",
          "thetad3"
        ]
      },
      {
        "expr": "2*(Math.cos(theta2)*Math.cos(theta3) - Math.cos(phi2)*Math.sin(theta2)*Math.sin(theta3))*(Math.cos(phi3)*((Math.cos(phi3)*(Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2))))/40 + (Math.sin(phi3)*(thetad3 + thetad2*Math.cos(phi2) + crd*Math.cos(phi1)*Math.cos(phi2) + thetad1*Math.cos(phi1)*Math.cos(phi2) + phid1*Math.sin(phi2)*Math.sin(theta2) - crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))/40) - Math.sin(phi3)*(41*Math.cos(phi3)*(thetad3 + thetad2*Math.cos(phi2) + crd*Math.cos(phi1)*Math.cos(phi2) + thetad1*Math.cos(phi1)*Math.cos(phi2) + phid1*Math.sin(phi2)*Math.sin(theta2) - crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) - 41*Math.sin(phi3)*(Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2))))) - 2*(Math.sin(phi3)*(Math.cos(theta2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta3)*Math.sin(theta2)) + Math.cos(phi3)*Math.sin(phi2)*Math.sin(theta2))*((phid3*Math.sin(phi3))/40 - Math.sin(phi3)*(41*phid3 + 41*phid2*Math.cos(theta3) + 41*phid1*Math.cos(theta2)*Math.cos(theta3) + 41*thetad2*Math.sin(phi2)*Math.sin(theta3) + 41*crd*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3) + 41*crd*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2) + 41*thetad1*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3) - 41*phid1*Math.cos(phi2)*Math.sin(theta2)*Math.sin(theta3) + 41*thetad1*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2) + 41*crd*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3) + 41*thetad1*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3))) - 2*(Math.cos(phi3)*(Math.cos(theta2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta3)*Math.sin(theta2)) - Math.sin(phi2)*Math.sin(phi3)*Math.sin(theta2))*(41*phid3*Math.cos(phi3) - Math.cos(phi3)*(phid3/40 + (phid2*Math.cos(theta3))/40 + (phid1*Math.cos(theta2)*Math.cos(theta3))/40 + (thetad2*Math.sin(phi2)*Math.sin(theta3))/40 + (crd*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3))/40 + (crd*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2))/40 + (thetad1*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3))/40 - (phid1*Math.cos(phi2)*Math.sin(theta2)*Math.sin(theta3))/40 + (thetad1*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2))/40 + (crd*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3))/40 + (thetad1*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3))/40)) + (Math.cos(theta2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta3)*Math.sin(theta2))*((Math.sin(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))))/40 + (Math.cos(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2)))/40) + (Math.cos(theta2)*Math.cos(theta3) - Math.cos(phi2)*Math.sin(theta2)*Math.sin(theta3))*((Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))))/40 - (Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2)))/40) - (5*Math.sin(phi3)*(10*thetad3*Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - 10*Math.sin(theta3)*(phid1*Math.sin(phi1)*Math.sin(phi2) - phid2*Math.cos(phi1)*Math.cos(phi2) - phid1*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2) + phid2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) + thetad2*Math.cos(phi2)*Math.sin(phi1)*Math.sin(theta2)) + 10*phid1*Math.cos(phi1)*Math.cos(theta3)*Math.sin(theta2) + 10*thetad2*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi1) - 10*thetad3*Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) + 5*phid3*Math.cos(phi3)*(10*Math.sin(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + 10*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2)))*(10*Math.sin(phi1) + 10*Math.cos(phi2)*Math.sin(phi1) - Math.sin(phi3)*(10*Math.cos(theta3)*(Math.sin(phi1)*Math.sin(phi2) - Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2)) + 10*Math.cos(phi1)*Math.sin(theta2)*Math.sin(theta3)) + Math.cos(phi3)*(10*Math.cos(phi2)*Math.sin(phi1) + 10*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2)) + 10*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2)) + Math.cos(cr + theta1)*(5*Math.sin(phi3)*(10*Math.cos(theta3)*(thetad2*Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(theta2)*(crd + thetad1) - thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2) + phid1*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)*(crd + thetad1)) + 10*Math.sin(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2)*(crd + thetad1) + thetad2*Math.sin(cr + theta1)*Math.cos(theta2) + phid1*Math.cos(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) - phid2*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)*(crd + thetad1) + phid1*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(phi2) + phid2*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 10*thetad3*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*thetad3*Math.cos(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) - 5*phid3*Math.cos(phi3)*(10*Math.cos(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) - 10*Math.sin(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))))*(10*Math.cos(phi1) + 10*Math.cos(phi1)*Math.cos(phi2) + 10*Math.cos(phi1)*Math.cos(phi2)*Math.cos(phi3) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 10*Math.cos(phi3)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 10*Math.cos(phi1)*Math.cos(theta3)*Math.sin(phi2)*Math.sin(phi3) + 10*Math.sin(phi1)*Math.sin(phi3)*Math.sin(theta2)*Math.sin(theta3) - 10*Math.cos(phi2)*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi1)*Math.sin(phi3)) - Math.sin(cr + theta1)*(5*Math.sin(phi3)*(10*Math.cos(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2)*(crd + thetad1) + thetad2*Math.cos(cr + theta1)*Math.sin(theta2) + thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2) - phid1*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)*(crd + thetad1)) - 10*Math.sin(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2)*(crd + thetad1) - thetad2*Math.cos(cr + theta1)*Math.cos(theta2) + phid1*Math.sin(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + phid2*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + phid1*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(phi2) + phid2*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)*(crd + thetad1)) + 10*thetad3*Math.cos(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)) + 10*thetad3*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) - 5*phid3*Math.cos(phi3)*(10*Math.cos(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) - 10*Math.sin(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))))*(10*Math.cos(phi1) + 10*Math.cos(phi1)*Math.cos(phi2) + 10*Math.cos(phi1)*Math.cos(phi2)*Math.cos(phi3) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 10*Math.cos(phi3)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 10*Math.cos(phi1)*Math.cos(theta3)*Math.sin(phi2)*Math.sin(phi3) + 10*Math.sin(phi1)*Math.sin(phi3)*Math.sin(theta2)*Math.sin(theta3) - 10*Math.cos(phi2)*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi1)*Math.sin(phi3))",
        "vars": [
          "cr",
          "crd",
          "phi1",
          "phi2",
          "phi3",
          "phid1",
          "phid2",
          "phid3",
          "theta1",
          "theta2",
          "theta3",
          "thetad1",
          "thetad2",
          "thetad3"
        ]
      },
      {
        "expr": "Math.cos(cr + theta1)*(5*Math.cos(phi3)*(10*Math.sin(theta3)*(thetad2*Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(theta2)*(crd + thetad1) - thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2) + phid1*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)*(crd + thetad1)) - 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2)*(crd + thetad1) + thetad2*Math.sin(cr + theta1)*Math.cos(theta2) + phid1*Math.cos(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) - phid2*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)*(crd + thetad1) + phid1*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(phi2) + phid2*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 10*thetad3*Math.sin(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)) - 10*thetad3*Math.cos(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) + 5*Math.sin(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2)*(crd + thetad1) + thetad2*Math.sin(cr + theta1)*Math.cos(theta2) + phid1*Math.cos(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + 10*phid2*Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*phid1*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(phi2) + 10*phid2*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)*(crd + thetad1)) + 5*phid3*Math.sin(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) + 5*phid3*Math.cos(phi3)*(10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)))*(10*Math.cos(phi1) + 10*Math.cos(phi1)*Math.cos(phi2) + 10*Math.cos(phi1)*Math.cos(phi2)*Math.cos(phi3) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 10*Math.cos(phi3)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 10*Math.cos(phi1)*Math.cos(theta3)*Math.sin(phi2)*Math.sin(phi3) + 10*Math.sin(phi1)*Math.sin(phi3)*Math.sin(theta2)*Math.sin(theta3) - 10*Math.cos(phi2)*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi1)*Math.sin(phi3)) - 2*(Math.sin(phi3)*(Math.cos(theta2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta3)*Math.sin(theta2)) + Math.cos(phi3)*Math.sin(phi2)*Math.sin(theta2))*(41*Math.cos(phi3)*(Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2))) + 41*Math.sin(phi3)*(thetad3 + thetad2*Math.cos(phi2) + crd*Math.cos(phi1)*Math.cos(phi2) + thetad1*Math.cos(phi1)*Math.cos(phi2) + phid1*Math.sin(phi2)*Math.sin(theta2) - crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))) - 2*(Math.cos(phi3)*(Math.cos(theta2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta3)*Math.sin(theta2)) - Math.sin(phi2)*Math.sin(phi3)*Math.sin(theta2))*(41*Math.cos(phi3)*(thetad3 + thetad2*Math.cos(phi2) + crd*Math.cos(phi1)*Math.cos(phi2) + thetad1*Math.cos(phi1)*Math.cos(phi2) + phid1*Math.sin(phi2)*Math.sin(theta2) - crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) - 41*Math.sin(phi3)*(Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2)))) - (5*Math.cos(phi3)*(10*Math.cos(theta3)*(phid1*Math.sin(phi1)*Math.sin(phi2) - phid2*Math.cos(phi1)*Math.cos(phi2) - phid1*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2) + phid2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) + thetad2*Math.cos(phi2)*Math.sin(phi1)*Math.sin(theta2)) + 10*thetad3*Math.sin(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + 10*phid1*Math.cos(phi1)*Math.sin(theta2)*Math.sin(theta3) + 10*thetad2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3) + 10*thetad3*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2)) + 5*Math.sin(phi3)*(10*phid1*Math.cos(phi2)*Math.sin(phi1) + 10*phid2*Math.cos(phi1)*Math.sin(phi2) + 10*phid1*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2) + 10*phid2*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1) - 10*thetad2*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta2)) - 5*phid3*Math.cos(phi3)*(10*Math.cos(phi1)*Math.cos(phi2) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) + 5*phid3*Math.sin(phi3)*(10*Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - 10*Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)))*(10*Math.sin(phi1) + 10*Math.cos(phi2)*Math.sin(phi1) - Math.sin(phi3)*(10*Math.cos(theta3)*(Math.sin(phi1)*Math.sin(phi2) - Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2)) + 10*Math.cos(phi1)*Math.sin(theta2)*Math.sin(theta3)) + Math.cos(phi3)*(10*Math.cos(phi2)*Math.sin(phi1) + 10*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2)) + 10*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2)) - Math.sin(cr + theta1)*(5*Math.cos(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2)*(crd + thetad1) + thetad2*Math.cos(cr + theta1)*Math.sin(theta2) + thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2) - phid1*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)*(crd + thetad1)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2)*(crd + thetad1) - thetad2*Math.cos(cr + theta1)*Math.cos(theta2) + phid1*Math.sin(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + phid2*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + phid1*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(phi2) + phid2*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)*(crd + thetad1)) + 10*thetad3*Math.sin(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)) - 10*thetad3*Math.cos(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) + 5*Math.sin(phi3)*(10*phid2*Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2)*(crd + thetad1) - thetad2*Math.cos(cr + theta1)*Math.cos(theta2) + phid1*Math.sin(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + 10*phid1*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(phi2) - 10*phid2*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2) + 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)*(crd + thetad1)) + 5*phid3*Math.sin(phi3)*(10*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) + 5*phid3*Math.cos(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)))*(10*Math.cos(phi1) + 10*Math.cos(phi1)*Math.cos(phi2) + 10*Math.cos(phi1)*Math.cos(phi2)*Math.cos(phi3) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 10*Math.cos(phi3)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 10*Math.cos(phi1)*Math.cos(theta3)*Math.sin(phi2)*Math.sin(phi3) + 10*Math.sin(phi1)*Math.sin(phi3)*Math.sin(theta2)*Math.sin(theta3) - 10*Math.cos(phi2)*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi1)*Math.sin(phi3))",
        "vars": [
          "cr",
          "crd",
          "phi1",
          "phi2",
          "phi3",
          "phid1",
          "phid2",
          "phid3",
          "theta1",
          "theta2",
          "theta3",
          "thetad1",
          "thetad2",
          "thetad3"
        ]
      }
    ],
    [
      {
        "expr": "2*(Math.cos(phi2)*Math.sin(phi3) + Math.cos(phi3)*Math.cos(theta3)*Math.sin(phi2))*((41*Math.cos(phi3)*(thetad3 + thetad2*Math.cos(phi2) + crd*Math.cos(phi1)*Math.cos(phi2) + thetad1*Math.cos(phi1)*Math.cos(phi2) + phid1*Math.sin(phi2)*Math.sin(theta2) - crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) - 41*Math.sin(phi3)*(Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2))))*(Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2) + Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3)) + (Math.sin(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) - Math.cos(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))*(phid3/40 + (phid2*Math.cos(theta3))/40 + (phid1*Math.cos(theta2)*Math.cos(theta3))/40 + (thetad2*Math.sin(phi2)*Math.sin(theta3))/40 + (crd*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3))/40 + (crd*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2))/40 + (thetad1*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3))/40 - (phid1*Math.cos(phi2)*Math.sin(theta2)*Math.sin(theta3))/40 + (thetad1*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2))/40 + (crd*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3))/40 + (thetad1*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3))/40) - 41*Math.cos(phi3)*(Math.cos(theta3)*(phid1*Math.sin(phi1)*Math.sin(phi2) - phid2*Math.cos(phi1)*Math.cos(phi2) - phid1*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2) + phid2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) + thetad2*Math.cos(phi2)*Math.sin(phi1)*Math.sin(theta2)) + thetad3*Math.sin(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + phid1*Math.cos(phi1)*Math.sin(theta2)*Math.sin(theta3) + thetad2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3) + thetad3*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2)) - 41*Math.sin(phi3)*(phid1*Math.cos(phi2)*Math.sin(phi1) + phid2*Math.cos(phi1)*Math.sin(phi2) + phid1*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2) + phid2*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1) - thetad2*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta2)) + 41*phid3*Math.cos(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) - 41*phid3*Math.sin(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3))) - 2*Math.sin(phi2)*((Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))*(phid2/40 + (phid1*Math.cos(theta2))/40 + (crd*Math.sin(phi1)*Math.sin(theta2))/40 + (thetad1*Math.sin(phi1)*Math.sin(theta2))/40) - 41*phid2*Math.cos(phi1)*Math.cos(phi2) - Math.sin(phi1)*Math.sin(theta2)*(41*Math.cos(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) + 41*Math.sin(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) + 41*phid1*Math.sin(phi1)*Math.sin(phi2) - 41*phid1*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2) + 41*phid2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) + 41*thetad2*Math.cos(phi2)*Math.sin(phi1)*Math.sin(theta2)) - 2*Math.cos(phi2)*(Math.sin(phi1)*Math.sin(theta2)*(41*Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - 41*Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - (Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1))*(41*phid2 + 41*phid1*Math.cos(theta2) + 41*crd*Math.sin(phi1)*Math.sin(theta2) + 41*thetad1*Math.sin(phi1)*Math.sin(theta2)) + (phid1*Math.cos(phi2)*Math.sin(phi1))/40 + (phid2*Math.cos(phi1)*Math.sin(phi2))/40 + (phid1*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2))/40 + (phid2*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1))/40 - (thetad2*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta2))/40) - 2*(Math.cos(phi2)*Math.cos(phi3) - Math.cos(theta3)*Math.sin(phi2)*Math.sin(phi3))*((41*Math.cos(phi3)*(Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2))) + 41*Math.sin(phi3)*(thetad3 + thetad2*Math.cos(phi2) + crd*Math.cos(phi1)*Math.cos(phi2) + thetad1*Math.cos(phi1)*Math.cos(phi2) + phid1*Math.sin(phi2)*Math.sin(theta2) - crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))*(Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2) + Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3)) - (Math.cos(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) + Math.sin(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))*(41*phid3 + 41*phid2*Math.cos(theta3) + 41*phid1*Math.cos(theta2)*Math.cos(theta3) + 41*thetad2*Math.sin(phi2)*Math.sin(theta3) + 41*crd*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3) + 41*crd*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2) + 41*thetad1*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3) - 41*phid1*Math.cos(phi2)*Math.sin(theta2)*Math.sin(theta3) + 41*thetad1*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2) + 41*crd*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3) + 41*thetad1*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3)) + (Math.cos(phi3)*(phid1*Math.cos(phi2)*Math.sin(phi1) + phid2*Math.cos(phi1)*Math.sin(phi2) + phid1*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2) + phid2*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1) - thetad2*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta2)))/40 - (Math.sin(phi3)*(Math.cos(theta3)*(phid1*Math.sin(phi1)*Math.sin(phi2) - phid2*Math.cos(phi1)*Math.cos(phi2) - phid1*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2) + phid2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) + thetad2*Math.cos(phi2)*Math.sin(phi1)*Math.sin(theta2)) + thetad3*Math.sin(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + phid1*Math.cos(phi1)*Math.sin(theta2)*Math.sin(theta3) + thetad2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3) + thetad3*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2)))/40 + (phid3*Math.sin(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))/40 + (phid3*Math.cos(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)))/40) - Math.cos(phi2)*((Math.sin(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2))*(41*Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - 41*Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2))) - (Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3))*(41*Math.sin(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) + 41*Math.cos(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2))) + (phid1*Math.cos(phi2)*Math.sin(phi1))/40 + (phid2*Math.cos(phi1)*Math.sin(phi2))/40 + (phid1*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2))/40 + (phid2*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1))/40 - (thetad2*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta2))/40) + (Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.cos(theta2) + 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) - Math.sin(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(phi2)*Math.cos(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) + Math.cos(phi3)*Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.cos(theta2) + 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)))*((61*crd*Math.cos(cr))/20 - 5*Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2)*(crd + thetad1) - 10*thetad2*Math.cos(cr + theta1)*Math.cos(theta2) + 10*phid1*Math.sin(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + 10*thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + (117*crd*Math.sin(cr))/5 - 5*Math.sin(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2)*(crd + thetad1) + thetad2*Math.cos(cr + theta1)*Math.sin(theta2) + thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2) - phid1*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)*(crd + thetad1)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2)*(crd + thetad1) - thetad2*Math.cos(cr + theta1)*Math.cos(theta2) + phid1*Math.sin(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + phid2*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + phid1*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(phi2) + phid2*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)*(crd + thetad1)) + 10*thetad3*Math.sin(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)) - 10*thetad3*Math.cos(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) + 5*Math.cos(phi3)*(10*phid2*Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2)*(crd + thetad1) - thetad2*Math.cos(cr + theta1)*Math.cos(theta2) + phid1*Math.sin(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + 10*phid1*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(phi2) - 10*phid2*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2) + 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)*(crd + thetad1)) - 5*phid3*Math.sin(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 50*Math.cos(cr + theta1)*Math.sin(phi1)*(crd + thetad1) + 50*phid1*Math.sin(cr + theta1)*Math.cos(phi1) + 5*phid2*Math.cos(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 5*phid3*Math.cos(phi3)*(10*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) + 50*phid1*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(phi2) - 50*phid2*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2) + 50*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)*(crd + thetad1)) - (phid1*Math.sin(phi1))/40 - (Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.cos(theta2) - 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) - Math.sin(phi3)*(10*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(phi2)*Math.cos(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) + Math.cos(phi3)*Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.cos(theta2) - 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)))*(5*Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2)*(crd + thetad1) + 10*thetad2*Math.sin(cr + theta1)*Math.cos(theta2) + 10*phid1*Math.cos(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + 10*thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) - 5*Math.sin(phi3)*(10*Math.sin(theta3)*(thetad2*Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(theta2)*(crd + thetad1) - thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2) + phid1*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)*(crd + thetad1)) - 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2)*(crd + thetad1) + thetad2*Math.sin(cr + theta1)*Math.cos(theta2) + phid1*Math.cos(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) - phid2*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)*(crd + thetad1) + phid1*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(phi2) + phid2*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 10*thetad3*Math.sin(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)) - 10*thetad3*Math.cos(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) - (117*crd*Math.cos(cr))/5 + (61*crd*Math.sin(cr))/20 + 5*Math.cos(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2)*(crd + thetad1) + thetad2*Math.sin(cr + theta1)*Math.cos(theta2) + phid1*Math.cos(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + 10*phid2*Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*phid1*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(phi2) + 10*phid2*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)*(crd + thetad1)) + 50*Math.sin(cr + theta1)*Math.sin(phi1)*(crd + thetad1) - 50*phid1*Math.cos(cr + theta1)*Math.cos(phi1) + 5*phid2*Math.cos(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 5*phid3*Math.cos(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) - 5*phid3*Math.sin(phi3)*(10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) - 50*phid1*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(phi2) + 50*phid2*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2) + 50*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)*(crd + thetad1)) - Math.cos(theta3)*Math.sin(phi2)*((Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))*((Math.sin(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))))/40 + (Math.cos(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2)))/40) - (Math.sin(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2))*(41*thetad3 + 41*thetad2*Math.cos(phi2) + 41*crd*Math.cos(phi1)*Math.cos(phi2) + 41*thetad1*Math.cos(phi1)*Math.cos(phi2) + 41*phid1*Math.sin(phi2)*Math.sin(theta2) - 41*crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 41*thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) + 41*Math.cos(theta3)*(phid1*Math.sin(phi1)*Math.sin(phi2) - phid2*Math.cos(phi1)*Math.cos(phi2) - phid1*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2) + phid2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) + thetad2*Math.cos(phi2)*Math.sin(phi1)*Math.sin(theta2)) + 41*thetad3*Math.sin(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + 41*phid1*Math.cos(phi1)*Math.sin(theta2)*Math.sin(theta3) + 41*thetad2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3) + 41*thetad3*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2)) + Math.sin(phi2)*Math.sin(theta3)*((Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))*((Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))))/40 - (Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2)))/40) - (Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3))*(41*thetad3 + 41*thetad2*Math.cos(phi2) + 41*crd*Math.cos(phi1)*Math.cos(phi2) + 41*thetad1*Math.cos(phi1)*Math.cos(phi2) + 41*phid1*Math.sin(phi2)*Math.sin(theta2) - 41*crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 41*thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) - 41*Math.sin(theta3)*(phid1*Math.sin(phi1)*Math.sin(phi2) - phid2*Math.cos(phi1)*Math.cos(phi2) - phid1*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2) + phid2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) + thetad2*Math.cos(phi2)*Math.sin(phi1)*Math.sin(theta2)) + 41*thetad3*Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + 41*phid1*Math.cos(phi1)*Math.cos(theta3)*Math.sin(theta2) + 41*thetad2*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi1) - 41*thetad3*Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) - 3*Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.cos(theta2) - 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))*(5*Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2)*(crd + thetad1) + 10*thetad2*Math.sin(cr + theta1)*Math.cos(theta2) + 10*phid1*Math.cos(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + 10*thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) - (117*crd*Math.cos(cr))/5 + (61*crd*Math.sin(cr))/20 + 50*Math.sin(cr + theta1)*Math.sin(phi1)*(crd + thetad1) - 50*phid1*Math.cos(cr + theta1)*Math.cos(phi1) + 5*phid2*Math.cos(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 50*phid1*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(phi2) + 50*phid2*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2) + 50*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)*(crd + thetad1)) + 3*Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.cos(theta2) + 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))*((61*crd*Math.cos(cr))/20 - 5*Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2)*(crd + thetad1) - 10*thetad2*Math.cos(cr + theta1)*Math.cos(theta2) + 10*phid1*Math.sin(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + 10*thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + (117*crd*Math.sin(cr))/5 + 50*Math.cos(cr + theta1)*Math.sin(phi1)*(crd + thetad1) + 50*phid1*Math.sin(cr + theta1)*Math.cos(phi1) + 5*phid2*Math.cos(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 50*phid1*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(phi2) - 50*phid2*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2) + 50*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)*(crd + thetad1)) + Math.cos(theta2)*Math.sin(phi1)*(41*phid1*Math.cos(theta2) + 41*Math.sin(phi1)*Math.sin(theta2)*(crd + thetad1)) - 2*Math.sin(phi2)*Math.sin(theta3)*((Math.cos(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) + Math.sin(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))*(41*Math.cos(phi3)*(thetad3 + thetad2*Math.cos(phi2) + crd*Math.cos(phi1)*Math.cos(phi2) + thetad1*Math.cos(phi1)*Math.cos(phi2) + phid1*Math.sin(phi2)*Math.sin(theta2) - crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) - 41*Math.sin(phi3)*(Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2)))) + (Math.sin(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) - Math.cos(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))*((Math.cos(phi3)*(Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2))))/40 + (Math.sin(phi3)*(thetad3 + thetad2*Math.cos(phi2) + crd*Math.cos(phi1)*Math.cos(phi2) + thetad1*Math.cos(phi1)*Math.cos(phi2) + phid1*Math.sin(phi2)*Math.sin(theta2) - crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))/40) - 41*phid2*Math.cos(phi1)*Math.cos(phi2)*Math.sin(theta3) - 41*phid1*Math.cos(phi1)*Math.cos(theta3)*Math.sin(theta2) - 41*thetad3*Math.cos(phi1)*Math.cos(theta3)*Math.sin(phi2) - 41*thetad2*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi1) + 41*phid1*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta3) + 41*thetad3*Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3) - 41*phid1*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2)*Math.sin(theta3) - 41*thetad3*Math.cos(phi2)*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi1) + 41*phid2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta3) + 41*thetad2*Math.cos(phi2)*Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) + Math.sin(phi1)*Math.sin(theta2)*(41*phid1*Math.sin(theta2) - 41*Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))",
        "vars": [
          "cr",
          "crd",
          "phi1",
          "phi2",
          "phi3",
          "phid1",
          "phid2",
          "phid3",
          "theta1",
          "theta2",
          "theta3",
          "thetad1",
          "thetad2",
          "thetad3"
        ]
      },
      {
        "expr": "(10*crd*Math.sin(cr) + 5*cr*crd*Math.cos(cr))*(Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.cos(theta2) - 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) - Math.sin(phi3)*(10*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(phi2)*Math.cos(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) + Math.cos(phi3)*Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.cos(theta2) - 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) - (10*crd*Math.cos(cr) - 5*cr*crd*Math.sin(cr))*(Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.cos(theta2) + 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) - Math.sin(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(phi2)*Math.cos(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) + Math.cos(phi3)*Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.cos(theta2) + 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) - 3*Math.sin(phi2)*(10*crd*Math.cos(cr) - 5*cr*crd*Math.sin(cr))*(10*Math.sin(cr + theta1)*Math.cos(theta2) + 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 3*Math.sin(phi2)*(10*crd*Math.sin(cr) + 5*cr*crd*Math.cos(cr))*(10*Math.cos(cr + theta1)*Math.cos(theta2) - 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))",
        "vars": [
          "cr",
          "crd",
          "phi1",
          "phi2",
          "phi3",
          "theta1",
          "theta2",
          "theta3"
        ]
      },
      {
        "expr": "2*(Math.cos(phi2)*Math.sin(phi3) + Math.cos(phi3)*Math.cos(theta3)*Math.sin(phi2))*((41*Math.cos(phi3)*(thetad3 + thetad2*Math.cos(phi2) + crd*Math.cos(phi1)*Math.cos(phi2) + thetad1*Math.cos(phi1)*Math.cos(phi2) + phid1*Math.sin(phi2)*Math.sin(theta2) - crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) - 41*Math.sin(phi3)*(Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2))))*(Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2) + Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3)) + (Math.sin(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) - Math.cos(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))*(phid3/40 + (phid2*Math.cos(theta3))/40 + (phid1*Math.cos(theta2)*Math.cos(theta3))/40 + (thetad2*Math.sin(phi2)*Math.sin(theta3))/40 + (crd*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3))/40 + (crd*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2))/40 + (thetad1*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3))/40 - (phid1*Math.cos(phi2)*Math.sin(theta2)*Math.sin(theta3))/40 + (thetad1*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2))/40 + (crd*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3))/40 + (thetad1*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3))/40) - 41*Math.cos(phi3)*(Math.cos(theta3)*(phid1*Math.sin(phi1)*Math.sin(phi2) - phid2*Math.cos(phi1)*Math.cos(phi2) - phid1*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2) + phid2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) + thetad2*Math.cos(phi2)*Math.sin(phi1)*Math.sin(theta2)) + thetad3*Math.sin(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + phid1*Math.cos(phi1)*Math.sin(theta2)*Math.sin(theta3) + thetad2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3) + thetad3*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2)) - 41*Math.sin(phi3)*(phid1*Math.cos(phi2)*Math.sin(phi1) + phid2*Math.cos(phi1)*Math.sin(phi2) + phid1*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2) + phid2*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1) - thetad2*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta2)) + 41*phid3*Math.cos(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) - 41*phid3*Math.sin(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3))) - 2*Math.sin(phi2)*((Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))*(phid2/40 + (phid1*Math.cos(theta2))/40 + (crd*Math.sin(phi1)*Math.sin(theta2))/40 + (thetad1*Math.sin(phi1)*Math.sin(theta2))/40) - 41*phid2*Math.cos(phi1)*Math.cos(phi2) - Math.sin(phi1)*Math.sin(theta2)*(41*Math.cos(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) + 41*Math.sin(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) + 41*phid1*Math.sin(phi1)*Math.sin(phi2) - 41*phid1*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2) + 41*phid2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) + 41*thetad2*Math.cos(phi2)*Math.sin(phi1)*Math.sin(theta2)) - 2*Math.cos(phi2)*(Math.sin(phi1)*Math.sin(theta2)*(41*Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - 41*Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - (Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1))*(41*phid2 + 41*phid1*Math.cos(theta2) + 41*crd*Math.sin(phi1)*Math.sin(theta2) + 41*thetad1*Math.sin(phi1)*Math.sin(theta2)) + (phid1*Math.cos(phi2)*Math.sin(phi1))/40 + (phid2*Math.cos(phi1)*Math.sin(phi2))/40 + (phid1*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2))/40 + (phid2*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1))/40 - (thetad2*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta2))/40) - 2*(Math.cos(phi2)*Math.cos(phi3) - Math.cos(theta3)*Math.sin(phi2)*Math.sin(phi3))*((41*Math.cos(phi3)*(Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2))) + 41*Math.sin(phi3)*(thetad3 + thetad2*Math.cos(phi2) + crd*Math.cos(phi1)*Math.cos(phi2) + thetad1*Math.cos(phi1)*Math.cos(phi2) + phid1*Math.sin(phi2)*Math.sin(theta2) - crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))*(Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2) + Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3)) - (Math.cos(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) + Math.sin(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))*(41*phid3 + 41*phid2*Math.cos(theta3) + 41*phid1*Math.cos(theta2)*Math.cos(theta3) + 41*thetad2*Math.sin(phi2)*Math.sin(theta3) + 41*crd*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3) + 41*crd*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2) + 41*thetad1*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3) - 41*phid1*Math.cos(phi2)*Math.sin(theta2)*Math.sin(theta3) + 41*thetad1*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2) + 41*crd*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3) + 41*thetad1*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3)) + (Math.cos(phi3)*(phid1*Math.cos(phi2)*Math.sin(phi1) + phid2*Math.cos(phi1)*Math.sin(phi2) + phid1*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2) + phid2*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1) - thetad2*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta2)))/40 - (Math.sin(phi3)*(Math.cos(theta3)*(phid1*Math.sin(phi1)*Math.sin(phi2) - phid2*Math.cos(phi1)*Math.cos(phi2) - phid1*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2) + phid2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) + thetad2*Math.cos(phi2)*Math.sin(phi1)*Math.sin(theta2)) + thetad3*Math.sin(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + phid1*Math.cos(phi1)*Math.sin(theta2)*Math.sin(theta3) + thetad2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3) + thetad3*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2)))/40 + (phid3*Math.sin(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))/40 + (phid3*Math.cos(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)))/40) - Math.cos(phi2)*((Math.sin(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2))*(41*Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - 41*Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2))) - (Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3))*(41*Math.sin(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) + 41*Math.cos(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2))) + (phid1*Math.cos(phi2)*Math.sin(phi1))/40 + (phid2*Math.cos(phi1)*Math.sin(phi2))/40 + (phid1*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2))/40 + (phid2*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1))/40 - (thetad2*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta2))/40) + (Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.cos(theta2) + 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) - Math.sin(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(phi2)*Math.cos(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) + Math.cos(phi3)*Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.cos(theta2) + 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)))*(5*Math.cos(phi3)*(10*phid2*Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2)*(crd + thetad1) - thetad2*Math.cos(cr + theta1)*Math.cos(theta2) + phid1*Math.sin(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + 10*phid1*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(phi2) - 10*phid2*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2) + 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)*(crd + thetad1)) - 5*Math.sin(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2)*(crd + thetad1) + thetad2*Math.cos(cr + theta1)*Math.sin(theta2) + thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2) - phid1*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)*(crd + thetad1)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2)*(crd + thetad1) - thetad2*Math.cos(cr + theta1)*Math.cos(theta2) + phid1*Math.sin(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + phid2*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + phid1*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(phi2) + phid2*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)*(crd + thetad1)) + 10*thetad3*Math.sin(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)) - 10*thetad3*Math.cos(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) - 5*Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2)*(crd + thetad1) - 10*thetad2*Math.cos(cr + theta1)*Math.cos(theta2) + 10*phid1*Math.sin(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + 10*thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) - 5*phid3*Math.sin(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 50*Math.cos(cr + theta1)*Math.sin(phi1)*(crd + thetad1) + 50*phid1*Math.sin(cr + theta1)*Math.cos(phi1) + 5*phid2*Math.cos(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 5*phid3*Math.cos(phi3)*(10*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) + 50*phid1*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(phi2) - 50*phid2*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2) + 50*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)*(crd + thetad1)) - (phid1*Math.sin(phi1))/40 - (Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.cos(theta2) - 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) - Math.sin(phi3)*(10*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(phi2)*Math.cos(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) + Math.cos(phi3)*Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.cos(theta2) - 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)))*(5*Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2)*(crd + thetad1) + 10*thetad2*Math.sin(cr + theta1)*Math.cos(theta2) + 10*phid1*Math.cos(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + 10*thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) - 5*Math.sin(phi3)*(10*Math.sin(theta3)*(thetad2*Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(theta2)*(crd + thetad1) - thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2) + phid1*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)*(crd + thetad1)) - 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2)*(crd + thetad1) + thetad2*Math.sin(cr + theta1)*Math.cos(theta2) + phid1*Math.cos(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) - phid2*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)*(crd + thetad1) + phid1*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(phi2) + phid2*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 10*thetad3*Math.sin(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)) - 10*thetad3*Math.cos(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) + 5*Math.cos(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2)*(crd + thetad1) + thetad2*Math.sin(cr + theta1)*Math.cos(theta2) + phid1*Math.cos(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + 10*phid2*Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*phid1*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(phi2) + 10*phid2*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)*(crd + thetad1)) + 50*Math.sin(cr + theta1)*Math.sin(phi1)*(crd + thetad1) - 50*phid1*Math.cos(cr + theta1)*Math.cos(phi1) + 5*phid2*Math.cos(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 5*phid3*Math.cos(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) - 5*phid3*Math.sin(phi3)*(10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) - 50*phid1*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(phi2) + 50*phid2*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2) + 50*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)*(crd + thetad1)) - Math.cos(theta3)*Math.sin(phi2)*((Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))*((Math.sin(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))))/40 + (Math.cos(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2)))/40) - (Math.sin(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2))*(41*thetad3 + 41*thetad2*Math.cos(phi2) + 41*crd*Math.cos(phi1)*Math.cos(phi2) + 41*thetad1*Math.cos(phi1)*Math.cos(phi2) + 41*phid1*Math.sin(phi2)*Math.sin(theta2) - 41*crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 41*thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) + 41*Math.cos(theta3)*(phid1*Math.sin(phi1)*Math.sin(phi2) - phid2*Math.cos(phi1)*Math.cos(phi2) - phid1*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2) + phid2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) + thetad2*Math.cos(phi2)*Math.sin(phi1)*Math.sin(theta2)) + 41*thetad3*Math.sin(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + 41*phid1*Math.cos(phi1)*Math.sin(theta2)*Math.sin(theta3) + 41*thetad2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3) + 41*thetad3*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2)) + Math.sin(phi2)*Math.sin(theta3)*((Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))*((Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))))/40 - (Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2)))/40) - (Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3))*(41*thetad3 + 41*thetad2*Math.cos(phi2) + 41*crd*Math.cos(phi1)*Math.cos(phi2) + 41*thetad1*Math.cos(phi1)*Math.cos(phi2) + 41*phid1*Math.sin(phi2)*Math.sin(theta2) - 41*crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 41*thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) - 41*Math.sin(theta3)*(phid1*Math.sin(phi1)*Math.sin(phi2) - phid2*Math.cos(phi1)*Math.cos(phi2) - phid1*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2) + phid2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) + thetad2*Math.cos(phi2)*Math.sin(phi1)*Math.sin(theta2)) + 41*thetad3*Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + 41*phid1*Math.cos(phi1)*Math.cos(theta3)*Math.sin(theta2) + 41*thetad2*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi1) - 41*thetad3*Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) - 3*Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.cos(theta2) - 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))*(5*Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2)*(crd + thetad1) + 10*thetad2*Math.sin(cr + theta1)*Math.cos(theta2) + 10*phid1*Math.cos(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + 10*thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + 50*Math.sin(cr + theta1)*Math.sin(phi1)*(crd + thetad1) - 50*phid1*Math.cos(cr + theta1)*Math.cos(phi1) + 5*phid2*Math.cos(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 50*phid1*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(phi2) + 50*phid2*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2) + 50*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)*(crd + thetad1)) + 3*Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.cos(theta2) + 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))*(50*Math.cos(cr + theta1)*Math.sin(phi1)*(crd + thetad1) - 5*Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2)*(crd + thetad1) - 10*thetad2*Math.cos(cr + theta1)*Math.cos(theta2) + 10*phid1*Math.sin(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + 10*thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + 50*phid1*Math.sin(cr + theta1)*Math.cos(phi1) + 5*phid2*Math.cos(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 50*phid1*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(phi2) - 50*phid2*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2) + 50*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)*(crd + thetad1)) + Math.cos(theta2)*Math.sin(phi1)*(41*phid1*Math.cos(theta2) + 41*Math.sin(phi1)*Math.sin(theta2)*(crd + thetad1)) - 2*Math.sin(phi2)*Math.sin(theta3)*((Math.cos(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) + Math.sin(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))*(41*Math.cos(phi3)*(thetad3 + thetad2*Math.cos(phi2) + crd*Math.cos(phi1)*Math.cos(phi2) + thetad1*Math.cos(phi1)*Math.cos(phi2) + phid1*Math.sin(phi2)*Math.sin(theta2) - crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) - 41*Math.sin(phi3)*(Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2)))) + (Math.sin(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) - Math.cos(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))*((Math.cos(phi3)*(Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2))))/40 + (Math.sin(phi3)*(thetad3 + thetad2*Math.cos(phi2) + crd*Math.cos(phi1)*Math.cos(phi2) + thetad1*Math.cos(phi1)*Math.cos(phi2) + phid1*Math.sin(phi2)*Math.sin(theta2) - crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))/40) - 41*phid2*Math.cos(phi1)*Math.cos(phi2)*Math.sin(theta3) - 41*phid1*Math.cos(phi1)*Math.cos(theta3)*Math.sin(theta2) - 41*thetad3*Math.cos(phi1)*Math.cos(theta3)*Math.sin(phi2) - 41*thetad2*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi1) + 41*phid1*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta3) + 41*thetad3*Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3) - 41*phid1*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2)*Math.sin(theta3) - 41*thetad3*Math.cos(phi2)*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi1) + 41*phid2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta3) + 41*thetad2*Math.cos(phi2)*Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) + Math.sin(phi1)*Math.sin(theta2)*(41*phid1*Math.sin(theta2) - 41*Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))",
        "vars": [
          "cr",
          "crd",
          "phi1",
          "phi2",
          "phi3",
          "phid1",
          "phid2",
          "phid3",
          "theta1",
          "theta2",
          "theta3",
          "thetad1",
          "thetad2",
          "thetad3"
        ]
      },
      {
        "expr": "2*Math.sin(phi2)*(Math.cos(theta2)*(41*Math.cos(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) + 41*Math.sin(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - Math.sin(phi2)*Math.sin(theta2)*(phid2/40 + (phid1*Math.cos(theta2))/40 + (crd*Math.sin(phi1)*Math.sin(theta2))/40 + (thetad1*Math.sin(phi1)*Math.sin(theta2))/40) - 41*thetad2*Math.cos(phi2)*Math.cos(theta2) + 41*phid2*Math.sin(phi2)*Math.sin(theta2)) - 2*Math.cos(phi2)*(Math.cos(theta2)*(41*Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - 41*Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) + Math.cos(phi2)*Math.sin(theta2)*(41*phid2 + 41*phid1*Math.cos(theta2) + 41*crd*Math.sin(phi1)*Math.sin(theta2) + 41*thetad1*Math.sin(phi1)*Math.sin(theta2)) - (phid2*Math.cos(phi2)*Math.sin(theta2))/40 - (thetad2*Math.cos(theta2)*Math.sin(phi2))/40) + Math.cos(theta2)*(41*phid1*Math.sin(theta2) - 41*Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1)) - Math.sin(theta2)*(41*phid1*Math.cos(theta2) + 41*Math.sin(phi1)*Math.sin(theta2)*(crd + thetad1)) + (5*Math.cos(cr + theta1)*(10*phid1*Math.sin(phi1) + 10*phid1*Math.cos(phi2)*Math.sin(phi1) + 10*phid2*Math.cos(phi1)*Math.sin(phi2) + 10*phid1*Math.cos(phi2)*Math.cos(phi3)*Math.sin(phi1) + 10*phid2*Math.cos(phi1)*Math.cos(phi3)*Math.sin(phi2) + 10*phid3*Math.cos(phi1)*Math.cos(phi2)*Math.sin(phi3) + 10*phid1*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2) + 10*phid2*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1) - 10*thetad2*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta2) + 10*phid1*Math.cos(phi1)*Math.cos(phi3)*Math.cos(theta2)*Math.sin(phi2) + 10*phid2*Math.cos(phi2)*Math.cos(phi3)*Math.cos(theta2)*Math.sin(phi1) + 10*phid2*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta3)*Math.sin(phi3) + 10*phid3*Math.cos(phi1)*Math.cos(phi3)*Math.cos(theta3)*Math.sin(phi2) - 10*phid1*Math.cos(theta3)*Math.sin(phi1)*Math.sin(phi2)*Math.sin(phi3) - 10*phid3*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)*Math.sin(phi3) - 10*phid1*Math.cos(phi1)*Math.sin(phi3)*Math.sin(theta2)*Math.sin(theta3) - 10*thetad2*Math.cos(phi3)*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta2) - 10*phid3*Math.cos(phi3)*Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3) - 10*thetad3*Math.cos(phi1)*Math.sin(phi2)*Math.sin(phi3)*Math.sin(theta3) - 10*thetad2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi3)*Math.sin(theta3) - 10*thetad3*Math.cos(theta3)*Math.sin(phi1)*Math.sin(phi3)*Math.sin(theta2) + 10*phid1*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi3) + 10*phid3*Math.cos(phi2)*Math.cos(phi3)*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi1) - 10*phid2*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi1)*Math.sin(phi2)*Math.sin(phi3) - 10*thetad2*Math.cos(phi2)*Math.cos(theta3)*Math.sin(phi1)*Math.sin(phi3)*Math.sin(theta2) - 10*thetad3*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi3)*Math.sin(theta3)) + 5*Math.sin(cr + theta1)*(crd + thetad1)*(10*Math.cos(phi1) + 10*Math.cos(phi1)*Math.cos(phi2) + 10*Math.cos(phi1)*Math.cos(phi2)*Math.cos(phi3) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 10*Math.cos(phi3)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 10*Math.cos(phi1)*Math.cos(theta3)*Math.sin(phi2)*Math.sin(phi3) + 10*Math.sin(phi1)*Math.sin(phi3)*Math.sin(theta2)*Math.sin(theta3) - 10*Math.cos(phi2)*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi1)*Math.sin(phi3)))*(Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.cos(theta2) + 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) - Math.sin(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(phi2)*Math.cos(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) + Math.cos(phi3)*Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.cos(theta2) + 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) - (5*Math.sin(cr + theta1)*(10*phid1*Math.sin(phi1) + 10*phid1*Math.cos(phi2)*Math.sin(phi1) + 10*phid2*Math.cos(phi1)*Math.sin(phi2) + 10*phid1*Math.cos(phi2)*Math.cos(phi3)*Math.sin(phi1) + 10*phid2*Math.cos(phi1)*Math.cos(phi3)*Math.sin(phi2) + 10*phid3*Math.cos(phi1)*Math.cos(phi2)*Math.sin(phi3) + 10*phid1*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2) + 10*phid2*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1) - 10*thetad2*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta2) + 10*phid1*Math.cos(phi1)*Math.cos(phi3)*Math.cos(theta2)*Math.sin(phi2) + 10*phid2*Math.cos(phi2)*Math.cos(phi3)*Math.cos(theta2)*Math.sin(phi1) + 10*phid2*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta3)*Math.sin(phi3) + 10*phid3*Math.cos(phi1)*Math.cos(phi3)*Math.cos(theta3)*Math.sin(phi2) - 10*phid1*Math.cos(theta3)*Math.sin(phi1)*Math.sin(phi2)*Math.sin(phi3) - 10*phid3*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)*Math.sin(phi3) - 10*phid1*Math.cos(phi1)*Math.sin(phi3)*Math.sin(theta2)*Math.sin(theta3) - 10*thetad2*Math.cos(phi3)*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta2) - 10*phid3*Math.cos(phi3)*Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3) - 10*thetad3*Math.cos(phi1)*Math.sin(phi2)*Math.sin(phi3)*Math.sin(theta3) - 10*thetad2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi3)*Math.sin(theta3) - 10*thetad3*Math.cos(theta3)*Math.sin(phi1)*Math.sin(phi3)*Math.sin(theta2) + 10*phid1*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi3) + 10*phid3*Math.cos(phi2)*Math.cos(phi3)*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi1) - 10*phid2*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi1)*Math.sin(phi2)*Math.sin(phi3) - 10*thetad2*Math.cos(phi2)*Math.cos(theta3)*Math.sin(phi1)*Math.sin(phi3)*Math.sin(theta2) - 10*thetad3*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi3)*Math.sin(theta3)) - 5*Math.cos(cr + theta1)*(crd + thetad1)*(10*Math.cos(phi1) + 10*Math.cos(phi1)*Math.cos(phi2) + 10*Math.cos(phi1)*Math.cos(phi2)*Math.cos(phi3) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 10*Math.cos(phi3)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 10*Math.cos(phi1)*Math.cos(theta3)*Math.sin(phi2)*Math.sin(phi3) + 10*Math.sin(phi1)*Math.sin(phi3)*Math.sin(theta2)*Math.sin(theta3) - 10*Math.cos(phi2)*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi1)*Math.sin(phi3)))*(Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.cos(theta2) - 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) - Math.sin(phi3)*(10*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(phi2)*Math.cos(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) + Math.cos(phi3)*Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.cos(theta2) - 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) - 2*(Math.cos(phi2)*Math.cos(phi3) - Math.cos(theta3)*Math.sin(phi2)*Math.sin(phi3))*((Math.sin(phi3)*(thetad2*Math.sin(theta2)*Math.sin(theta3) - thetad3*Math.cos(theta2)*Math.cos(theta3) - thetad2*Math.cos(phi2)*Math.cos(theta2)*Math.cos(theta3) + phid2*Math.cos(theta3)*Math.sin(phi2)*Math.sin(theta2) + thetad3*Math.cos(phi2)*Math.sin(theta2)*Math.sin(theta3)))/40 + (Math.cos(phi3)*(Math.cos(theta2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta3)*Math.sin(theta2)) - Math.sin(phi2)*Math.sin(phi3)*Math.sin(theta2))*(41*phid3 + 41*phid2*Math.cos(theta3) + 41*phid1*Math.cos(theta2)*Math.cos(theta3) + 41*thetad2*Math.sin(phi2)*Math.sin(theta3) + 41*crd*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3) + 41*crd*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2) + 41*thetad1*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3) - 41*phid1*Math.cos(phi2)*Math.sin(theta2)*Math.sin(theta3) + 41*thetad1*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2) + 41*crd*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3) + 41*thetad1*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3)) + (Math.cos(theta2)*Math.cos(theta3) - Math.cos(phi2)*Math.sin(theta2)*Math.sin(theta3))*(41*Math.cos(phi3)*(Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2))) + 41*Math.sin(phi3)*(thetad3 + thetad2*Math.cos(phi2) + crd*Math.cos(phi1)*Math.cos(phi2) + thetad1*Math.cos(phi1)*Math.cos(phi2) + phid1*Math.sin(phi2)*Math.sin(theta2) - crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))) - (phid3*Math.cos(phi3)*(Math.cos(theta2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta3)*Math.sin(theta2)))/40 - (phid2*Math.cos(phi2)*Math.cos(phi3)*Math.sin(theta2))/40 - (thetad2*Math.cos(phi3)*Math.cos(theta2)*Math.sin(phi2))/40 + (phid3*Math.sin(phi2)*Math.sin(phi3)*Math.sin(theta2))/40) - Math.cos(phi2)*((Math.cos(theta2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta3)*Math.sin(theta2))*(41*Math.sin(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) + 41*Math.cos(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2))) + (Math.cos(theta2)*Math.cos(theta3) - Math.cos(phi2)*Math.sin(theta2)*Math.sin(theta3))*(41*Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - 41*Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2))) - (phid2*Math.cos(phi2)*Math.sin(theta2))/40 - (thetad2*Math.cos(theta2)*Math.sin(phi2))/40) + 2*(Math.cos(phi2)*Math.sin(phi3) + Math.cos(phi3)*Math.cos(theta3)*Math.sin(phi2))*((Math.cos(theta2)*Math.cos(theta3) - Math.cos(phi2)*Math.sin(theta2)*Math.sin(theta3))*(41*Math.cos(phi3)*(thetad3 + thetad2*Math.cos(phi2) + crd*Math.cos(phi1)*Math.cos(phi2) + thetad1*Math.cos(phi1)*Math.cos(phi2) + phid1*Math.sin(phi2)*Math.sin(theta2) - crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) - 41*Math.sin(phi3)*(Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2)))) - (Math.sin(phi3)*(Math.cos(theta2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta3)*Math.sin(theta2)) + Math.cos(phi3)*Math.sin(phi2)*Math.sin(theta2))*(phid3/40 + (phid2*Math.cos(theta3))/40 + (phid1*Math.cos(theta2)*Math.cos(theta3))/40 + (thetad2*Math.sin(phi2)*Math.sin(theta3))/40 + (crd*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3))/40 + (crd*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2))/40 + (thetad1*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3))/40 - (phid1*Math.cos(phi2)*Math.sin(theta2)*Math.sin(theta3))/40 + (thetad1*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2))/40 + (crd*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3))/40 + (thetad1*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3))/40) + 41*Math.cos(phi3)*(thetad2*Math.sin(theta2)*Math.sin(theta3) - thetad3*Math.cos(theta2)*Math.cos(theta3) - thetad2*Math.cos(phi2)*Math.cos(theta2)*Math.cos(theta3) + phid2*Math.cos(theta3)*Math.sin(phi2)*Math.sin(theta2) + thetad3*Math.cos(phi2)*Math.sin(theta2)*Math.sin(theta3)) + 41*phid3*Math.sin(phi3)*(Math.cos(theta2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta3)*Math.sin(theta2)) + 41*phid2*Math.cos(phi2)*Math.sin(phi3)*Math.sin(theta2) + 41*phid3*Math.cos(phi3)*Math.sin(phi2)*Math.sin(theta2) + 41*thetad2*Math.cos(theta2)*Math.sin(phi2)*Math.sin(phi3)) - Math.sin(phi2)*Math.sin(theta3)*(41*thetad2*Math.cos(theta3)*Math.sin(theta2) - Math.sin(phi2)*Math.sin(theta2)*((Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))))/40 - (Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2)))/40) - (Math.cos(theta2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta3)*Math.sin(theta2))*(41*thetad3 + 41*thetad2*Math.cos(phi2) + 41*crd*Math.cos(phi1)*Math.cos(phi2) + 41*thetad1*Math.cos(phi1)*Math.cos(phi2) + 41*phid1*Math.sin(phi2)*Math.sin(theta2) - 41*crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 41*thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) + 41*thetad3*Math.cos(theta2)*Math.sin(theta3) + 41*thetad2*Math.cos(phi2)*Math.cos(theta2)*Math.sin(theta3) + 41*thetad3*Math.cos(phi2)*Math.cos(theta3)*Math.sin(theta2) - 41*phid2*Math.sin(phi2)*Math.sin(theta2)*Math.sin(theta3)) + Math.sin(phi1)*(10*Math.sin(phi2)*Math.sin(theta2) + 10*Math.cos(theta2)*Math.sin(phi3)*Math.sin(theta3) + 10*Math.cos(phi3)*Math.sin(phi2)*Math.sin(theta2) + 10*Math.cos(phi2)*Math.cos(theta3)*Math.sin(phi3)*Math.sin(theta2))*(5*Math.cos(phi3)*(10*phid2*Math.sin(phi1)*Math.sin(phi2) - 10*phid1*Math.cos(phi1)*Math.cos(phi2) - 10*phid2*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2) + 10*phid1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) + 10*thetad2*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta2)) - 50*phid1*Math.cos(phi1) + 5*Math.sin(phi3)*(10*Math.cos(theta3)*(phid1*Math.cos(phi1)*Math.sin(phi2) + phid2*Math.cos(phi2)*Math.sin(phi1) + phid1*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1) + phid2*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2) + thetad2*Math.cos(phi1)*Math.cos(phi2)*Math.sin(theta2)) - 10*thetad3*Math.sin(theta3)*(Math.sin(phi1)*Math.sin(phi2) - Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2)) + 10*thetad2*Math.cos(phi1)*Math.cos(theta2)*Math.sin(theta3) + 10*thetad3*Math.cos(phi1)*Math.cos(theta3)*Math.sin(theta2) - 10*phid1*Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) + 5*phid3*Math.sin(phi3)*(10*Math.cos(phi2)*Math.sin(phi1) + 10*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2)) - 50*phid1*Math.cos(phi1)*Math.cos(phi2) + 50*phid2*Math.sin(phi1)*Math.sin(phi2) + 5*phid3*Math.cos(phi3)*(10*Math.cos(theta3)*(Math.sin(phi1)*Math.sin(phi2) - Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2)) + 10*Math.cos(phi1)*Math.sin(theta2)*Math.sin(theta3)) - 50*phid2*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2) + 50*phid1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) + 50*thetad2*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta2)) + 3*Math.sin(phi2)*(5*Math.cos(cr + theta1)*(10*phid1*Math.sin(phi1) + 10*phid1*Math.cos(phi2)*Math.sin(phi1) + 10*phid2*Math.cos(phi1)*Math.sin(phi2) + 10*phid1*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2) + 10*phid2*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1) - 10*thetad2*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta2)) + 5*Math.sin(cr + theta1)*(crd + thetad1)*(10*Math.cos(phi1) + 10*Math.cos(phi1)*Math.cos(phi2) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))*(10*Math.sin(cr + theta1)*Math.cos(theta2) + 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) - 3*Math.sin(phi2)*(5*Math.sin(cr + theta1)*(10*phid1*Math.sin(phi1) + 10*phid1*Math.cos(phi2)*Math.sin(phi1) + 10*phid2*Math.cos(phi1)*Math.sin(phi2) + 10*phid1*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2) + 10*phid2*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1) - 10*thetad2*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta2)) - 5*Math.cos(cr + theta1)*(crd + thetad1)*(10*Math.cos(phi1) + 10*Math.cos(phi1)*Math.cos(phi2) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))*(10*Math.cos(cr + theta1)*Math.cos(theta2) - 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) - 2*Math.sin(phi2)*Math.sin(theta3)*(41*thetad2*Math.cos(theta3)*Math.sin(theta2) - (Math.cos(phi3)*(Math.cos(theta2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta3)*Math.sin(theta2)) - Math.sin(phi2)*Math.sin(phi3)*Math.sin(theta2))*(41*Math.cos(phi3)*(thetad3 + thetad2*Math.cos(phi2) + crd*Math.cos(phi1)*Math.cos(phi2) + thetad1*Math.cos(phi1)*Math.cos(phi2) + phid1*Math.sin(phi2)*Math.sin(theta2) - crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) - 41*Math.sin(phi3)*(Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2)))) - (Math.sin(phi3)*(Math.cos(theta2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta3)*Math.sin(theta2)) + Math.cos(phi3)*Math.sin(phi2)*Math.sin(theta2))*((Math.cos(phi3)*(Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2))))/40 + (Math.sin(phi3)*(thetad3 + thetad2*Math.cos(phi2) + crd*Math.cos(phi1)*Math.cos(phi2) + thetad1*Math.cos(phi1)*Math.cos(phi2) + phid1*Math.sin(phi2)*Math.sin(theta2) - crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))/40) + 41*thetad3*Math.cos(theta2)*Math.sin(theta3) + 41*thetad2*Math.cos(phi2)*Math.cos(theta2)*Math.sin(theta3) + 41*thetad3*Math.cos(phi2)*Math.cos(theta3)*Math.sin(theta2) - 41*phid2*Math.sin(phi2)*Math.sin(theta2)*Math.sin(theta3)) + Math.cos(theta3)*Math.sin(phi2)*((Math.cos(theta2)*Math.cos(theta3) - Math.cos(phi2)*Math.sin(theta2)*Math.sin(theta3))*(41*thetad3 + 41*thetad2*Math.cos(phi2) + 41*crd*Math.cos(phi1)*Math.cos(phi2) + 41*thetad1*Math.cos(phi1)*Math.cos(phi2) + 41*phid1*Math.sin(phi2)*Math.sin(theta2) - 41*crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 41*thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) - Math.sin(phi2)*Math.sin(theta2)*((Math.sin(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))))/40 + (Math.cos(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2)))/40) - 41*thetad3*Math.cos(theta2)*Math.cos(theta3) + 41*thetad2*Math.sin(theta2)*Math.sin(theta3) - 41*thetad2*Math.cos(phi2)*Math.cos(theta2)*Math.cos(theta3) + 41*phid2*Math.cos(theta3)*Math.sin(phi2)*Math.sin(theta2) + 41*thetad3*Math.cos(phi2)*Math.sin(theta2)*Math.sin(theta3)) - 30*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta2)*(50*phid1*Math.cos(phi1) + 50*phid1*Math.cos(phi1)*Math.cos(phi2) - 50*phid2*Math.sin(phi1)*Math.sin(phi2) + 50*phid2*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2) - 50*phid1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 50*thetad2*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta2))",
        "vars": [
          "cr",
          "crd",
          "phi1",
          "phi2",
          "phi3",
          "phid1",
          "phid2",
          "phid3",
          "theta1",
          "theta2",
          "theta3",
          "thetad1",
          "thetad2",
          "thetad3"
        ]
      },
      {
        "expr": "2*Math.cos(phi2)*(Math.sin(phi2)*(41*phid2 + 41*phid1*Math.cos(theta2) + 41*crd*Math.sin(phi1)*Math.sin(theta2) + 41*thetad1*Math.sin(phi1)*Math.sin(theta2)) - (phid2*Math.sin(phi2))/40) - 2*(Math.cos(phi2)*Math.sin(phi3) + Math.cos(phi3)*Math.cos(theta3)*Math.sin(phi2))*((Math.cos(phi2)*Math.cos(phi3) - Math.cos(theta3)*Math.sin(phi2)*Math.sin(phi3))*(phid3/40 + (phid2*Math.cos(theta3))/40 + (phid1*Math.cos(theta2)*Math.cos(theta3))/40 + (thetad2*Math.sin(phi2)*Math.sin(theta3))/40 + (crd*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3))/40 + (crd*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2))/40 + (thetad1*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3))/40 - (phid1*Math.cos(phi2)*Math.sin(theta2)*Math.sin(theta3))/40 + (thetad1*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2))/40 + (crd*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3))/40 + (thetad1*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3))/40) - 41*phid3*Math.cos(phi2)*Math.cos(phi3) + 41*phid2*Math.sin(phi2)*Math.sin(phi3) - Math.sin(phi2)*Math.sin(theta3)*(41*Math.cos(phi3)*(thetad3 + thetad2*Math.cos(phi2) + crd*Math.cos(phi1)*Math.cos(phi2) + thetad1*Math.cos(phi1)*Math.cos(phi2) + phid1*Math.sin(phi2)*Math.sin(theta2) - crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) - 41*Math.sin(phi3)*(Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2)))) - 41*phid2*Math.cos(phi2)*Math.cos(phi3)*Math.cos(theta3) + 41*phid3*Math.cos(theta3)*Math.sin(phi2)*Math.sin(phi3) + 41*thetad3*Math.cos(phi3)*Math.sin(phi2)*Math.sin(theta3)) - 2*Math.sin(phi2)*(Math.cos(phi2)*(phid2/40 + (phid1*Math.cos(theta2))/40 + (crd*Math.sin(phi1)*Math.sin(theta2))/40 + (thetad1*Math.sin(phi1)*Math.sin(theta2))/40) - 41*phid2*Math.cos(phi2)) - 2*(Math.cos(phi2)*Math.cos(phi3) - Math.cos(theta3)*Math.sin(phi2)*Math.sin(phi3))*((phid2*Math.cos(phi3)*Math.sin(phi2))/40 - (Math.cos(phi2)*Math.sin(phi3) + Math.cos(phi3)*Math.cos(theta3)*Math.sin(phi2))*(41*phid3 + 41*phid2*Math.cos(theta3) + 41*phid1*Math.cos(theta2)*Math.cos(theta3) + 41*thetad2*Math.sin(phi2)*Math.sin(theta3) + 41*crd*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3) + 41*crd*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2) + 41*thetad1*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3) - 41*phid1*Math.cos(phi2)*Math.sin(theta2)*Math.sin(theta3) + 41*thetad1*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2) + 41*crd*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3) + 41*thetad1*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3)) + (phid3*Math.cos(phi2)*Math.sin(phi3))/40 + Math.sin(phi2)*Math.sin(theta3)*(41*Math.cos(phi3)*(Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2))) + 41*Math.sin(phi3)*(thetad3 + thetad2*Math.cos(phi2) + crd*Math.cos(phi1)*Math.cos(phi2) + thetad1*Math.cos(phi1)*Math.cos(phi2) + phid1*Math.sin(phi2)*Math.sin(theta2) - crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))) + (phid2*Math.cos(phi2)*Math.cos(theta3)*Math.sin(phi3))/40 + (phid3*Math.cos(phi3)*Math.cos(theta3)*Math.sin(phi2))/40 - (thetad3*Math.sin(phi2)*Math.sin(phi3)*Math.sin(theta3))/40) - (Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.cos(theta2) + 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) - Math.sin(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(phi2)*Math.cos(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) + Math.cos(phi3)*Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.cos(theta2) + 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)))*(5*Math.sin(phi2)*(10*thetad2*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(theta2)*(crd + thetad1) - 10*thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2) + 10*phid1*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)*(crd + thetad1)) + 5*Math.sin(phi3)*(10*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.sin(theta2)*(crd + thetad1) + thetad2*Math.sin(cr + theta1)*Math.cos(theta2) + phid1*Math.cos(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + 10*Math.cos(phi2)*Math.cos(theta3)*(thetad2*Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(theta2)*(crd + thetad1) - thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2) + phid1*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)*(crd + thetad1)) + 10*thetad3*Math.cos(theta3)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*phid2*Math.cos(theta3)*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*thetad3*Math.cos(phi2)*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) + 5*Math.cos(phi3)*Math.sin(phi2)*(10*thetad2*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(theta2)*(crd + thetad1) - 10*thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2) + 10*phid1*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)*(crd + thetad1)) + 5*phid3*Math.cos(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(phi2)*Math.cos(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) - 5*phid2*Math.cos(phi2)*(10*Math.sin(cr + theta1)*Math.cos(theta2) + 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) - 5*phid2*Math.cos(phi2)*Math.cos(phi3)*(10*Math.sin(cr + theta1)*Math.cos(theta2) + 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 5*phid3*Math.sin(phi2)*Math.sin(phi3)*(10*Math.sin(cr + theta1)*Math.cos(theta2) + 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) - Math.cos(phi2)*((phid2*Math.sin(phi2))/40 + Math.sin(phi2)*Math.sin(theta3)*(41*Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - 41*Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2))) - Math.cos(theta3)*Math.sin(phi2)*(41*Math.sin(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) + 41*Math.cos(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2)))) - (Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.cos(theta2) - 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) - Math.sin(phi3)*(10*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(phi2)*Math.cos(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) + Math.cos(phi3)*Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.cos(theta2) - 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)))*(5*Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.cos(theta2)*(crd + thetad1) + 10*thetad2*Math.cos(cr + theta1)*Math.sin(theta2) + 10*thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2) - 10*phid1*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(theta2) + 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)*(crd + thetad1)) + 5*Math.sin(phi3)*(10*Math.cos(phi2)*Math.cos(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2)*(crd + thetad1) + thetad2*Math.cos(cr + theta1)*Math.sin(theta2) + thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2) - phid1*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)*(crd + thetad1)) - 10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.sin(theta2)*(crd + thetad1) - thetad2*Math.cos(cr + theta1)*Math.cos(theta2) + phid1*Math.sin(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + 10*thetad3*Math.cos(theta3)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*phid2*Math.cos(theta3)*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*thetad3*Math.cos(phi2)*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) + 5*Math.cos(phi3)*Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.cos(theta2)*(crd + thetad1) + 10*thetad2*Math.cos(cr + theta1)*Math.sin(theta2) + 10*thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2) - 10*phid1*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(theta2) + 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)*(crd + thetad1)) + 5*phid3*Math.cos(phi3)*(10*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(phi2)*Math.cos(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) - 5*phid2*Math.cos(phi2)*(10*Math.cos(cr + theta1)*Math.cos(theta2) - 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) - 5*phid2*Math.cos(phi2)*Math.cos(phi3)*(10*Math.cos(cr + theta1)*Math.cos(theta2) - 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 5*phid3*Math.sin(phi2)*Math.sin(phi3)*(10*Math.cos(cr + theta1)*Math.cos(theta2) - 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) + 2*Math.sin(phi2)*Math.sin(theta3)*((Math.cos(phi2)*Math.cos(phi3) - Math.cos(theta3)*Math.sin(phi2)*Math.sin(phi3))*((Math.cos(phi3)*(Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2))))/40 + (Math.sin(phi3)*(thetad3 + thetad2*Math.cos(phi2) + crd*Math.cos(phi1)*Math.cos(phi2) + thetad1*Math.cos(phi1)*Math.cos(phi2) + phid1*Math.sin(phi2)*Math.sin(theta2) - crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))/40) - (Math.cos(phi2)*Math.sin(phi3) + Math.cos(phi3)*Math.cos(theta3)*Math.sin(phi2))*(41*Math.cos(phi3)*(thetad3 + thetad2*Math.cos(phi2) + crd*Math.cos(phi1)*Math.cos(phi2) + thetad1*Math.cos(phi1)*Math.cos(phi2) + phid1*Math.sin(phi2)*Math.sin(theta2) - crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) - 41*Math.sin(phi3)*(Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2)))) + 41*phid2*Math.cos(phi2)*Math.sin(theta3) + 41*thetad3*Math.cos(theta3)*Math.sin(phi2)) + Math.sin(phi1)*(5*Math.sin(phi1)*(10*phid2*Math.cos(phi2)*Math.sin(theta2) + 10*thetad2*Math.cos(theta2)*Math.sin(phi2) + 10*phid2*Math.cos(phi2)*Math.cos(phi3)*Math.sin(theta2) + 10*thetad2*Math.cos(phi3)*Math.cos(theta2)*Math.sin(phi2) + 10*phid3*Math.cos(phi3)*Math.cos(theta2)*Math.sin(theta3) + 10*thetad3*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi3) - 10*phid3*Math.sin(phi2)*Math.sin(phi3)*Math.sin(theta2) - 10*thetad2*Math.sin(phi3)*Math.sin(theta2)*Math.sin(theta3) + 10*phid3*Math.cos(phi2)*Math.cos(phi3)*Math.cos(theta3)*Math.sin(theta2) + 10*thetad2*Math.cos(phi2)*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi3) - 10*phid2*Math.cos(theta3)*Math.sin(phi2)*Math.sin(phi3)*Math.sin(theta2) - 10*thetad3*Math.cos(phi2)*Math.sin(phi3)*Math.sin(theta2)*Math.sin(theta3)) + 5*phid1*Math.cos(phi1)*(10*Math.sin(phi2)*Math.sin(theta2) + 10*Math.cos(theta2)*Math.sin(phi3)*Math.sin(theta3) + 10*Math.cos(phi3)*Math.sin(phi2)*Math.sin(theta2) + 10*Math.cos(phi2)*Math.cos(theta3)*Math.sin(phi3)*Math.sin(theta2)))*(10*Math.sin(phi2)*Math.sin(theta2) + 10*Math.cos(theta2)*Math.sin(phi3)*Math.sin(theta3) + 10*Math.cos(phi3)*Math.sin(phi2)*Math.sin(theta2) + 10*Math.cos(phi2)*Math.cos(theta3)*Math.sin(phi3)*Math.sin(theta2)) - 3*Math.sin(phi2)*(5*Math.sin(phi2)*(10*thetad2*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(theta2)*(crd + thetad1) - 10*thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2) + 10*phid1*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)*(crd + thetad1)) - 5*phid2*Math.cos(phi2)*(10*Math.sin(cr + theta1)*Math.cos(theta2) + 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)))*(10*Math.sin(cr + theta1)*Math.cos(theta2) + 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) - 3*Math.sin(phi2)*(5*Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.cos(theta2)*(crd + thetad1) + 10*thetad2*Math.cos(cr + theta1)*Math.sin(theta2) + 10*thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2) - 10*phid1*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(theta2) + 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)*(crd + thetad1)) - 5*phid2*Math.cos(phi2)*(10*Math.cos(cr + theta1)*Math.cos(theta2) - 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)))*(10*Math.cos(cr + theta1)*Math.cos(theta2) - 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) - Math.cos(theta3)*Math.sin(phi2)*(Math.cos(phi2)*((Math.sin(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))))/40 + (Math.cos(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2)))/40) - Math.sin(phi2)*Math.sin(theta3)*(41*thetad3 + 41*thetad2*Math.cos(phi2) + 41*crd*Math.cos(phi1)*Math.cos(phi2) + 41*thetad1*Math.cos(phi1)*Math.cos(phi2) + 41*phid1*Math.sin(phi2)*Math.sin(theta2) - 41*crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 41*thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) - 41*phid2*Math.cos(phi2)*Math.cos(theta3) + 41*thetad3*Math.sin(phi2)*Math.sin(theta3)) + Math.sin(phi2)*Math.sin(theta3)*(Math.cos(phi2)*((Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))))/40 - (Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2)))/40) - Math.cos(theta3)*Math.sin(phi2)*(41*thetad3 + 41*thetad2*Math.cos(phi2) + 41*crd*Math.cos(phi1)*Math.cos(phi2) + 41*thetad1*Math.cos(phi1)*Math.cos(phi2) + 41*phid1*Math.sin(phi2)*Math.sin(theta2) - 41*crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 41*thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) + 41*phid2*Math.cos(phi2)*Math.sin(theta3) + 41*thetad3*Math.cos(theta3)*Math.sin(phi2)) + 30*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta2)*(50*phid1*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta2) + 50*phid2*Math.cos(phi2)*Math.sin(phi1)*Math.sin(theta2) + 50*thetad2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))",
        "vars": [
          "cr",
          "crd",
          "phi1",
          "phi2",
          "phi3",
          "phid1",
          "phid2",
          "phid3",
          "theta1",
          "theta2",
          "theta3",
          "thetad1",
          "thetad2",
          "thetad3"
        ]
      },
      {
        "expr": "2*Math.sin(phi2)*(41*Math.cos(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) + 41*Math.sin(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - 2*Math.cos(phi2)*(41*Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - 41*Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - (Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.cos(theta2) - 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) - Math.sin(phi3)*(10*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(phi2)*Math.cos(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) + Math.cos(phi3)*Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.cos(theta2) - 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)))*(5*Math.cos(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2)*(crd + thetad1) - 10*thetad2*Math.cos(cr + theta1)*Math.cos(theta2) + 10*phid1*Math.sin(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + 10*thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + 5*Math.cos(phi3)*(10*Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2)*(crd + thetad1) - thetad2*Math.cos(cr + theta1)*Math.cos(theta2) + phid1*Math.sin(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + 10*phid2*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*phid1*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(phi2) + 10*phid2*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1) + 10*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)*(crd + thetad1)) + 5*phid3*Math.sin(phi3)*(10*Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)) + 5*phid2*Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 5*Math.cos(theta3)*Math.sin(phi3)*(10*phid2*Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2)*(crd + thetad1) - thetad2*Math.cos(cr + theta1)*Math.cos(theta2) + phid1*Math.sin(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + 10*phid1*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(phi2) - 10*phid2*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2) + 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)*(crd + thetad1)) + 50*phid1*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(phi2) + 50*phid2*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1) + 5*phid3*Math.cos(phi3)*Math.cos(theta3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 50*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)*(crd + thetad1) - 5*thetad3*Math.sin(phi3)*Math.sin(theta3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1))) + (Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.cos(theta2) + 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) - Math.sin(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(phi2)*Math.cos(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) + Math.cos(phi3)*Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.cos(theta2) + 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)))*(5*Math.cos(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2)*(crd + thetad1) + 10*thetad2*Math.sin(cr + theta1)*Math.cos(theta2) + 10*phid1*Math.cos(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + 10*thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + 5*Math.cos(phi3)*(10*Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2)*(crd + thetad1) + thetad2*Math.sin(cr + theta1)*Math.cos(theta2) + phid1*Math.cos(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) - 10*phid2*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)*(crd + thetad1) + 10*phid1*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(phi2) + 10*phid2*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) - 5*Math.cos(theta3)*Math.sin(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2)*(crd + thetad1) + thetad2*Math.sin(cr + theta1)*Math.cos(theta2) + phid1*Math.cos(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + 10*phid2*Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*phid1*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(phi2) + 10*phid2*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)*(crd + thetad1)) - 5*phid2*Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 5*phid3*Math.sin(phi3)*(10*Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)) - 50*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)*(crd + thetad1) + 50*phid1*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(phi2) + 50*phid2*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1) - 5*phid3*Math.cos(phi3)*Math.cos(theta3)*(10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 5*thetad3*Math.sin(phi3)*Math.sin(theta3)*(10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1))) - 2*(Math.cos(phi2)*Math.cos(phi3) - Math.cos(theta3)*Math.sin(phi2)*Math.sin(phi3))*(Math.cos(theta3)*(41*Math.cos(phi3)*(Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2))) + 41*Math.sin(phi3)*(thetad3 + thetad2*Math.cos(phi2) + crd*Math.cos(phi1)*Math.cos(phi2) + thetad1*Math.cos(phi1)*Math.cos(phi2) + phid1*Math.sin(phi2)*Math.sin(theta2) - crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))) - (phid3*Math.cos(phi3)*Math.sin(theta3))/40 - (thetad3*Math.cos(theta3)*Math.sin(phi3))/40 + Math.cos(phi3)*Math.sin(theta3)*(41*phid3 + 41*phid2*Math.cos(theta3) + 41*phid1*Math.cos(theta2)*Math.cos(theta3) + 41*thetad2*Math.sin(phi2)*Math.sin(theta3) + 41*crd*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3) + 41*crd*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2) + 41*thetad1*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3) - 41*phid1*Math.cos(phi2)*Math.sin(theta2)*Math.sin(theta3) + 41*thetad1*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2) + 41*crd*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3) + 41*thetad1*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3))) - Math.cos(phi2)*(Math.cos(theta3)*(41*Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - 41*Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2))) + Math.sin(theta3)*(41*Math.sin(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) + 41*Math.cos(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2)))) + 2*(Math.cos(phi2)*Math.sin(phi3) + Math.cos(phi3)*Math.cos(theta3)*Math.sin(phi2))*(Math.cos(theta3)*(41*Math.cos(phi3)*(thetad3 + thetad2*Math.cos(phi2) + crd*Math.cos(phi1)*Math.cos(phi2) + thetad1*Math.cos(phi1)*Math.cos(phi2) + phid1*Math.sin(phi2)*Math.sin(theta2) - crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) - 41*Math.sin(phi3)*(Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2)))) - 41*thetad3*Math.cos(phi3)*Math.cos(theta3) + 41*phid3*Math.sin(phi3)*Math.sin(theta3) - Math.sin(phi3)*Math.sin(theta3)*(phid3/40 + (phid2*Math.cos(theta3))/40 + (phid1*Math.cos(theta2)*Math.cos(theta3))/40 + (thetad2*Math.sin(phi2)*Math.sin(theta3))/40 + (crd*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3))/40 + (crd*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2))/40 + (thetad1*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3))/40 - (phid1*Math.cos(phi2)*Math.sin(theta2)*Math.sin(theta3))/40 + (thetad1*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2))/40 + (crd*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3))/40 + (thetad1*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3))/40)) + 2*Math.sin(phi2)*Math.sin(theta3)*(Math.cos(phi3)*Math.sin(theta3)*(41*Math.cos(phi3)*(thetad3 + thetad2*Math.cos(phi2) + crd*Math.cos(phi1)*Math.cos(phi2) + thetad1*Math.cos(phi1)*Math.cos(phi2) + phid1*Math.sin(phi2)*Math.sin(theta2) - crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) - 41*Math.sin(phi3)*(Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2)))) - 41*thetad3*Math.sin(theta3) + Math.sin(phi3)*Math.sin(theta3)*((Math.cos(phi3)*(Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2))))/40 + (Math.sin(phi3)*(thetad3 + thetad2*Math.cos(phi2) + crd*Math.cos(phi1)*Math.cos(phi2) + thetad1*Math.cos(phi1)*Math.cos(phi2) + phid1*Math.sin(phi2)*Math.sin(theta2) - crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))/40)) + Math.cos(theta3)*Math.sin(phi2)*(Math.cos(theta3)*(41*thetad3 + 41*thetad2*Math.cos(phi2) + 41*crd*Math.cos(phi1)*Math.cos(phi2) + 41*thetad1*Math.cos(phi1)*Math.cos(phi2) + 41*phid1*Math.sin(phi2)*Math.sin(theta2) - 41*crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 41*thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) - 41*thetad3*Math.cos(theta3)) + Math.sin(phi2)*Math.sin(theta3)*(Math.sin(theta3)*(41*thetad3 + 41*thetad2*Math.cos(phi2) + 41*crd*Math.cos(phi1)*Math.cos(phi2) + 41*thetad1*Math.cos(phi1)*Math.cos(phi2) + 41*phid1*Math.sin(phi2)*Math.sin(theta2) - 41*crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 41*thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) - 41*thetad3*Math.sin(theta3)) + 3*Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.cos(theta2) + 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))*(5*Math.cos(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2)*(crd + thetad1) + 10*thetad2*Math.sin(cr + theta1)*Math.cos(theta2) + 10*phid1*Math.cos(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + 10*thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) - 5*phid2*Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 50*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)*(crd + thetad1) + 50*phid1*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(phi2) + 50*phid2*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + Math.sin(phi1)*(10*Math.sin(phi2)*Math.sin(theta2) + 10*Math.cos(theta2)*Math.sin(phi3)*Math.sin(theta3) + 10*Math.cos(phi3)*Math.sin(phi2)*Math.sin(theta2) + 10*Math.cos(phi2)*Math.cos(theta3)*Math.sin(phi3)*Math.sin(theta2))*(5*Math.cos(phi3)*(10*phid1*Math.sin(phi1)*Math.sin(phi2) - 10*phid2*Math.cos(phi1)*Math.cos(phi2) - 10*phid1*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2) + 10*phid2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) + 10*thetad2*Math.cos(phi2)*Math.sin(phi1)*Math.sin(theta2)) + 5*phid3*Math.sin(phi3)*(10*Math.cos(phi1)*Math.sin(phi2) + 10*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - 50*phid2*Math.cos(phi1)*Math.cos(phi2) + 50*phid1*Math.sin(phi1)*Math.sin(phi2) + 5*Math.cos(theta3)*Math.sin(phi3)*(10*phid1*Math.cos(phi2)*Math.sin(phi1) + 10*phid2*Math.cos(phi1)*Math.sin(phi2) + 10*phid1*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2) + 10*phid2*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1) - 10*thetad2*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta2)) + 5*thetad3*Math.sin(phi3)*Math.sin(theta3)*(10*Math.cos(phi1)*Math.cos(phi2) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) - 50*phid1*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2) + 50*phid2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) + 50*thetad2*Math.cos(phi2)*Math.sin(phi1)*Math.sin(theta2) - 5*phid3*Math.cos(phi3)*Math.cos(theta3)*(10*Math.cos(phi1)*Math.cos(phi2) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))) - 3*Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.cos(theta2) - 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))*(5*Math.cos(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2)*(crd + thetad1) - 10*thetad2*Math.cos(cr + theta1)*Math.cos(theta2) + 10*phid1*Math.sin(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + 10*thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + 5*phid2*Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 50*phid1*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(phi2) + 50*phid2*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1) + 50*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)*(crd + thetad1)) + 30*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta2)*(50*phid1*Math.sin(phi1)*Math.sin(phi2) - 50*phid2*Math.cos(phi1)*Math.cos(phi2) - 50*phid1*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2) + 50*phid2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) + 50*thetad2*Math.cos(phi2)*Math.sin(phi1)*Math.sin(theta2))",
        "vars": [
          "cr",
          "crd",
          "phi1",
          "phi2",
          "phi3",
          "phid1",
          "phid2",
          "phid3",
          "theta1",
          "theta2",
          "theta3",
          "thetad1",
          "thetad2",
          "thetad3"
        ]
      },
      {
        "expr": "2*(Math.cos(phi2)*Math.sin(phi3) + Math.cos(phi3)*Math.cos(theta3)*Math.sin(phi2))*(41*phid3*Math.cos(phi3) - Math.cos(phi3)*(phid3/40 + (phid2*Math.cos(theta3))/40 + (phid1*Math.cos(theta2)*Math.cos(theta3))/40 + (thetad2*Math.sin(phi2)*Math.sin(theta3))/40 + (crd*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3))/40 + (crd*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2))/40 + (thetad1*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3))/40 - (phid1*Math.cos(phi2)*Math.sin(theta2)*Math.sin(theta3))/40 + (thetad1*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2))/40 + (crd*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3))/40 + (thetad1*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3))/40)) - (5*Math.sin(phi3)*(10*Math.cos(theta3)*(thetad2*Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(theta2)*(crd + thetad1) - thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2) + phid1*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)*(crd + thetad1)) + 10*Math.sin(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2)*(crd + thetad1) + thetad2*Math.sin(cr + theta1)*Math.cos(theta2) + phid1*Math.cos(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) - phid2*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)*(crd + thetad1) + phid1*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(phi2) + phid2*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 10*thetad3*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*thetad3*Math.cos(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) - 5*phid3*Math.cos(phi3)*(10*Math.cos(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) - 10*Math.sin(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))))*(Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.cos(theta2) + 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) - Math.sin(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(phi2)*Math.cos(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) + Math.cos(phi3)*Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.cos(theta2) + 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) - 2*(Math.cos(phi2)*Math.cos(phi3) - Math.cos(theta3)*Math.sin(phi2)*Math.sin(phi3))*((phid3*Math.sin(phi3))/40 - Math.sin(phi3)*(41*phid3 + 41*phid2*Math.cos(theta3) + 41*phid1*Math.cos(theta2)*Math.cos(theta3) + 41*thetad2*Math.sin(phi2)*Math.sin(theta3) + 41*crd*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3) + 41*crd*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2) + 41*thetad1*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3) - 41*phid1*Math.cos(phi2)*Math.sin(theta2)*Math.sin(theta3) + 41*thetad1*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2) + 41*crd*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3) + 41*thetad1*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3))) - (5*Math.sin(phi3)*(10*Math.cos(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2)*(crd + thetad1) + thetad2*Math.cos(cr + theta1)*Math.sin(theta2) + thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2) - phid1*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)*(crd + thetad1)) - 10*Math.sin(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2)*(crd + thetad1) - thetad2*Math.cos(cr + theta1)*Math.cos(theta2) + phid1*Math.sin(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + phid2*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + phid1*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(phi2) + phid2*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)*(crd + thetad1)) + 10*thetad3*Math.cos(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)) + 10*thetad3*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) - 5*phid3*Math.cos(phi3)*(10*Math.cos(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) - 10*Math.sin(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))))*(Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.cos(theta2) - 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) - Math.sin(phi3)*(10*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(phi2)*Math.cos(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) + Math.cos(phi3)*Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.cos(theta2) - 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) + Math.sin(phi2)*Math.sin(theta3)*((Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))))/40 - (Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2)))/40) + Math.sin(phi1)*(5*Math.sin(phi3)*(10*thetad3*Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - 10*Math.sin(theta3)*(phid1*Math.sin(phi1)*Math.sin(phi2) - phid2*Math.cos(phi1)*Math.cos(phi2) - phid1*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2) + phid2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) + thetad2*Math.cos(phi2)*Math.sin(phi1)*Math.sin(theta2)) + 10*phid1*Math.cos(phi1)*Math.cos(theta3)*Math.sin(theta2) + 10*thetad2*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi1) - 10*thetad3*Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) + 5*phid3*Math.cos(phi3)*(10*Math.sin(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + 10*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2)))*(10*Math.sin(phi2)*Math.sin(theta2) + 10*Math.cos(theta2)*Math.sin(phi3)*Math.sin(theta3) + 10*Math.cos(phi3)*Math.sin(phi2)*Math.sin(theta2) + 10*Math.cos(phi2)*Math.cos(theta3)*Math.sin(phi3)*Math.sin(theta2)) - Math.cos(theta3)*Math.sin(phi2)*((Math.sin(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))))/40 + (Math.cos(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2)))/40) + 2*Math.sin(phi2)*Math.sin(theta3)*(Math.cos(phi3)*((Math.cos(phi3)*(Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2))))/40 + (Math.sin(phi3)*(thetad3 + thetad2*Math.cos(phi2) + crd*Math.cos(phi1)*Math.cos(phi2) + thetad1*Math.cos(phi1)*Math.cos(phi2) + phid1*Math.sin(phi2)*Math.sin(theta2) - crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))/40) - Math.sin(phi3)*(41*Math.cos(phi3)*(thetad3 + thetad2*Math.cos(phi2) + crd*Math.cos(phi1)*Math.cos(phi2) + thetad1*Math.cos(phi1)*Math.cos(phi2) + phid1*Math.sin(phi2)*Math.sin(theta2) - crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) - 41*Math.sin(phi3)*(Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2)))))",
        "vars": [
          "cr",
          "crd",
          "phi1",
          "phi2",
          "phi3",
          "phid1",
          "phid2",
          "phid3",
          "theta1",
          "theta2",
          "theta3",
          "thetad1",
          "thetad2",
          "thetad3"
        ]
      },
      {
        "expr": "2*(Math.cos(phi2)*Math.sin(phi3) + Math.cos(phi3)*Math.cos(theta3)*Math.sin(phi2))*(41*Math.cos(phi3)*(thetad3 + thetad2*Math.cos(phi2) + crd*Math.cos(phi1)*Math.cos(phi2) + thetad1*Math.cos(phi1)*Math.cos(phi2) + phid1*Math.sin(phi2)*Math.sin(theta2) - crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) - 41*Math.sin(phi3)*(Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2)))) - 2*(Math.cos(phi2)*Math.cos(phi3) - Math.cos(theta3)*Math.sin(phi2)*Math.sin(phi3))*(41*Math.cos(phi3)*(Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2))) + 41*Math.sin(phi3)*(thetad3 + thetad2*Math.cos(phi2) + crd*Math.cos(phi1)*Math.cos(phi2) + thetad1*Math.cos(phi1)*Math.cos(phi2) + phid1*Math.sin(phi2)*Math.sin(theta2) - crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))) - (Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.cos(theta2) + 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) - Math.sin(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(phi2)*Math.cos(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) + Math.cos(phi3)*Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.cos(theta2) + 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)))*(5*Math.cos(phi3)*(10*Math.sin(theta3)*(thetad2*Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(theta2)*(crd + thetad1) - thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2) + phid1*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)*(crd + thetad1)) - 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2)*(crd + thetad1) + thetad2*Math.sin(cr + theta1)*Math.cos(theta2) + phid1*Math.cos(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) - phid2*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)*(crd + thetad1) + phid1*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(phi2) + phid2*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 10*thetad3*Math.sin(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)) - 10*thetad3*Math.cos(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) + 5*Math.sin(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2)*(crd + thetad1) + thetad2*Math.sin(cr + theta1)*Math.cos(theta2) + phid1*Math.cos(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + 10*phid2*Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*phid1*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(phi2) + 10*phid2*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)*(crd + thetad1)) + 5*phid3*Math.sin(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) + 5*phid3*Math.cos(phi3)*(10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1))) - (Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.cos(theta2) - 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) - Math.sin(phi3)*(10*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(phi2)*Math.cos(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) + Math.cos(phi3)*Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.cos(theta2) - 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)))*(5*Math.cos(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2)*(crd + thetad1) + thetad2*Math.cos(cr + theta1)*Math.sin(theta2) + thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2) - phid1*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)*(crd + thetad1)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2)*(crd + thetad1) - thetad2*Math.cos(cr + theta1)*Math.cos(theta2) + phid1*Math.sin(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + phid2*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + phid1*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(phi2) + phid2*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)*(crd + thetad1)) + 10*thetad3*Math.sin(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)) - 10*thetad3*Math.cos(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) + 5*Math.sin(phi3)*(10*phid2*Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2)*(crd + thetad1) - thetad2*Math.cos(cr + theta1)*Math.cos(theta2) + phid1*Math.sin(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + 10*phid1*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(phi2) - 10*phid2*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2) + 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)*(crd + thetad1)) + 5*phid3*Math.sin(phi3)*(10*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) + 5*phid3*Math.cos(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1))) + Math.sin(phi1)*(5*Math.cos(phi3)*(10*Math.cos(theta3)*(phid1*Math.sin(phi1)*Math.sin(phi2) - phid2*Math.cos(phi1)*Math.cos(phi2) - phid1*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2) + phid2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) + thetad2*Math.cos(phi2)*Math.sin(phi1)*Math.sin(theta2)) + 10*thetad3*Math.sin(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + 10*phid1*Math.cos(phi1)*Math.sin(theta2)*Math.sin(theta3) + 10*thetad2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3) + 10*thetad3*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2)) + 5*Math.sin(phi3)*(10*phid1*Math.cos(phi2)*Math.sin(phi1) + 10*phid2*Math.cos(phi1)*Math.sin(phi2) + 10*phid1*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2) + 10*phid2*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1) - 10*thetad2*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta2)) - 5*phid3*Math.cos(phi3)*(10*Math.cos(phi1)*Math.cos(phi2) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) + 5*phid3*Math.sin(phi3)*(10*Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - 10*Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)))*(10*Math.sin(phi2)*Math.sin(theta2) + 10*Math.cos(theta2)*Math.sin(phi3)*Math.sin(theta3) + 10*Math.cos(phi3)*Math.sin(phi2)*Math.sin(theta2) + 10*Math.cos(phi2)*Math.cos(theta3)*Math.sin(phi3)*Math.sin(theta2))",
        "vars": [
          "cr",
          "crd",
          "phi1",
          "phi2",
          "phi3",
          "phid1",
          "phid2",
          "phid3",
          "theta1",
          "theta2",
          "theta3",
          "thetad1",
          "thetad2",
          "thetad3"
        ]
      }
    ],
    [
      {
        "expr": "2*((Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)))/40 - (Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1)))/40)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) - 2*(41*Math.cos(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) + 41*Math.sin(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1)))*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + Math.cos(theta3)*((Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))*((Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))))/40 - (Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2)))/40) - (Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3))*(41*thetad3 + 41*thetad2*Math.cos(phi2) + 41*crd*Math.cos(phi1)*Math.cos(phi2) + 41*thetad1*Math.cos(phi1)*Math.cos(phi2) + 41*phid1*Math.sin(phi2)*Math.sin(theta2) - 41*crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 41*thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) - 41*Math.sin(theta3)*(phid1*Math.sin(phi1)*Math.sin(phi2) - phid2*Math.cos(phi1)*Math.cos(phi2) - phid1*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2) + phid2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) + thetad2*Math.cos(phi2)*Math.sin(phi1)*Math.sin(theta2)) + 41*thetad3*Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + 41*phid1*Math.cos(phi1)*Math.cos(theta3)*Math.sin(theta2) + 41*thetad2*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi1) - 41*thetad3*Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) + Math.sin(theta3)*((Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))*((Math.sin(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))))/40 + (Math.cos(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2)))/40) - (Math.sin(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2))*(41*thetad3 + 41*thetad2*Math.cos(phi2) + 41*crd*Math.cos(phi1)*Math.cos(phi2) + 41*thetad1*Math.cos(phi1)*Math.cos(phi2) + 41*phid1*Math.sin(phi2)*Math.sin(theta2) - 41*crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 41*thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) + 41*Math.cos(theta3)*(phid1*Math.sin(phi1)*Math.sin(phi2) - phid2*Math.cos(phi1)*Math.cos(phi2) - phid1*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2) + phid2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) + thetad2*Math.cos(phi2)*Math.sin(phi1)*Math.sin(theta2)) + 41*thetad3*Math.sin(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + 41*phid1*Math.cos(phi1)*Math.sin(theta2)*Math.sin(theta3) + 41*thetad2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3) + 41*thetad3*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2)) + (Math.cos(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(phi3)*(10*Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)) - Math.cos(theta3)*Math.sin(phi3)*(10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 10*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))*((61*crd*Math.cos(cr))/20 - 5*Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2)*(crd + thetad1) - 10*thetad2*Math.cos(cr + theta1)*Math.cos(theta2) + 10*phid1*Math.sin(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + 10*thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + (117*crd*Math.sin(cr))/5 - 5*Math.sin(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2)*(crd + thetad1) + thetad2*Math.cos(cr + theta1)*Math.sin(theta2) + thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2) - phid1*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)*(crd + thetad1)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2)*(crd + thetad1) - thetad2*Math.cos(cr + theta1)*Math.cos(theta2) + phid1*Math.sin(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + phid2*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + phid1*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(phi2) + phid2*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)*(crd + thetad1)) + 10*thetad3*Math.sin(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)) - 10*thetad3*Math.cos(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) + 5*Math.cos(phi3)*(10*phid2*Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2)*(crd + thetad1) - thetad2*Math.cos(cr + theta1)*Math.cos(theta2) + phid1*Math.sin(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + 10*phid1*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(phi2) - 10*phid2*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2) + 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)*(crd + thetad1)) - 5*phid3*Math.sin(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 50*Math.cos(cr + theta1)*Math.sin(phi1)*(crd + thetad1) + 50*phid1*Math.sin(cr + theta1)*Math.cos(phi1) + 5*phid2*Math.cos(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 5*phid3*Math.cos(phi3)*(10*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) + 50*phid1*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(phi2) - 50*phid2*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2) + 50*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)*(crd + thetad1)) - 2*Math.cos(theta3)*((Math.cos(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) + Math.sin(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))*(41*Math.cos(phi3)*(thetad3 + thetad2*Math.cos(phi2) + crd*Math.cos(phi1)*Math.cos(phi2) + thetad1*Math.cos(phi1)*Math.cos(phi2) + phid1*Math.sin(phi2)*Math.sin(theta2) - crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) - 41*Math.sin(phi3)*(Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2)))) + (Math.sin(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) - Math.cos(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))*((Math.cos(phi3)*(Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2))))/40 + (Math.sin(phi3)*(thetad3 + thetad2*Math.cos(phi2) + crd*Math.cos(phi1)*Math.cos(phi2) + thetad1*Math.cos(phi1)*Math.cos(phi2) + phid1*Math.sin(phi2)*Math.sin(theta2) - crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))/40) - 41*phid2*Math.cos(phi1)*Math.cos(phi2)*Math.sin(theta3) - 41*phid1*Math.cos(phi1)*Math.cos(theta3)*Math.sin(theta2) - 41*thetad3*Math.cos(phi1)*Math.cos(theta3)*Math.sin(phi2) - 41*thetad2*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi1) + 41*phid1*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta3) + 41*thetad3*Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3) - 41*phid1*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2)*Math.sin(theta3) - 41*thetad3*Math.cos(phi2)*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi1) + 41*phid2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta3) + 41*thetad2*Math.cos(phi2)*Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) - 3*(Math.cos(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))*(5*Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2)*(crd + thetad1) + 10*thetad2*Math.sin(cr + theta1)*Math.cos(theta2) + 10*phid1*Math.cos(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + 10*thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) - (117*crd*Math.cos(cr))/5 + (61*crd*Math.sin(cr))/20 + 50*Math.sin(cr + theta1)*Math.sin(phi1)*(crd + thetad1) - 50*phid1*Math.cos(cr + theta1)*Math.cos(phi1) + 5*phid2*Math.cos(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 50*phid1*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(phi2) + 50*phid2*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2) + 50*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)*(crd + thetad1)) - (Math.cos(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(phi3)*(10*Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)) - Math.cos(theta3)*Math.sin(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) - 10*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))*(5*Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2)*(crd + thetad1) + 10*thetad2*Math.sin(cr + theta1)*Math.cos(theta2) + 10*phid1*Math.cos(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + 10*thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) - 5*Math.sin(phi3)*(10*Math.sin(theta3)*(thetad2*Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(theta2)*(crd + thetad1) - thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2) + phid1*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)*(crd + thetad1)) - 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2)*(crd + thetad1) + thetad2*Math.sin(cr + theta1)*Math.cos(theta2) + phid1*Math.cos(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) - phid2*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)*(crd + thetad1) + phid1*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(phi2) + phid2*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 10*thetad3*Math.sin(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)) - 10*thetad3*Math.cos(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) - (117*crd*Math.cos(cr))/5 + (61*crd*Math.sin(cr))/20 + 5*Math.cos(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2)*(crd + thetad1) + thetad2*Math.sin(cr + theta1)*Math.cos(theta2) + phid1*Math.cos(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + 10*phid2*Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*phid1*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(phi2) + 10*phid2*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)*(crd + thetad1)) + 50*Math.sin(cr + theta1)*Math.sin(phi1)*(crd + thetad1) - 50*phid1*Math.cos(cr + theta1)*Math.cos(phi1) + 5*phid2*Math.cos(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 5*phid3*Math.cos(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) - 5*phid3*Math.sin(phi3)*(10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) - 50*phid1*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(phi2) + 50*phid2*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2) + 50*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)*(crd + thetad1)) + 3*(Math.cos(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))*((61*crd*Math.cos(cr))/20 - 5*Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2)*(crd + thetad1) - 10*thetad2*Math.cos(cr + theta1)*Math.cos(theta2) + 10*phid1*Math.sin(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + 10*thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + (117*crd*Math.sin(cr))/5 + 50*Math.cos(cr + theta1)*Math.sin(phi1)*(crd + thetad1) + 50*phid1*Math.sin(cr + theta1)*Math.cos(phi1) + 5*phid2*Math.cos(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 50*phid1*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(phi2) - 50*phid2*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2) + 50*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)*(crd + thetad1)) - 2*Math.cos(phi3)*Math.sin(theta3)*((41*Math.cos(phi3)*(thetad3 + thetad2*Math.cos(phi2) + crd*Math.cos(phi1)*Math.cos(phi2) + thetad1*Math.cos(phi1)*Math.cos(phi2) + phid1*Math.sin(phi2)*Math.sin(theta2) - crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) - 41*Math.sin(phi3)*(Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2))))*(Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2) + Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3)) + (Math.sin(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) - Math.cos(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))*(phid3/40 + (phid2*Math.cos(theta3))/40 + (phid1*Math.cos(theta2)*Math.cos(theta3))/40 + (thetad2*Math.sin(phi2)*Math.sin(theta3))/40 + (crd*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3))/40 + (crd*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2))/40 + (thetad1*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3))/40 - (phid1*Math.cos(phi2)*Math.sin(theta2)*Math.sin(theta3))/40 + (thetad1*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2))/40 + (crd*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3))/40 + (thetad1*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3))/40) - 41*Math.cos(phi3)*(Math.cos(theta3)*(phid1*Math.sin(phi1)*Math.sin(phi2) - phid2*Math.cos(phi1)*Math.cos(phi2) - phid1*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2) + phid2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) + thetad2*Math.cos(phi2)*Math.sin(phi1)*Math.sin(theta2)) + thetad3*Math.sin(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + phid1*Math.cos(phi1)*Math.sin(theta2)*Math.sin(theta3) + thetad2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3) + thetad3*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2)) - 41*Math.sin(phi3)*(phid1*Math.cos(phi2)*Math.sin(phi1) + phid2*Math.cos(phi1)*Math.sin(phi2) + phid1*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2) + phid2*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1) - thetad2*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta2)) + 41*phid3*Math.cos(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) - 41*phid3*Math.sin(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3))) + 82*phid1*Math.cos(phi1)*Math.sin(theta2) + 82*thetad2*Math.cos(theta2)*Math.sin(phi1) - 2*Math.sin(phi3)*Math.sin(theta3)*((41*Math.cos(phi3)*(Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2))) + 41*Math.sin(phi3)*(thetad3 + thetad2*Math.cos(phi2) + crd*Math.cos(phi1)*Math.cos(phi2) + thetad1*Math.cos(phi1)*Math.cos(phi2) + phid1*Math.sin(phi2)*Math.sin(theta2) - crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))*(Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2) + Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3)) - (Math.cos(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) + Math.sin(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))*(41*phid3 + 41*phid2*Math.cos(theta3) + 41*phid1*Math.cos(theta2)*Math.cos(theta3) + 41*thetad2*Math.sin(phi2)*Math.sin(theta3) + 41*crd*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3) + 41*crd*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2) + 41*thetad1*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3) - 41*phid1*Math.cos(phi2)*Math.sin(theta2)*Math.sin(theta3) + 41*thetad1*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2) + 41*crd*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3) + 41*thetad1*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3)) + (Math.cos(phi3)*(phid1*Math.cos(phi2)*Math.sin(phi1) + phid2*Math.cos(phi1)*Math.sin(phi2) + phid1*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2) + phid2*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1) - thetad2*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta2)))/40 - (Math.sin(phi3)*(Math.cos(theta3)*(phid1*Math.sin(phi1)*Math.sin(phi2) - phid2*Math.cos(phi1)*Math.cos(phi2) - phid1*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2) + phid2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) + thetad2*Math.cos(phi2)*Math.sin(phi1)*Math.sin(theta2)) + thetad3*Math.sin(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + phid1*Math.cos(phi1)*Math.sin(theta2)*Math.sin(theta3) + thetad2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3) + thetad3*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2)))/40 + (phid3*Math.sin(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))/40 + (phid3*Math.cos(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)))/40)",
        "vars": [
          "cr",
          "crd",
          "phi1",
          "phi2",
          "phi3",
          "phid1",
          "phid2",
          "phid3",
          "theta1",
          "theta2",
          "theta3",
          "thetad1",
          "thetad2",
          "thetad3"
        ]
      },
      {
        "expr": "3*(Math.cos(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))*(10*crd*Math.sin(cr) + 5*cr*crd*Math.cos(cr)) - 3*(Math.cos(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))*(10*crd*Math.cos(cr) - 5*cr*crd*Math.sin(cr)) - (10*crd*Math.cos(cr) - 5*cr*crd*Math.sin(cr))*(Math.cos(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(phi3)*(10*Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)) - Math.cos(theta3)*Math.sin(phi3)*(10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 10*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)) + (10*crd*Math.sin(cr) + 5*cr*crd*Math.cos(cr))*(Math.cos(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(phi3)*(10*Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)) - Math.cos(theta3)*Math.sin(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) - 10*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))",
        "vars": [
          "cr",
          "crd",
          "phi1",
          "phi2",
          "phi3",
          "theta1",
          "theta2",
          "theta3"
        ]
      },
      {
        "expr": "2*((Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)))/40 - (Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1)))/40)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) - 2*(41*Math.cos(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) + 41*Math.sin(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1)))*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + (Math.cos(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(phi3)*(10*Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)) - Math.cos(theta3)*Math.sin(phi3)*(10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 10*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))*(5*Math.cos(phi3)*(10*phid2*Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2)*(crd + thetad1) - thetad2*Math.cos(cr + theta1)*Math.cos(theta2) + phid1*Math.sin(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + 10*phid1*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(phi2) - 10*phid2*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2) + 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)*(crd + thetad1)) - 5*Math.sin(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2)*(crd + thetad1) + thetad2*Math.cos(cr + theta1)*Math.sin(theta2) + thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2) - phid1*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)*(crd + thetad1)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2)*(crd + thetad1) - thetad2*Math.cos(cr + theta1)*Math.cos(theta2) + phid1*Math.sin(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + phid2*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + phid1*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(phi2) + phid2*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)*(crd + thetad1)) + 10*thetad3*Math.sin(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)) - 10*thetad3*Math.cos(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) - 5*Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2)*(crd + thetad1) - 10*thetad2*Math.cos(cr + theta1)*Math.cos(theta2) + 10*phid1*Math.sin(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + 10*thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) - 5*phid3*Math.sin(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 50*Math.cos(cr + theta1)*Math.sin(phi1)*(crd + thetad1) + 50*phid1*Math.sin(cr + theta1)*Math.cos(phi1) + 5*phid2*Math.cos(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 5*phid3*Math.cos(phi3)*(10*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) + 50*phid1*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(phi2) - 50*phid2*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2) + 50*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)*(crd + thetad1)) + Math.cos(theta3)*((Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))*((Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))))/40 - (Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2)))/40) - (Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3))*(41*thetad3 + 41*thetad2*Math.cos(phi2) + 41*crd*Math.cos(phi1)*Math.cos(phi2) + 41*thetad1*Math.cos(phi1)*Math.cos(phi2) + 41*phid1*Math.sin(phi2)*Math.sin(theta2) - 41*crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 41*thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) - 41*Math.sin(theta3)*(phid1*Math.sin(phi1)*Math.sin(phi2) - phid2*Math.cos(phi1)*Math.cos(phi2) - phid1*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2) + phid2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) + thetad2*Math.cos(phi2)*Math.sin(phi1)*Math.sin(theta2)) + 41*thetad3*Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + 41*phid1*Math.cos(phi1)*Math.cos(theta3)*Math.sin(theta2) + 41*thetad2*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi1) - 41*thetad3*Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) + Math.sin(theta3)*((Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))*((Math.sin(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))))/40 + (Math.cos(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2)))/40) - (Math.sin(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2))*(41*thetad3 + 41*thetad2*Math.cos(phi2) + 41*crd*Math.cos(phi1)*Math.cos(phi2) + 41*thetad1*Math.cos(phi1)*Math.cos(phi2) + 41*phid1*Math.sin(phi2)*Math.sin(theta2) - 41*crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 41*thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) + 41*Math.cos(theta3)*(phid1*Math.sin(phi1)*Math.sin(phi2) - phid2*Math.cos(phi1)*Math.cos(phi2) - phid1*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2) + phid2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) + thetad2*Math.cos(phi2)*Math.sin(phi1)*Math.sin(theta2)) + 41*thetad3*Math.sin(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + 41*phid1*Math.cos(phi1)*Math.sin(theta2)*Math.sin(theta3) + 41*thetad2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3) + 41*thetad3*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2)) - 2*Math.cos(theta3)*((Math.cos(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) + Math.sin(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))*(41*Math.cos(phi3)*(thetad3 + thetad2*Math.cos(phi2) + crd*Math.cos(phi1)*Math.cos(phi2) + thetad1*Math.cos(phi1)*Math.cos(phi2) + phid1*Math.sin(phi2)*Math.sin(theta2) - crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) - 41*Math.sin(phi3)*(Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2)))) + (Math.sin(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) - Math.cos(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))*((Math.cos(phi3)*(Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2))))/40 + (Math.sin(phi3)*(thetad3 + thetad2*Math.cos(phi2) + crd*Math.cos(phi1)*Math.cos(phi2) + thetad1*Math.cos(phi1)*Math.cos(phi2) + phid1*Math.sin(phi2)*Math.sin(theta2) - crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))/40) - 41*phid2*Math.cos(phi1)*Math.cos(phi2)*Math.sin(theta3) - 41*phid1*Math.cos(phi1)*Math.cos(theta3)*Math.sin(theta2) - 41*thetad3*Math.cos(phi1)*Math.cos(theta3)*Math.sin(phi2) - 41*thetad2*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi1) + 41*phid1*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta3) + 41*thetad3*Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3) - 41*phid1*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2)*Math.sin(theta3) - 41*thetad3*Math.cos(phi2)*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi1) + 41*phid2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta3) + 41*thetad2*Math.cos(phi2)*Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) - 3*(Math.cos(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))*(5*Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2)*(crd + thetad1) + 10*thetad2*Math.sin(cr + theta1)*Math.cos(theta2) + 10*phid1*Math.cos(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + 10*thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + 50*Math.sin(cr + theta1)*Math.sin(phi1)*(crd + thetad1) - 50*phid1*Math.cos(cr + theta1)*Math.cos(phi1) + 5*phid2*Math.cos(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 50*phid1*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(phi2) + 50*phid2*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2) + 50*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)*(crd + thetad1)) - (Math.cos(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(phi3)*(10*Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)) - Math.cos(theta3)*Math.sin(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) - 10*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))*(5*Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2)*(crd + thetad1) + 10*thetad2*Math.sin(cr + theta1)*Math.cos(theta2) + 10*phid1*Math.cos(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + 10*thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) - 5*Math.sin(phi3)*(10*Math.sin(theta3)*(thetad2*Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(theta2)*(crd + thetad1) - thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2) + phid1*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)*(crd + thetad1)) - 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2)*(crd + thetad1) + thetad2*Math.sin(cr + theta1)*Math.cos(theta2) + phid1*Math.cos(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) - phid2*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)*(crd + thetad1) + phid1*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(phi2) + phid2*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 10*thetad3*Math.sin(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)) - 10*thetad3*Math.cos(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) + 5*Math.cos(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2)*(crd + thetad1) + thetad2*Math.sin(cr + theta1)*Math.cos(theta2) + phid1*Math.cos(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + 10*phid2*Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*phid1*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(phi2) + 10*phid2*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)*(crd + thetad1)) + 50*Math.sin(cr + theta1)*Math.sin(phi1)*(crd + thetad1) - 50*phid1*Math.cos(cr + theta1)*Math.cos(phi1) + 5*phid2*Math.cos(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 5*phid3*Math.cos(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) - 5*phid3*Math.sin(phi3)*(10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) - 50*phid1*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(phi2) + 50*phid2*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2) + 50*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)*(crd + thetad1)) + 3*(Math.cos(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))*(50*Math.cos(cr + theta1)*Math.sin(phi1)*(crd + thetad1) - 5*Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2)*(crd + thetad1) - 10*thetad2*Math.cos(cr + theta1)*Math.cos(theta2) + 10*phid1*Math.sin(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + 10*thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + 50*phid1*Math.sin(cr + theta1)*Math.cos(phi1) + 5*phid2*Math.cos(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 50*phid1*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(phi2) - 50*phid2*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2) + 50*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)*(crd + thetad1)) - 2*Math.cos(phi3)*Math.sin(theta3)*((41*Math.cos(phi3)*(thetad3 + thetad2*Math.cos(phi2) + crd*Math.cos(phi1)*Math.cos(phi2) + thetad1*Math.cos(phi1)*Math.cos(phi2) + phid1*Math.sin(phi2)*Math.sin(theta2) - crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) - 41*Math.sin(phi3)*(Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2))))*(Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2) + Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3)) + (Math.sin(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) - Math.cos(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))*(phid3/40 + (phid2*Math.cos(theta3))/40 + (phid1*Math.cos(theta2)*Math.cos(theta3))/40 + (thetad2*Math.sin(phi2)*Math.sin(theta3))/40 + (crd*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3))/40 + (crd*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2))/40 + (thetad1*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3))/40 - (phid1*Math.cos(phi2)*Math.sin(theta2)*Math.sin(theta3))/40 + (thetad1*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2))/40 + (crd*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3))/40 + (thetad1*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3))/40) - 41*Math.cos(phi3)*(Math.cos(theta3)*(phid1*Math.sin(phi1)*Math.sin(phi2) - phid2*Math.cos(phi1)*Math.cos(phi2) - phid1*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2) + phid2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) + thetad2*Math.cos(phi2)*Math.sin(phi1)*Math.sin(theta2)) + thetad3*Math.sin(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + phid1*Math.cos(phi1)*Math.sin(theta2)*Math.sin(theta3) + thetad2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3) + thetad3*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2)) - 41*Math.sin(phi3)*(phid1*Math.cos(phi2)*Math.sin(phi1) + phid2*Math.cos(phi1)*Math.sin(phi2) + phid1*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2) + phid2*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1) - thetad2*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta2)) + 41*phid3*Math.cos(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) - 41*phid3*Math.sin(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3))) + 82*phid1*Math.cos(phi1)*Math.sin(theta2) + 82*thetad2*Math.cos(theta2)*Math.sin(phi1) - 2*Math.sin(phi3)*Math.sin(theta3)*((41*Math.cos(phi3)*(Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2))) + 41*Math.sin(phi3)*(thetad3 + thetad2*Math.cos(phi2) + crd*Math.cos(phi1)*Math.cos(phi2) + thetad1*Math.cos(phi1)*Math.cos(phi2) + phid1*Math.sin(phi2)*Math.sin(theta2) - crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))*(Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2) + Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3)) - (Math.cos(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) + Math.sin(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))*(41*phid3 + 41*phid2*Math.cos(theta3) + 41*phid1*Math.cos(theta2)*Math.cos(theta3) + 41*thetad2*Math.sin(phi2)*Math.sin(theta3) + 41*crd*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3) + 41*crd*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2) + 41*thetad1*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3) - 41*phid1*Math.cos(phi2)*Math.sin(theta2)*Math.sin(theta3) + 41*thetad1*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2) + 41*crd*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3) + 41*thetad1*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3)) + (Math.cos(phi3)*(phid1*Math.cos(phi2)*Math.sin(phi1) + phid2*Math.cos(phi1)*Math.sin(phi2) + phid1*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2) + phid2*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1) - thetad2*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta2)))/40 - (Math.sin(phi3)*(Math.cos(theta3)*(phid1*Math.sin(phi1)*Math.sin(phi2) - phid2*Math.cos(phi1)*Math.cos(phi2) - phid1*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2) + phid2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) + thetad2*Math.cos(phi2)*Math.sin(phi1)*Math.sin(theta2)) + thetad3*Math.sin(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + phid1*Math.cos(phi1)*Math.sin(theta2)*Math.sin(theta3) + thetad2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3) + thetad3*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2)))/40 + (phid3*Math.sin(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))/40 + (phid3*Math.cos(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)))/40)",
        "vars": [
          "cr",
          "crd",
          "phi1",
          "phi2",
          "phi3",
          "phid1",
          "phid2",
          "phid3",
          "theta1",
          "theta2",
          "theta3",
          "thetad1",
          "thetad2",
          "thetad3"
        ]
      },
      {
        "expr": "3*(10*Math.cos(phi1)*Math.sin(phi2) + 10*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1))*(50*phid1*Math.cos(phi1) + 50*phid1*Math.cos(phi1)*Math.cos(phi2) - 50*phid2*Math.sin(phi1)*Math.sin(phi2) + 50*phid2*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2) - 50*phid1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 50*thetad2*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta2)) - Math.cos(theta3)*(41*thetad2*Math.cos(theta3)*Math.sin(theta2) - Math.sin(phi2)*Math.sin(theta2)*((Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))))/40 - (Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2)))/40) - (Math.cos(theta2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta3)*Math.sin(theta2))*(41*thetad3 + 41*thetad2*Math.cos(phi2) + 41*crd*Math.cos(phi1)*Math.cos(phi2) + 41*thetad1*Math.cos(phi1)*Math.cos(phi2) + 41*phid1*Math.sin(phi2)*Math.sin(theta2) - 41*crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 41*thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) + 41*thetad3*Math.cos(theta2)*Math.sin(theta3) + 41*thetad2*Math.cos(phi2)*Math.cos(theta2)*Math.sin(theta3) + 41*thetad3*Math.cos(phi2)*Math.cos(theta3)*Math.sin(theta2) - 41*phid2*Math.sin(phi2)*Math.sin(theta2)*Math.sin(theta3)) - Math.sin(theta3)*((Math.cos(theta2)*Math.cos(theta3) - Math.cos(phi2)*Math.sin(theta2)*Math.sin(theta3))*(41*thetad3 + 41*thetad2*Math.cos(phi2) + 41*crd*Math.cos(phi1)*Math.cos(phi2) + 41*thetad1*Math.cos(phi1)*Math.cos(phi2) + 41*phid1*Math.sin(phi2)*Math.sin(theta2) - 41*crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 41*thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) - Math.sin(phi2)*Math.sin(theta2)*((Math.sin(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))))/40 + (Math.cos(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2)))/40) - 41*thetad3*Math.cos(theta2)*Math.cos(theta3) + 41*thetad2*Math.sin(theta2)*Math.sin(theta3) - 41*thetad2*Math.cos(phi2)*Math.cos(theta2)*Math.cos(theta3) + 41*phid2*Math.cos(theta3)*Math.sin(phi2)*Math.sin(theta2) + 41*thetad3*Math.cos(phi2)*Math.sin(theta2)*Math.sin(theta3)) + 3*(Math.cos(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))*(5*Math.cos(cr + theta1)*(10*phid1*Math.sin(phi1) + 10*phid1*Math.cos(phi2)*Math.sin(phi1) + 10*phid2*Math.cos(phi1)*Math.sin(phi2) + 10*phid1*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2) + 10*phid2*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1) - 10*thetad2*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta2)) + 5*Math.sin(cr + theta1)*(crd + thetad1)*(10*Math.cos(phi1) + 10*Math.cos(phi1)*Math.cos(phi2) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))) - 3*(Math.cos(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))*(5*Math.sin(cr + theta1)*(10*phid1*Math.sin(phi1) + 10*phid1*Math.cos(phi2)*Math.sin(phi1) + 10*phid2*Math.cos(phi1)*Math.sin(phi2) + 10*phid1*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2) + 10*phid2*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1) - 10*thetad2*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta2)) - 5*Math.cos(cr + theta1)*(crd + thetad1)*(10*Math.cos(phi1) + 10*Math.cos(phi1)*Math.cos(phi2) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))) + (5*Math.cos(cr + theta1)*(10*phid1*Math.sin(phi1) + 10*phid1*Math.cos(phi2)*Math.sin(phi1) + 10*phid2*Math.cos(phi1)*Math.sin(phi2) + 10*phid1*Math.cos(phi2)*Math.cos(phi3)*Math.sin(phi1) + 10*phid2*Math.cos(phi1)*Math.cos(phi3)*Math.sin(phi2) + 10*phid3*Math.cos(phi1)*Math.cos(phi2)*Math.sin(phi3) + 10*phid1*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2) + 10*phid2*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1) - 10*thetad2*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta2) + 10*phid1*Math.cos(phi1)*Math.cos(phi3)*Math.cos(theta2)*Math.sin(phi2) + 10*phid2*Math.cos(phi2)*Math.cos(phi3)*Math.cos(theta2)*Math.sin(phi1) + 10*phid2*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta3)*Math.sin(phi3) + 10*phid3*Math.cos(phi1)*Math.cos(phi3)*Math.cos(theta3)*Math.sin(phi2) - 10*phid1*Math.cos(theta3)*Math.sin(phi1)*Math.sin(phi2)*Math.sin(phi3) - 10*phid3*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)*Math.sin(phi3) - 10*phid1*Math.cos(phi1)*Math.sin(phi3)*Math.sin(theta2)*Math.sin(theta3) - 10*thetad2*Math.cos(phi3)*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta2) - 10*phid3*Math.cos(phi3)*Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3) - 10*thetad3*Math.cos(phi1)*Math.sin(phi2)*Math.sin(phi3)*Math.sin(theta3) - 10*thetad2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi3)*Math.sin(theta3) - 10*thetad3*Math.cos(theta3)*Math.sin(phi1)*Math.sin(phi3)*Math.sin(theta2) + 10*phid1*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi3) + 10*phid3*Math.cos(phi2)*Math.cos(phi3)*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi1) - 10*phid2*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi1)*Math.sin(phi2)*Math.sin(phi3) - 10*thetad2*Math.cos(phi2)*Math.cos(theta3)*Math.sin(phi1)*Math.sin(phi3)*Math.sin(theta2) - 10*thetad3*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi3)*Math.sin(theta3)) + 5*Math.sin(cr + theta1)*(crd + thetad1)*(10*Math.cos(phi1) + 10*Math.cos(phi1)*Math.cos(phi2) + 10*Math.cos(phi1)*Math.cos(phi2)*Math.cos(phi3) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 10*Math.cos(phi3)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 10*Math.cos(phi1)*Math.cos(theta3)*Math.sin(phi2)*Math.sin(phi3) + 10*Math.sin(phi1)*Math.sin(phi3)*Math.sin(theta2)*Math.sin(theta3) - 10*Math.cos(phi2)*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi1)*Math.sin(phi3)))*(Math.cos(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(phi3)*(10*Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)) - Math.cos(theta3)*Math.sin(phi3)*(10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 10*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)) - (10*Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi3)*(10*Math.cos(phi1)*Math.sin(phi2) + 10*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + Math.cos(theta3)*Math.sin(phi3)*(10*Math.cos(phi1)*Math.cos(phi2) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) + 10*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1))*(5*Math.cos(phi3)*(10*phid2*Math.sin(phi1)*Math.sin(phi2) - 10*phid1*Math.cos(phi1)*Math.cos(phi2) - 10*phid2*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2) + 10*phid1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) + 10*thetad2*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta2)) - 50*phid1*Math.cos(phi1) + 5*Math.sin(phi3)*(10*Math.cos(theta3)*(phid1*Math.cos(phi1)*Math.sin(phi2) + phid2*Math.cos(phi2)*Math.sin(phi1) + phid1*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1) + phid2*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2) + thetad2*Math.cos(phi1)*Math.cos(phi2)*Math.sin(theta2)) - 10*thetad3*Math.sin(theta3)*(Math.sin(phi1)*Math.sin(phi2) - Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2)) + 10*thetad2*Math.cos(phi1)*Math.cos(theta2)*Math.sin(theta3) + 10*thetad3*Math.cos(phi1)*Math.cos(theta3)*Math.sin(theta2) - 10*phid1*Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) + 5*phid3*Math.sin(phi3)*(10*Math.cos(phi2)*Math.sin(phi1) + 10*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2)) - 50*phid1*Math.cos(phi1)*Math.cos(phi2) + 50*phid2*Math.sin(phi1)*Math.sin(phi2) + 5*phid3*Math.cos(phi3)*(10*Math.cos(theta3)*(Math.sin(phi1)*Math.sin(phi2) - Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2)) + 10*Math.cos(phi1)*Math.sin(theta2)*Math.sin(theta3)) - 50*phid2*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2) + 50*phid1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) + 50*thetad2*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta2)) - (5*Math.sin(cr + theta1)*(10*phid1*Math.sin(phi1) + 10*phid1*Math.cos(phi2)*Math.sin(phi1) + 10*phid2*Math.cos(phi1)*Math.sin(phi2) + 10*phid1*Math.cos(phi2)*Math.cos(phi3)*Math.sin(phi1) + 10*phid2*Math.cos(phi1)*Math.cos(phi3)*Math.sin(phi2) + 10*phid3*Math.cos(phi1)*Math.cos(phi2)*Math.sin(phi3) + 10*phid1*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2) + 10*phid2*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1) - 10*thetad2*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta2) + 10*phid1*Math.cos(phi1)*Math.cos(phi3)*Math.cos(theta2)*Math.sin(phi2) + 10*phid2*Math.cos(phi2)*Math.cos(phi3)*Math.cos(theta2)*Math.sin(phi1) + 10*phid2*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta3)*Math.sin(phi3) + 10*phid3*Math.cos(phi1)*Math.cos(phi3)*Math.cos(theta3)*Math.sin(phi2) - 10*phid1*Math.cos(theta3)*Math.sin(phi1)*Math.sin(phi2)*Math.sin(phi3) - 10*phid3*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)*Math.sin(phi3) - 10*phid1*Math.cos(phi1)*Math.sin(phi3)*Math.sin(theta2)*Math.sin(theta3) - 10*thetad2*Math.cos(phi3)*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta2) - 10*phid3*Math.cos(phi3)*Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3) - 10*thetad3*Math.cos(phi1)*Math.sin(phi2)*Math.sin(phi3)*Math.sin(theta3) - 10*thetad2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi3)*Math.sin(theta3) - 10*thetad3*Math.cos(theta3)*Math.sin(phi1)*Math.sin(phi3)*Math.sin(theta2) + 10*phid1*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi3) + 10*phid3*Math.cos(phi2)*Math.cos(phi3)*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi1) - 10*phid2*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi1)*Math.sin(phi2)*Math.sin(phi3) - 10*thetad2*Math.cos(phi2)*Math.cos(theta3)*Math.sin(phi1)*Math.sin(phi3)*Math.sin(theta2) - 10*thetad3*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi3)*Math.sin(theta3)) - 5*Math.cos(cr + theta1)*(crd + thetad1)*(10*Math.cos(phi1) + 10*Math.cos(phi1)*Math.cos(phi2) + 10*Math.cos(phi1)*Math.cos(phi2)*Math.cos(phi3) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 10*Math.cos(phi3)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 10*Math.cos(phi1)*Math.cos(theta3)*Math.sin(phi2)*Math.sin(phi3) + 10*Math.sin(phi1)*Math.sin(phi3)*Math.sin(theta2)*Math.sin(theta3) - 10*Math.cos(phi2)*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi1)*Math.sin(phi3)))*(Math.cos(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(phi3)*(10*Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)) - Math.cos(theta3)*Math.sin(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) - 10*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)) - 82*thetad2*Math.sin(theta2) - 2*Math.cos(theta3)*(41*thetad2*Math.cos(theta3)*Math.sin(theta2) - (Math.cos(phi3)*(Math.cos(theta2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta3)*Math.sin(theta2)) - Math.sin(phi2)*Math.sin(phi3)*Math.sin(theta2))*(41*Math.cos(phi3)*(thetad3 + thetad2*Math.cos(phi2) + crd*Math.cos(phi1)*Math.cos(phi2) + thetad1*Math.cos(phi1)*Math.cos(phi2) + phid1*Math.sin(phi2)*Math.sin(theta2) - crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) - 41*Math.sin(phi3)*(Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2)))) - (Math.sin(phi3)*(Math.cos(theta2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta3)*Math.sin(theta2)) + Math.cos(phi3)*Math.sin(phi2)*Math.sin(theta2))*((Math.cos(phi3)*(Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2))))/40 + (Math.sin(phi3)*(thetad3 + thetad2*Math.cos(phi2) + crd*Math.cos(phi1)*Math.cos(phi2) + thetad1*Math.cos(phi1)*Math.cos(phi2) + phid1*Math.sin(phi2)*Math.sin(theta2) - crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))/40) + 41*thetad3*Math.cos(theta2)*Math.sin(theta3) + 41*thetad2*Math.cos(phi2)*Math.cos(theta2)*Math.sin(theta3) + 41*thetad3*Math.cos(phi2)*Math.cos(theta3)*Math.sin(theta2) - 41*phid2*Math.sin(phi2)*Math.sin(theta2)*Math.sin(theta3)) - 2*Math.cos(phi3)*Math.sin(theta3)*((Math.cos(theta2)*Math.cos(theta3) - Math.cos(phi2)*Math.sin(theta2)*Math.sin(theta3))*(41*Math.cos(phi3)*(thetad3 + thetad2*Math.cos(phi2) + crd*Math.cos(phi1)*Math.cos(phi2) + thetad1*Math.cos(phi1)*Math.cos(phi2) + phid1*Math.sin(phi2)*Math.sin(theta2) - crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) - 41*Math.sin(phi3)*(Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2)))) - (Math.sin(phi3)*(Math.cos(theta2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta3)*Math.sin(theta2)) + Math.cos(phi3)*Math.sin(phi2)*Math.sin(theta2))*(phid3/40 + (phid2*Math.cos(theta3))/40 + (phid1*Math.cos(theta2)*Math.cos(theta3))/40 + (thetad2*Math.sin(phi2)*Math.sin(theta3))/40 + (crd*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3))/40 + (crd*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2))/40 + (thetad1*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3))/40 - (phid1*Math.cos(phi2)*Math.sin(theta2)*Math.sin(theta3))/40 + (thetad1*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2))/40 + (crd*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3))/40 + (thetad1*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3))/40) + 41*Math.cos(phi3)*(thetad2*Math.sin(theta2)*Math.sin(theta3) - thetad3*Math.cos(theta2)*Math.cos(theta3) - thetad2*Math.cos(phi2)*Math.cos(theta2)*Math.cos(theta3) + phid2*Math.cos(theta3)*Math.sin(phi2)*Math.sin(theta2) + thetad3*Math.cos(phi2)*Math.sin(theta2)*Math.sin(theta3)) + 41*phid3*Math.sin(phi3)*(Math.cos(theta2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta3)*Math.sin(theta2)) + 41*phid2*Math.cos(phi2)*Math.sin(phi3)*Math.sin(theta2) + 41*phid3*Math.cos(phi3)*Math.sin(phi2)*Math.sin(theta2) + 41*thetad2*Math.cos(theta2)*Math.sin(phi2)*Math.sin(phi3)) - 2*Math.sin(phi3)*Math.sin(theta3)*((Math.sin(phi3)*(thetad2*Math.sin(theta2)*Math.sin(theta3) - thetad3*Math.cos(theta2)*Math.cos(theta3) - thetad2*Math.cos(phi2)*Math.cos(theta2)*Math.cos(theta3) + phid2*Math.cos(theta3)*Math.sin(phi2)*Math.sin(theta2) + thetad3*Math.cos(phi2)*Math.sin(theta2)*Math.sin(theta3)))/40 + (Math.cos(phi3)*(Math.cos(theta2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta3)*Math.sin(theta2)) - Math.sin(phi2)*Math.sin(phi3)*Math.sin(theta2))*(41*phid3 + 41*phid2*Math.cos(theta3) + 41*phid1*Math.cos(theta2)*Math.cos(theta3) + 41*thetad2*Math.sin(phi2)*Math.sin(theta3) + 41*crd*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3) + 41*crd*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2) + 41*thetad1*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3) - 41*phid1*Math.cos(phi2)*Math.sin(theta2)*Math.sin(theta3) + 41*thetad1*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2) + 41*crd*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3) + 41*thetad1*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3)) + (Math.cos(theta2)*Math.cos(theta3) - Math.cos(phi2)*Math.sin(theta2)*Math.sin(theta3))*(41*Math.cos(phi3)*(Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2))) + 41*Math.sin(phi3)*(thetad3 + thetad2*Math.cos(phi2) + crd*Math.cos(phi1)*Math.cos(phi2) + thetad1*Math.cos(phi1)*Math.cos(phi2) + phid1*Math.sin(phi2)*Math.sin(theta2) - crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))) - (phid3*Math.cos(phi3)*(Math.cos(theta2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta3)*Math.sin(theta2)))/40 - (phid2*Math.cos(phi2)*Math.cos(phi3)*Math.sin(theta2))/40 - (thetad2*Math.cos(phi3)*Math.cos(theta2)*Math.sin(phi2))/40 + (phid3*Math.sin(phi2)*Math.sin(phi3)*Math.sin(theta2))/40) + 2*Math.cos(phi2)*Math.sin(theta2)*(41*Math.cos(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) + 41*Math.sin(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) + 2*Math.sin(phi2)*Math.sin(theta2)*((Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)))/40 - (Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1)))/40)",
        "vars": [
          "cr",
          "crd",
          "phi1",
          "phi2",
          "phi3",
          "phid1",
          "phid2",
          "phid3",
          "theta1",
          "theta2",
          "theta3",
          "thetad1",
          "thetad2",
          "thetad3"
        ]
      },
      {
        "expr": "Math.cos(theta3)*(Math.cos(phi2)*((Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))))/40 - (Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2)))/40) - Math.cos(theta3)*Math.sin(phi2)*(41*thetad3 + 41*thetad2*Math.cos(phi2) + 41*crd*Math.cos(phi1)*Math.cos(phi2) + 41*thetad1*Math.cos(phi1)*Math.cos(phi2) + 41*phid1*Math.sin(phi2)*Math.sin(theta2) - 41*crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 41*thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) + 41*phid2*Math.cos(phi2)*Math.sin(theta3) + 41*thetad3*Math.cos(theta3)*Math.sin(phi2)) - 3*(Math.cos(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))*(5*Math.sin(phi2)*(10*thetad2*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(theta2)*(crd + thetad1) - 10*thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2) + 10*phid1*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)*(crd + thetad1)) - 5*phid2*Math.cos(phi2)*(10*Math.sin(cr + theta1)*Math.cos(theta2) + 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) - 3*(Math.cos(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))*(5*Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.cos(theta2)*(crd + thetad1) + 10*thetad2*Math.cos(cr + theta1)*Math.sin(theta2) + 10*thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2) - 10*phid1*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(theta2) + 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)*(crd + thetad1)) - 5*phid2*Math.cos(phi2)*(10*Math.cos(cr + theta1)*Math.cos(theta2) - 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) + Math.sin(theta3)*(Math.cos(phi2)*((Math.sin(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))))/40 + (Math.cos(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2)))/40) - Math.sin(phi2)*Math.sin(theta3)*(41*thetad3 + 41*thetad2*Math.cos(phi2) + 41*crd*Math.cos(phi1)*Math.cos(phi2) + 41*thetad1*Math.cos(phi1)*Math.cos(phi2) + 41*phid1*Math.sin(phi2)*Math.sin(theta2) - 41*crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 41*thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) - 41*phid2*Math.cos(phi2)*Math.cos(theta3) + 41*thetad3*Math.sin(phi2)*Math.sin(theta3)) - (Math.cos(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(phi3)*(10*Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)) - Math.cos(theta3)*Math.sin(phi3)*(10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 10*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))*(5*Math.sin(phi2)*(10*thetad2*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(theta2)*(crd + thetad1) - 10*thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2) + 10*phid1*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)*(crd + thetad1)) + 5*Math.sin(phi3)*(10*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.sin(theta2)*(crd + thetad1) + thetad2*Math.sin(cr + theta1)*Math.cos(theta2) + phid1*Math.cos(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + 10*Math.cos(phi2)*Math.cos(theta3)*(thetad2*Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(theta2)*(crd + thetad1) - thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2) + phid1*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)*(crd + thetad1)) + 10*thetad3*Math.cos(theta3)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*phid2*Math.cos(theta3)*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*thetad3*Math.cos(phi2)*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) + 5*Math.cos(phi3)*Math.sin(phi2)*(10*thetad2*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(theta2)*(crd + thetad1) - 10*thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2) + 10*phid1*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)*(crd + thetad1)) + 5*phid3*Math.cos(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(phi2)*Math.cos(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) - 5*phid2*Math.cos(phi2)*(10*Math.sin(cr + theta1)*Math.cos(theta2) + 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) - 5*phid2*Math.cos(phi2)*Math.cos(phi3)*(10*Math.sin(cr + theta1)*Math.cos(theta2) + 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 5*phid3*Math.sin(phi2)*Math.sin(phi3)*(10*Math.sin(cr + theta1)*Math.cos(theta2) + 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) + 2*Math.cos(theta3)*((Math.cos(phi2)*Math.cos(phi3) - Math.cos(theta3)*Math.sin(phi2)*Math.sin(phi3))*((Math.cos(phi3)*(Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2))))/40 + (Math.sin(phi3)*(thetad3 + thetad2*Math.cos(phi2) + crd*Math.cos(phi1)*Math.cos(phi2) + thetad1*Math.cos(phi1)*Math.cos(phi2) + phid1*Math.sin(phi2)*Math.sin(theta2) - crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))/40) - (Math.cos(phi2)*Math.sin(phi3) + Math.cos(phi3)*Math.cos(theta3)*Math.sin(phi2))*(41*Math.cos(phi3)*(thetad3 + thetad2*Math.cos(phi2) + crd*Math.cos(phi1)*Math.cos(phi2) + thetad1*Math.cos(phi1)*Math.cos(phi2) + phid1*Math.sin(phi2)*Math.sin(theta2) - crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) - 41*Math.sin(phi3)*(Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2)))) + 41*phid2*Math.cos(phi2)*Math.sin(theta3) + 41*thetad3*Math.cos(theta3)*Math.sin(phi2)) - 3*(10*Math.cos(phi1)*Math.sin(phi2) + 10*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1))*(50*phid1*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta2) + 50*phid2*Math.cos(phi2)*Math.sin(phi1)*Math.sin(theta2) + 50*thetad2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) + 2*Math.cos(phi2)*((Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)))/40 - (Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1)))/40) - 2*Math.sin(phi2)*(41*Math.cos(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) + 41*Math.sin(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - (Math.cos(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(phi3)*(10*Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)) - Math.cos(theta3)*Math.sin(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) - 10*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))*(5*Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.cos(theta2)*(crd + thetad1) + 10*thetad2*Math.cos(cr + theta1)*Math.sin(theta2) + 10*thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2) - 10*phid1*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(theta2) + 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)*(crd + thetad1)) + 5*Math.sin(phi3)*(10*Math.cos(phi2)*Math.cos(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2)*(crd + thetad1) + thetad2*Math.cos(cr + theta1)*Math.sin(theta2) + thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2) - phid1*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)*(crd + thetad1)) - 10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.sin(theta2)*(crd + thetad1) - thetad2*Math.cos(cr + theta1)*Math.cos(theta2) + phid1*Math.sin(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + 10*thetad3*Math.cos(theta3)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*phid2*Math.cos(theta3)*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*thetad3*Math.cos(phi2)*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) + 5*Math.cos(phi3)*Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.cos(theta2)*(crd + thetad1) + 10*thetad2*Math.cos(cr + theta1)*Math.sin(theta2) + 10*thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2) - 10*phid1*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(theta2) + 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)*(crd + thetad1)) + 5*phid3*Math.cos(phi3)*(10*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(phi2)*Math.cos(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) - 5*phid2*Math.cos(phi2)*(10*Math.cos(cr + theta1)*Math.cos(theta2) - 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) - 5*phid2*Math.cos(phi2)*Math.cos(phi3)*(10*Math.cos(cr + theta1)*Math.cos(theta2) - 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 5*phid3*Math.sin(phi2)*Math.sin(phi3)*(10*Math.cos(cr + theta1)*Math.cos(theta2) - 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) - (5*Math.sin(phi1)*(10*phid2*Math.cos(phi2)*Math.sin(theta2) + 10*thetad2*Math.cos(theta2)*Math.sin(phi2) + 10*phid2*Math.cos(phi2)*Math.cos(phi3)*Math.sin(theta2) + 10*thetad2*Math.cos(phi3)*Math.cos(theta2)*Math.sin(phi2) + 10*phid3*Math.cos(phi3)*Math.cos(theta2)*Math.sin(theta3) + 10*thetad3*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi3) - 10*phid3*Math.sin(phi2)*Math.sin(phi3)*Math.sin(theta2) - 10*thetad2*Math.sin(phi3)*Math.sin(theta2)*Math.sin(theta3) + 10*phid3*Math.cos(phi2)*Math.cos(phi3)*Math.cos(theta3)*Math.sin(theta2) + 10*thetad2*Math.cos(phi2)*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi3) - 10*phid2*Math.cos(theta3)*Math.sin(phi2)*Math.sin(phi3)*Math.sin(theta2) - 10*thetad3*Math.cos(phi2)*Math.sin(phi3)*Math.sin(theta2)*Math.sin(theta3)) + 5*phid1*Math.cos(phi1)*(10*Math.sin(phi2)*Math.sin(theta2) + 10*Math.cos(theta2)*Math.sin(phi3)*Math.sin(theta3) + 10*Math.cos(phi3)*Math.sin(phi2)*Math.sin(theta2) + 10*Math.cos(phi2)*Math.cos(theta3)*Math.sin(phi3)*Math.sin(theta2)))*(10*Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi3)*(10*Math.cos(phi1)*Math.sin(phi2) + 10*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + Math.cos(theta3)*Math.sin(phi3)*(10*Math.cos(phi1)*Math.cos(phi2) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) + 10*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + 2*Math.cos(phi3)*Math.sin(theta3)*((Math.cos(phi2)*Math.cos(phi3) - Math.cos(theta3)*Math.sin(phi2)*Math.sin(phi3))*(phid3/40 + (phid2*Math.cos(theta3))/40 + (phid1*Math.cos(theta2)*Math.cos(theta3))/40 + (thetad2*Math.sin(phi2)*Math.sin(theta3))/40 + (crd*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3))/40 + (crd*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2))/40 + (thetad1*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3))/40 - (phid1*Math.cos(phi2)*Math.sin(theta2)*Math.sin(theta3))/40 + (thetad1*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2))/40 + (crd*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3))/40 + (thetad1*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3))/40) - 41*phid3*Math.cos(phi2)*Math.cos(phi3) + 41*phid2*Math.sin(phi2)*Math.sin(phi3) - Math.sin(phi2)*Math.sin(theta3)*(41*Math.cos(phi3)*(thetad3 + thetad2*Math.cos(phi2) + crd*Math.cos(phi1)*Math.cos(phi2) + thetad1*Math.cos(phi1)*Math.cos(phi2) + phid1*Math.sin(phi2)*Math.sin(theta2) - crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) - 41*Math.sin(phi3)*(Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2)))) - 41*phid2*Math.cos(phi2)*Math.cos(phi3)*Math.cos(theta3) + 41*phid3*Math.cos(theta3)*Math.sin(phi2)*Math.sin(phi3) + 41*thetad3*Math.cos(phi3)*Math.sin(phi2)*Math.sin(theta3)) - 2*Math.sin(phi3)*Math.sin(theta3)*((phid2*Math.cos(phi3)*Math.sin(phi2))/40 - (Math.cos(phi2)*Math.sin(phi3) + Math.cos(phi3)*Math.cos(theta3)*Math.sin(phi2))*(41*phid3 + 41*phid2*Math.cos(theta3) + 41*phid1*Math.cos(theta2)*Math.cos(theta3) + 41*thetad2*Math.sin(phi2)*Math.sin(theta3) + 41*crd*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3) + 41*crd*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2) + 41*thetad1*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3) - 41*phid1*Math.cos(phi2)*Math.sin(theta2)*Math.sin(theta3) + 41*thetad1*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2) + 41*crd*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3) + 41*thetad1*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3)) + (phid3*Math.cos(phi2)*Math.sin(phi3))/40 + Math.sin(phi2)*Math.sin(theta3)*(41*Math.cos(phi3)*(Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2))) + 41*Math.sin(phi3)*(thetad3 + thetad2*Math.cos(phi2) + crd*Math.cos(phi1)*Math.cos(phi2) + thetad1*Math.cos(phi1)*Math.cos(phi2) + phid1*Math.sin(phi2)*Math.sin(theta2) - crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))) + (phid2*Math.cos(phi2)*Math.cos(theta3)*Math.sin(phi3))/40 + (phid3*Math.cos(phi3)*Math.cos(theta3)*Math.sin(phi2))/40 - (thetad3*Math.sin(phi2)*Math.sin(phi3)*Math.sin(theta3))/40)",
        "vars": [
          "cr",
          "crd",
          "phi1",
          "phi2",
          "phi3",
          "phid1",
          "phid2",
          "phid3",
          "theta1",
          "theta2",
          "theta3",
          "thetad1",
          "thetad2",
          "thetad3"
        ]
      },
      {
        "expr": "3*(Math.cos(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))*(5*Math.cos(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2)*(crd + thetad1) + 10*thetad2*Math.sin(cr + theta1)*Math.cos(theta2) + 10*phid1*Math.cos(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + 10*thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) - 5*phid2*Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 50*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)*(crd + thetad1) + 50*phid1*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(phi2) + 50*phid2*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) - (10*Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi3)*(10*Math.cos(phi1)*Math.sin(phi2) + 10*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + Math.cos(theta3)*Math.sin(phi3)*(10*Math.cos(phi1)*Math.cos(phi2) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) + 10*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1))*(5*Math.cos(phi3)*(10*phid1*Math.sin(phi1)*Math.sin(phi2) - 10*phid2*Math.cos(phi1)*Math.cos(phi2) - 10*phid1*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2) + 10*phid2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) + 10*thetad2*Math.cos(phi2)*Math.sin(phi1)*Math.sin(theta2)) + 5*phid3*Math.sin(phi3)*(10*Math.cos(phi1)*Math.sin(phi2) + 10*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - 50*phid2*Math.cos(phi1)*Math.cos(phi2) + 50*phid1*Math.sin(phi1)*Math.sin(phi2) + 5*Math.cos(theta3)*Math.sin(phi3)*(10*phid1*Math.cos(phi2)*Math.sin(phi1) + 10*phid2*Math.cos(phi1)*Math.sin(phi2) + 10*phid1*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2) + 10*phid2*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1) - 10*thetad2*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta2)) + 5*thetad3*Math.sin(phi3)*Math.sin(theta3)*(10*Math.cos(phi1)*Math.cos(phi2) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) - 50*phid1*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2) + 50*phid2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) + 50*thetad2*Math.cos(phi2)*Math.sin(phi1)*Math.sin(theta2) - 5*phid3*Math.cos(phi3)*Math.cos(theta3)*(10*Math.cos(phi1)*Math.cos(phi2) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))) - (Math.cos(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(phi3)*(10*Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)) - Math.cos(theta3)*Math.sin(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) - 10*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))*(5*Math.cos(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2)*(crd + thetad1) - 10*thetad2*Math.cos(cr + theta1)*Math.cos(theta2) + 10*phid1*Math.sin(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + 10*thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + 5*Math.cos(phi3)*(10*Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2)*(crd + thetad1) - thetad2*Math.cos(cr + theta1)*Math.cos(theta2) + phid1*Math.sin(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + 10*phid2*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*phid1*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(phi2) + 10*phid2*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1) + 10*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)*(crd + thetad1)) + 5*phid3*Math.sin(phi3)*(10*Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)) + 5*phid2*Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 5*Math.cos(theta3)*Math.sin(phi3)*(10*phid2*Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2)*(crd + thetad1) - thetad2*Math.cos(cr + theta1)*Math.cos(theta2) + phid1*Math.sin(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + 10*phid1*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(phi2) - 10*phid2*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2) + 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)*(crd + thetad1)) + 50*phid1*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(phi2) + 50*phid2*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1) + 5*phid3*Math.cos(phi3)*Math.cos(theta3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 50*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)*(crd + thetad1) - 5*thetad3*Math.sin(phi3)*Math.sin(theta3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1))) + (Math.cos(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(phi3)*(10*Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)) - Math.cos(theta3)*Math.sin(phi3)*(10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 10*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))*(5*Math.cos(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2)*(crd + thetad1) + 10*thetad2*Math.sin(cr + theta1)*Math.cos(theta2) + 10*phid1*Math.cos(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + 10*thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + 5*Math.cos(phi3)*(10*Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2)*(crd + thetad1) + thetad2*Math.sin(cr + theta1)*Math.cos(theta2) + phid1*Math.cos(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) - 10*phid2*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)*(crd + thetad1) + 10*phid1*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(phi2) + 10*phid2*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) - 5*Math.cos(theta3)*Math.sin(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2)*(crd + thetad1) + thetad2*Math.sin(cr + theta1)*Math.cos(theta2) + phid1*Math.cos(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + 10*phid2*Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*phid1*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(phi2) + 10*phid2*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)*(crd + thetad1)) - 5*phid2*Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 5*phid3*Math.sin(phi3)*(10*Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)) - 50*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)*(crd + thetad1) + 50*phid1*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(phi2) + 50*phid2*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1) - 5*phid3*Math.cos(phi3)*Math.cos(theta3)*(10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 5*thetad3*Math.sin(phi3)*Math.sin(theta3)*(10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1))) - 3*(10*Math.cos(phi1)*Math.sin(phi2) + 10*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1))*(50*phid1*Math.sin(phi1)*Math.sin(phi2) - 50*phid2*Math.cos(phi1)*Math.cos(phi2) - 50*phid1*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2) + 50*phid2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) + 50*thetad2*Math.cos(phi2)*Math.sin(phi1)*Math.sin(theta2)) - 3*(Math.cos(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))*(5*Math.cos(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2)*(crd + thetad1) - 10*thetad2*Math.cos(cr + theta1)*Math.cos(theta2) + 10*phid1*Math.sin(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + 10*thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + 5*phid2*Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 50*phid1*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(phi2) + 50*phid2*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1) + 50*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)*(crd + thetad1)) + 2*Math.cos(theta3)*(Math.cos(phi3)*Math.sin(theta3)*(41*Math.cos(phi3)*(thetad3 + thetad2*Math.cos(phi2) + crd*Math.cos(phi1)*Math.cos(phi2) + thetad1*Math.cos(phi1)*Math.cos(phi2) + phid1*Math.sin(phi2)*Math.sin(theta2) - crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) - 41*Math.sin(phi3)*(Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2)))) - 41*thetad3*Math.sin(theta3) + Math.sin(phi3)*Math.sin(theta3)*((Math.cos(phi3)*(Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2))))/40 + (Math.sin(phi3)*(thetad3 + thetad2*Math.cos(phi2) + crd*Math.cos(phi1)*Math.cos(phi2) + thetad1*Math.cos(phi1)*Math.cos(phi2) + phid1*Math.sin(phi2)*Math.sin(theta2) - crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))/40)) - Math.sin(theta3)*(Math.cos(theta3)*(41*thetad3 + 41*thetad2*Math.cos(phi2) + 41*crd*Math.cos(phi1)*Math.cos(phi2) + 41*thetad1*Math.cos(phi1)*Math.cos(phi2) + 41*phid1*Math.sin(phi2)*Math.sin(theta2) - 41*crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 41*thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) - 41*thetad3*Math.cos(theta3)) + Math.cos(theta3)*(Math.sin(theta3)*(41*thetad3 + 41*thetad2*Math.cos(phi2) + 41*crd*Math.cos(phi1)*Math.cos(phi2) + 41*thetad1*Math.cos(phi1)*Math.cos(phi2) + 41*phid1*Math.sin(phi2)*Math.sin(theta2) - 41*crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 41*thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) - 41*thetad3*Math.sin(theta3)) - 2*Math.sin(phi3)*Math.sin(theta3)*(Math.cos(theta3)*(41*Math.cos(phi3)*(Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2))) + 41*Math.sin(phi3)*(thetad3 + thetad2*Math.cos(phi2) + crd*Math.cos(phi1)*Math.cos(phi2) + thetad1*Math.cos(phi1)*Math.cos(phi2) + phid1*Math.sin(phi2)*Math.sin(theta2) - crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))) - (phid3*Math.cos(phi3)*Math.sin(theta3))/40 - (thetad3*Math.cos(theta3)*Math.sin(phi3))/40 + Math.cos(phi3)*Math.sin(theta3)*(41*phid3 + 41*phid2*Math.cos(theta3) + 41*phid1*Math.cos(theta2)*Math.cos(theta3) + 41*thetad2*Math.sin(phi2)*Math.sin(theta3) + 41*crd*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3) + 41*crd*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2) + 41*thetad1*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3) - 41*phid1*Math.cos(phi2)*Math.sin(theta2)*Math.sin(theta3) + 41*thetad1*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2) + 41*crd*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3) + 41*thetad1*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3))) - 2*Math.cos(phi3)*Math.sin(theta3)*(Math.cos(theta3)*(41*Math.cos(phi3)*(thetad3 + thetad2*Math.cos(phi2) + crd*Math.cos(phi1)*Math.cos(phi2) + thetad1*Math.cos(phi1)*Math.cos(phi2) + phid1*Math.sin(phi2)*Math.sin(theta2) - crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) - 41*Math.sin(phi3)*(Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2)))) - 41*thetad3*Math.cos(phi3)*Math.cos(theta3) + 41*phid3*Math.sin(phi3)*Math.sin(theta3) - Math.sin(phi3)*Math.sin(theta3)*(phid3/40 + (phid2*Math.cos(theta3))/40 + (phid1*Math.cos(theta2)*Math.cos(theta3))/40 + (thetad2*Math.sin(phi2)*Math.sin(theta3))/40 + (crd*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3))/40 + (crd*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2))/40 + (thetad1*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3))/40 - (phid1*Math.cos(phi2)*Math.sin(theta2)*Math.sin(theta3))/40 + (thetad1*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2))/40 + (crd*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3))/40 + (thetad1*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3))/40))",
        "vars": [
          "cr",
          "crd",
          "phi1",
          "phi2",
          "phi3",
          "phid1",
          "phid2",
          "phid3",
          "theta1",
          "theta2",
          "theta3",
          "thetad1",
          "thetad2",
          "thetad3"
        ]
      },
      {
        "expr": "2*Math.cos(theta3)*(Math.cos(phi3)*((Math.cos(phi3)*(Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2))))/40 + (Math.sin(phi3)*(thetad3 + thetad2*Math.cos(phi2) + crd*Math.cos(phi1)*Math.cos(phi2) + thetad1*Math.cos(phi1)*Math.cos(phi2) + phid1*Math.sin(phi2)*Math.sin(theta2) - crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))/40) - Math.sin(phi3)*(41*Math.cos(phi3)*(thetad3 + thetad2*Math.cos(phi2) + crd*Math.cos(phi1)*Math.cos(phi2) + thetad1*Math.cos(phi1)*Math.cos(phi2) + phid1*Math.sin(phi2)*Math.sin(theta2) - crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) - 41*Math.sin(phi3)*(Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2))))) + Math.cos(theta3)*((Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))))/40 - (Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2)))/40) + Math.sin(theta3)*((Math.sin(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))))/40 + (Math.cos(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2)))/40) - (5*Math.sin(phi3)*(10*Math.cos(theta3)*(thetad2*Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(theta2)*(crd + thetad1) - thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2) + phid1*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)*(crd + thetad1)) + 10*Math.sin(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2)*(crd + thetad1) + thetad2*Math.sin(cr + theta1)*Math.cos(theta2) + phid1*Math.cos(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) - phid2*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)*(crd + thetad1) + phid1*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(phi2) + phid2*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 10*thetad3*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*thetad3*Math.cos(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) - 5*phid3*Math.cos(phi3)*(10*Math.cos(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) - 10*Math.sin(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))))*(Math.cos(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(phi3)*(10*Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)) - Math.cos(theta3)*Math.sin(phi3)*(10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 10*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)) - (5*Math.sin(phi3)*(10*Math.cos(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2)*(crd + thetad1) + thetad2*Math.cos(cr + theta1)*Math.sin(theta2) + thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2) - phid1*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)*(crd + thetad1)) - 10*Math.sin(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2)*(crd + thetad1) - thetad2*Math.cos(cr + theta1)*Math.cos(theta2) + phid1*Math.sin(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + phid2*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + phid1*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(phi2) + phid2*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)*(crd + thetad1)) + 10*thetad3*Math.cos(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)) + 10*thetad3*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) - 5*phid3*Math.cos(phi3)*(10*Math.cos(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) - 10*Math.sin(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))))*(Math.cos(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(phi3)*(10*Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)) - Math.cos(theta3)*Math.sin(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) - 10*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)) - (5*Math.sin(phi3)*(10*thetad3*Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - 10*Math.sin(theta3)*(phid1*Math.sin(phi1)*Math.sin(phi2) - phid2*Math.cos(phi1)*Math.cos(phi2) - phid1*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2) + phid2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) + thetad2*Math.cos(phi2)*Math.sin(phi1)*Math.sin(theta2)) + 10*phid1*Math.cos(phi1)*Math.cos(theta3)*Math.sin(theta2) + 10*thetad2*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi1) - 10*thetad3*Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) + 5*phid3*Math.cos(phi3)*(10*Math.sin(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + 10*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2)))*(10*Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi3)*(10*Math.cos(phi1)*Math.sin(phi2) + 10*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + Math.cos(theta3)*Math.sin(phi3)*(10*Math.cos(phi1)*Math.cos(phi2) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) + 10*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - 2*Math.sin(phi3)*Math.sin(theta3)*((phid3*Math.sin(phi3))/40 - Math.sin(phi3)*(41*phid3 + 41*phid2*Math.cos(theta3) + 41*phid1*Math.cos(theta2)*Math.cos(theta3) + 41*thetad2*Math.sin(phi2)*Math.sin(theta3) + 41*crd*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3) + 41*crd*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2) + 41*thetad1*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3) - 41*phid1*Math.cos(phi2)*Math.sin(theta2)*Math.sin(theta3) + 41*thetad1*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2) + 41*crd*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3) + 41*thetad1*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3))) - 2*Math.cos(phi3)*Math.sin(theta3)*(41*phid3*Math.cos(phi3) - Math.cos(phi3)*(phid3/40 + (phid2*Math.cos(theta3))/40 + (phid1*Math.cos(theta2)*Math.cos(theta3))/40 + (thetad2*Math.sin(phi2)*Math.sin(theta3))/40 + (crd*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3))/40 + (crd*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2))/40 + (thetad1*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3))/40 - (phid1*Math.cos(phi2)*Math.sin(theta2)*Math.sin(theta3))/40 + (thetad1*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2))/40 + (crd*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3))/40 + (thetad1*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3))/40))",
        "vars": [
          "cr",
          "crd",
          "phi1",
          "phi2",
          "phi3",
          "phid1",
          "phid2",
          "phid3",
          "theta1",
          "theta2",
          "theta3",
          "thetad1",
          "thetad2",
          "thetad3"
        ]
      },
      {
        "expr": "- (Math.cos(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(phi3)*(10*Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)) - Math.cos(theta3)*Math.sin(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) - 10*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))*(5*Math.cos(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2)*(crd + thetad1) + thetad2*Math.cos(cr + theta1)*Math.sin(theta2) + thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2) - phid1*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)*(crd + thetad1)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2)*(crd + thetad1) - thetad2*Math.cos(cr + theta1)*Math.cos(theta2) + phid1*Math.sin(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + phid2*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + phid1*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(phi2) + phid2*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)*(crd + thetad1)) + 10*thetad3*Math.sin(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)) - 10*thetad3*Math.cos(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) + 5*Math.sin(phi3)*(10*phid2*Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2)*(crd + thetad1) - thetad2*Math.cos(cr + theta1)*Math.cos(theta2) + phid1*Math.sin(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + 10*phid1*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(phi2) - 10*phid2*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2) + 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)*(crd + thetad1)) + 5*phid3*Math.sin(phi3)*(10*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) + 5*phid3*Math.cos(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1))) - (5*Math.cos(phi3)*(10*Math.cos(theta3)*(phid1*Math.sin(phi1)*Math.sin(phi2) - phid2*Math.cos(phi1)*Math.cos(phi2) - phid1*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2) + phid2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) + thetad2*Math.cos(phi2)*Math.sin(phi1)*Math.sin(theta2)) + 10*thetad3*Math.sin(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + 10*phid1*Math.cos(phi1)*Math.sin(theta2)*Math.sin(theta3) + 10*thetad2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3) + 10*thetad3*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2)) + 5*Math.sin(phi3)*(10*phid1*Math.cos(phi2)*Math.sin(phi1) + 10*phid2*Math.cos(phi1)*Math.sin(phi2) + 10*phid1*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2) + 10*phid2*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1) - 10*thetad2*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta2)) - 5*phid3*Math.cos(phi3)*(10*Math.cos(phi1)*Math.cos(phi2) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) + 5*phid3*Math.sin(phi3)*(10*Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - 10*Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)))*(10*Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi3)*(10*Math.cos(phi1)*Math.sin(phi2) + 10*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + Math.cos(theta3)*Math.sin(phi3)*(10*Math.cos(phi1)*Math.cos(phi2) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) + 10*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - (Math.cos(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(phi3)*(10*Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)) - Math.cos(theta3)*Math.sin(phi3)*(10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 10*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))*(5*Math.cos(phi3)*(10*Math.sin(theta3)*(thetad2*Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(theta2)*(crd + thetad1) - thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2) + phid1*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)*(crd + thetad1)) - 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2)*(crd + thetad1) + thetad2*Math.sin(cr + theta1)*Math.cos(theta2) + phid1*Math.cos(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) - phid2*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)*(crd + thetad1) + phid1*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(phi2) + phid2*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 10*thetad3*Math.sin(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)) - 10*thetad3*Math.cos(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) + 5*Math.sin(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2)*(crd + thetad1) + thetad2*Math.sin(cr + theta1)*Math.cos(theta2) + phid1*Math.cos(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + 10*phid2*Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*phid1*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(phi2) + 10*phid2*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)*(crd + thetad1)) + 5*phid3*Math.sin(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) + 5*phid3*Math.cos(phi3)*(10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1))) - 2*Math.cos(phi3)*Math.sin(theta3)*(41*Math.cos(phi3)*(thetad3 + thetad2*Math.cos(phi2) + crd*Math.cos(phi1)*Math.cos(phi2) + thetad1*Math.cos(phi1)*Math.cos(phi2) + phid1*Math.sin(phi2)*Math.sin(theta2) - crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) - 41*Math.sin(phi3)*(Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2)))) - 2*Math.sin(phi3)*Math.sin(theta3)*(41*Math.cos(phi3)*(Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2))) + 41*Math.sin(phi3)*(thetad3 + thetad2*Math.cos(phi2) + crd*Math.cos(phi1)*Math.cos(phi2) + thetad1*Math.cos(phi1)*Math.cos(phi2) + phid1*Math.sin(phi2)*Math.sin(theta2) - crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))",
        "vars": [
          "cr",
          "crd",
          "phi1",
          "phi2",
          "phi3",
          "phid1",
          "phid2",
          "phid3",
          "theta1",
          "theta2",
          "theta3",
          "thetad1",
          "thetad2",
          "thetad3"
        ]
      }
    ],
    [
      {
        "expr": "(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3))*(41*Math.sin(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) + 41*Math.cos(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2))) - (Math.sin(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2))*(41*Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - 41*Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2))) - 2*Math.cos(phi3)*((41*Math.cos(phi3)*(Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2))) + 41*Math.sin(phi3)*(thetad3 + thetad2*Math.cos(phi2) + crd*Math.cos(phi1)*Math.cos(phi2) + thetad1*Math.cos(phi1)*Math.cos(phi2) + phid1*Math.sin(phi2)*Math.sin(theta2) - crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))*(Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2) + Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3)) - (Math.cos(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) + Math.sin(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))*(41*phid3 + 41*phid2*Math.cos(theta3) + 41*phid1*Math.cos(theta2)*Math.cos(theta3) + 41*thetad2*Math.sin(phi2)*Math.sin(theta3) + 41*crd*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3) + 41*crd*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2) + 41*thetad1*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3) - 41*phid1*Math.cos(phi2)*Math.sin(theta2)*Math.sin(theta3) + 41*thetad1*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2) + 41*crd*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3) + 41*thetad1*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3)) + (Math.cos(phi3)*(phid1*Math.cos(phi2)*Math.sin(phi1) + phid2*Math.cos(phi1)*Math.sin(phi2) + phid1*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2) + phid2*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1) - thetad2*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta2)))/40 - (Math.sin(phi3)*(Math.cos(theta3)*(phid1*Math.sin(phi1)*Math.sin(phi2) - phid2*Math.cos(phi1)*Math.cos(phi2) - phid1*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2) + phid2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) + thetad2*Math.cos(phi2)*Math.sin(phi1)*Math.sin(theta2)) + thetad3*Math.sin(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + phid1*Math.cos(phi1)*Math.sin(theta2)*Math.sin(theta3) + thetad2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3) + thetad3*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2)))/40 + (phid3*Math.sin(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))/40 + (phid3*Math.cos(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)))/40) + 2*Math.sin(phi3)*((41*Math.cos(phi3)*(thetad3 + thetad2*Math.cos(phi2) + crd*Math.cos(phi1)*Math.cos(phi2) + thetad1*Math.cos(phi1)*Math.cos(phi2) + phid1*Math.sin(phi2)*Math.sin(theta2) - crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) - 41*Math.sin(phi3)*(Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2))))*(Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2) + Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3)) + (Math.sin(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) - Math.cos(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))*(phid3/40 + (phid2*Math.cos(theta3))/40 + (phid1*Math.cos(theta2)*Math.cos(theta3))/40 + (thetad2*Math.sin(phi2)*Math.sin(theta3))/40 + (crd*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3))/40 + (crd*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2))/40 + (thetad1*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3))/40 - (phid1*Math.cos(phi2)*Math.sin(theta2)*Math.sin(theta3))/40 + (thetad1*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2))/40 + (crd*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3))/40 + (thetad1*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3))/40) - 41*Math.cos(phi3)*(Math.cos(theta3)*(phid1*Math.sin(phi1)*Math.sin(phi2) - phid2*Math.cos(phi1)*Math.cos(phi2) - phid1*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2) + phid2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) + thetad2*Math.cos(phi2)*Math.sin(phi1)*Math.sin(theta2)) + thetad3*Math.sin(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + phid1*Math.cos(phi1)*Math.sin(theta2)*Math.sin(theta3) + thetad2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3) + thetad3*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2)) - 41*Math.sin(phi3)*(phid1*Math.cos(phi2)*Math.sin(phi1) + phid2*Math.cos(phi1)*Math.sin(phi2) + phid1*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2) + phid2*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1) - thetad2*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta2)) + 41*phid3*Math.cos(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) - 41*phid3*Math.sin(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3))) + Math.sin(phi3)*(10*Math.cos(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) - 10*Math.sin(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)))*((61*crd*Math.cos(cr))/20 - 5*Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2)*(crd + thetad1) - 10*thetad2*Math.cos(cr + theta1)*Math.cos(theta2) + 10*phid1*Math.sin(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + 10*thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + (117*crd*Math.sin(cr))/5 - 5*Math.sin(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2)*(crd + thetad1) + thetad2*Math.cos(cr + theta1)*Math.sin(theta2) + thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2) - phid1*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)*(crd + thetad1)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2)*(crd + thetad1) - thetad2*Math.cos(cr + theta1)*Math.cos(theta2) + phid1*Math.sin(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + phid2*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + phid1*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(phi2) + phid2*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)*(crd + thetad1)) + 10*thetad3*Math.sin(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)) - 10*thetad3*Math.cos(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) + 5*Math.cos(phi3)*(10*phid2*Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2)*(crd + thetad1) - thetad2*Math.cos(cr + theta1)*Math.cos(theta2) + phid1*Math.sin(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + 10*phid1*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(phi2) - 10*phid2*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2) + 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)*(crd + thetad1)) - 5*phid3*Math.sin(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 50*Math.cos(cr + theta1)*Math.sin(phi1)*(crd + thetad1) + 50*phid1*Math.sin(cr + theta1)*Math.cos(phi1) + 5*phid2*Math.cos(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 5*phid3*Math.cos(phi3)*(10*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) + 50*phid1*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(phi2) - 50*phid2*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2) + 50*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)*(crd + thetad1)) - Math.sin(phi3)*(10*Math.cos(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) - 10*Math.sin(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)))*(5*Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2)*(crd + thetad1) + 10*thetad2*Math.sin(cr + theta1)*Math.cos(theta2) + 10*phid1*Math.cos(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + 10*thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) - 5*Math.sin(phi3)*(10*Math.sin(theta3)*(thetad2*Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(theta2)*(crd + thetad1) - thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2) + phid1*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)*(crd + thetad1)) - 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2)*(crd + thetad1) + thetad2*Math.sin(cr + theta1)*Math.cos(theta2) + phid1*Math.cos(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) - phid2*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)*(crd + thetad1) + phid1*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(phi2) + phid2*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 10*thetad3*Math.sin(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)) - 10*thetad3*Math.cos(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) - (117*crd*Math.cos(cr))/5 + (61*crd*Math.sin(cr))/20 + 5*Math.cos(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2)*(crd + thetad1) + thetad2*Math.sin(cr + theta1)*Math.cos(theta2) + phid1*Math.cos(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + 10*phid2*Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*phid1*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(phi2) + 10*phid2*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)*(crd + thetad1)) + 50*Math.sin(cr + theta1)*Math.sin(phi1)*(crd + thetad1) - 50*phid1*Math.cos(cr + theta1)*Math.cos(phi1) + 5*phid2*Math.cos(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 5*phid3*Math.cos(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) - 5*phid3*Math.sin(phi3)*(10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) - 50*phid1*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(phi2) + 50*phid2*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2) + 50*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)*(crd + thetad1)) - (phid1*Math.cos(phi2)*Math.sin(phi1))/40 - (phid2*Math.cos(phi1)*Math.sin(phi2))/40 - (phid1*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2))/40 - (phid2*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1))/40 + (thetad2*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta2))/40",
        "vars": [
          "cr",
          "crd",
          "phi1",
          "phi2",
          "phi3",
          "phid1",
          "phid2",
          "phid3",
          "theta1",
          "theta2",
          "theta3",
          "thetad1",
          "thetad2",
          "thetad3"
        ]
      },
      {
        "expr": "Math.sin(phi3)*(10*Math.cos(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) - 10*Math.sin(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)))*(10*crd*Math.sin(cr) + 5*cr*crd*Math.cos(cr)) - Math.sin(phi3)*(10*Math.cos(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) - 10*Math.sin(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)))*(10*crd*Math.cos(cr) - 5*cr*crd*Math.sin(cr))",
        "vars": [
          "cr",
          "crd",
          "phi1",
          "phi2",
          "phi3",
          "theta1",
          "theta2",
          "theta3"
        ]
      },
      {
        "expr": "(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3))*(41*Math.sin(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) + 41*Math.cos(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2))) - (Math.sin(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2))*(41*Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - 41*Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2))) - 2*Math.cos(phi3)*((41*Math.cos(phi3)*(Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2))) + 41*Math.sin(phi3)*(thetad3 + thetad2*Math.cos(phi2) + crd*Math.cos(phi1)*Math.cos(phi2) + thetad1*Math.cos(phi1)*Math.cos(phi2) + phid1*Math.sin(phi2)*Math.sin(theta2) - crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))*(Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2) + Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3)) - (Math.cos(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) + Math.sin(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))*(41*phid3 + 41*phid2*Math.cos(theta3) + 41*phid1*Math.cos(theta2)*Math.cos(theta3) + 41*thetad2*Math.sin(phi2)*Math.sin(theta3) + 41*crd*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3) + 41*crd*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2) + 41*thetad1*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3) - 41*phid1*Math.cos(phi2)*Math.sin(theta2)*Math.sin(theta3) + 41*thetad1*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2) + 41*crd*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3) + 41*thetad1*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3)) + (Math.cos(phi3)*(phid1*Math.cos(phi2)*Math.sin(phi1) + phid2*Math.cos(phi1)*Math.sin(phi2) + phid1*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2) + phid2*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1) - thetad2*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta2)))/40 - (Math.sin(phi3)*(Math.cos(theta3)*(phid1*Math.sin(phi1)*Math.sin(phi2) - phid2*Math.cos(phi1)*Math.cos(phi2) - phid1*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2) + phid2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) + thetad2*Math.cos(phi2)*Math.sin(phi1)*Math.sin(theta2)) + thetad3*Math.sin(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + phid1*Math.cos(phi1)*Math.sin(theta2)*Math.sin(theta3) + thetad2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3) + thetad3*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2)))/40 + (phid3*Math.sin(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))/40 + (phid3*Math.cos(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)))/40) + 2*Math.sin(phi3)*((41*Math.cos(phi3)*(thetad3 + thetad2*Math.cos(phi2) + crd*Math.cos(phi1)*Math.cos(phi2) + thetad1*Math.cos(phi1)*Math.cos(phi2) + phid1*Math.sin(phi2)*Math.sin(theta2) - crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) - 41*Math.sin(phi3)*(Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2))))*(Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2) + Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3)) + (Math.sin(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) - Math.cos(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))*(phid3/40 + (phid2*Math.cos(theta3))/40 + (phid1*Math.cos(theta2)*Math.cos(theta3))/40 + (thetad2*Math.sin(phi2)*Math.sin(theta3))/40 + (crd*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3))/40 + (crd*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2))/40 + (thetad1*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3))/40 - (phid1*Math.cos(phi2)*Math.sin(theta2)*Math.sin(theta3))/40 + (thetad1*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2))/40 + (crd*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3))/40 + (thetad1*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3))/40) - 41*Math.cos(phi3)*(Math.cos(theta3)*(phid1*Math.sin(phi1)*Math.sin(phi2) - phid2*Math.cos(phi1)*Math.cos(phi2) - phid1*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2) + phid2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) + thetad2*Math.cos(phi2)*Math.sin(phi1)*Math.sin(theta2)) + thetad3*Math.sin(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + phid1*Math.cos(phi1)*Math.sin(theta2)*Math.sin(theta3) + thetad2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3) + thetad3*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2)) - 41*Math.sin(phi3)*(phid1*Math.cos(phi2)*Math.sin(phi1) + phid2*Math.cos(phi1)*Math.sin(phi2) + phid1*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2) + phid2*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1) - thetad2*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta2)) + 41*phid3*Math.cos(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) - 41*phid3*Math.sin(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3))) - Math.sin(phi3)*(10*Math.cos(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) - 10*Math.sin(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)))*(5*Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2)*(crd + thetad1) + 10*thetad2*Math.sin(cr + theta1)*Math.cos(theta2) + 10*phid1*Math.cos(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + 10*thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) - 5*Math.sin(phi3)*(10*Math.sin(theta3)*(thetad2*Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(theta2)*(crd + thetad1) - thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2) + phid1*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)*(crd + thetad1)) - 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2)*(crd + thetad1) + thetad2*Math.sin(cr + theta1)*Math.cos(theta2) + phid1*Math.cos(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) - phid2*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)*(crd + thetad1) + phid1*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(phi2) + phid2*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 10*thetad3*Math.sin(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)) - 10*thetad3*Math.cos(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) + 5*Math.cos(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2)*(crd + thetad1) + thetad2*Math.sin(cr + theta1)*Math.cos(theta2) + phid1*Math.cos(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + 10*phid2*Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*phid1*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(phi2) + 10*phid2*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)*(crd + thetad1)) + 50*Math.sin(cr + theta1)*Math.sin(phi1)*(crd + thetad1) - 50*phid1*Math.cos(cr + theta1)*Math.cos(phi1) + 5*phid2*Math.cos(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 5*phid3*Math.cos(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) - 5*phid3*Math.sin(phi3)*(10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) - 50*phid1*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(phi2) + 50*phid2*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2) + 50*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)*(crd + thetad1)) - (phid1*Math.cos(phi2)*Math.sin(phi1))/40 - (phid2*Math.cos(phi1)*Math.sin(phi2))/40 + Math.sin(phi3)*(10*Math.cos(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) - 10*Math.sin(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)))*(5*Math.cos(phi3)*(10*phid2*Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2)*(crd + thetad1) - thetad2*Math.cos(cr + theta1)*Math.cos(theta2) + phid1*Math.sin(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + 10*phid1*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(phi2) - 10*phid2*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2) + 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)*(crd + thetad1)) - 5*Math.sin(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2)*(crd + thetad1) + thetad2*Math.cos(cr + theta1)*Math.sin(theta2) + thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2) - phid1*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)*(crd + thetad1)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2)*(crd + thetad1) - thetad2*Math.cos(cr + theta1)*Math.cos(theta2) + phid1*Math.sin(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + phid2*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + phid1*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(phi2) + phid2*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)*(crd + thetad1)) + 10*thetad3*Math.sin(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)) - 10*thetad3*Math.cos(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) - 5*Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2)*(crd + thetad1) - 10*thetad2*Math.cos(cr + theta1)*Math.cos(theta2) + 10*phid1*Math.sin(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + 10*thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) - 5*phid3*Math.sin(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 50*Math.cos(cr + theta1)*Math.sin(phi1)*(crd + thetad1) + 50*phid1*Math.sin(cr + theta1)*Math.cos(phi1) + 5*phid2*Math.cos(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 5*phid3*Math.cos(phi3)*(10*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) + 50*phid1*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(phi2) - 50*phid2*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2) + 50*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)*(crd + thetad1)) - (phid1*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2))/40 - (phid2*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1))/40 + (thetad2*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta2))/40",
        "vars": [
          "cr",
          "crd",
          "phi1",
          "phi2",
          "phi3",
          "phid1",
          "phid2",
          "phid3",
          "theta1",
          "theta2",
          "theta3",
          "thetad1",
          "thetad2",
          "thetad3"
        ]
      },
      {
        "expr": "2*Math.sin(phi3)*((Math.cos(theta2)*Math.cos(theta3) - Math.cos(phi2)*Math.sin(theta2)*Math.sin(theta3))*(41*Math.cos(phi3)*(thetad3 + thetad2*Math.cos(phi2) + crd*Math.cos(phi1)*Math.cos(phi2) + thetad1*Math.cos(phi1)*Math.cos(phi2) + phid1*Math.sin(phi2)*Math.sin(theta2) - crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) - 41*Math.sin(phi3)*(Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2)))) - (Math.sin(phi3)*(Math.cos(theta2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta3)*Math.sin(theta2)) + Math.cos(phi3)*Math.sin(phi2)*Math.sin(theta2))*(phid3/40 + (phid2*Math.cos(theta3))/40 + (phid1*Math.cos(theta2)*Math.cos(theta3))/40 + (thetad2*Math.sin(phi2)*Math.sin(theta3))/40 + (crd*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3))/40 + (crd*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2))/40 + (thetad1*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3))/40 - (phid1*Math.cos(phi2)*Math.sin(theta2)*Math.sin(theta3))/40 + (thetad1*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2))/40 + (crd*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3))/40 + (thetad1*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3))/40) + 41*Math.cos(phi3)*(thetad2*Math.sin(theta2)*Math.sin(theta3) - thetad3*Math.cos(theta2)*Math.cos(theta3) - thetad2*Math.cos(phi2)*Math.cos(theta2)*Math.cos(theta3) + phid2*Math.cos(theta3)*Math.sin(phi2)*Math.sin(theta2) + thetad3*Math.cos(phi2)*Math.sin(theta2)*Math.sin(theta3)) + 41*phid3*Math.sin(phi3)*(Math.cos(theta2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta3)*Math.sin(theta2)) + 41*phid2*Math.cos(phi2)*Math.sin(phi3)*Math.sin(theta2) + 41*phid3*Math.cos(phi3)*Math.sin(phi2)*Math.sin(theta2) + 41*thetad2*Math.cos(theta2)*Math.sin(phi2)*Math.sin(phi3)) - 2*Math.cos(phi3)*((Math.sin(phi3)*(thetad2*Math.sin(theta2)*Math.sin(theta3) - thetad3*Math.cos(theta2)*Math.cos(theta3) - thetad2*Math.cos(phi2)*Math.cos(theta2)*Math.cos(theta3) + phid2*Math.cos(theta3)*Math.sin(phi2)*Math.sin(theta2) + thetad3*Math.cos(phi2)*Math.sin(theta2)*Math.sin(theta3)))/40 + (Math.cos(phi3)*(Math.cos(theta2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta3)*Math.sin(theta2)) - Math.sin(phi2)*Math.sin(phi3)*Math.sin(theta2))*(41*phid3 + 41*phid2*Math.cos(theta3) + 41*phid1*Math.cos(theta2)*Math.cos(theta3) + 41*thetad2*Math.sin(phi2)*Math.sin(theta3) + 41*crd*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3) + 41*crd*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2) + 41*thetad1*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3) - 41*phid1*Math.cos(phi2)*Math.sin(theta2)*Math.sin(theta3) + 41*thetad1*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2) + 41*crd*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3) + 41*thetad1*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3)) + (Math.cos(theta2)*Math.cos(theta3) - Math.cos(phi2)*Math.sin(theta2)*Math.sin(theta3))*(41*Math.cos(phi3)*(Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2))) + 41*Math.sin(phi3)*(thetad3 + thetad2*Math.cos(phi2) + crd*Math.cos(phi1)*Math.cos(phi2) + thetad1*Math.cos(phi1)*Math.cos(phi2) + phid1*Math.sin(phi2)*Math.sin(theta2) - crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))) - (phid3*Math.cos(phi3)*(Math.cos(theta2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta3)*Math.sin(theta2)))/40 - (phid2*Math.cos(phi2)*Math.cos(phi3)*Math.sin(theta2))/40 - (thetad2*Math.cos(phi3)*Math.cos(theta2)*Math.sin(phi2))/40 + (phid3*Math.sin(phi2)*Math.sin(phi3)*Math.sin(theta2))/40) - (Math.cos(theta2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta3)*Math.sin(theta2))*(41*Math.sin(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) + 41*Math.cos(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2))) - (Math.cos(theta2)*Math.cos(theta3) - Math.cos(phi2)*Math.sin(theta2)*Math.sin(theta3))*(41*Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - 41*Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2))) + Math.sin(phi3)*(10*Math.sin(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + 10*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2))*(5*Math.cos(phi3)*(10*phid2*Math.sin(phi1)*Math.sin(phi2) - 10*phid1*Math.cos(phi1)*Math.cos(phi2) - 10*phid2*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2) + 10*phid1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) + 10*thetad2*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta2)) - 50*phid1*Math.cos(phi1) + 5*Math.sin(phi3)*(10*Math.cos(theta3)*(phid1*Math.cos(phi1)*Math.sin(phi2) + phid2*Math.cos(phi2)*Math.sin(phi1) + phid1*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1) + phid2*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2) + thetad2*Math.cos(phi1)*Math.cos(phi2)*Math.sin(theta2)) - 10*thetad3*Math.sin(theta3)*(Math.sin(phi1)*Math.sin(phi2) - Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2)) + 10*thetad2*Math.cos(phi1)*Math.cos(theta2)*Math.sin(theta3) + 10*thetad3*Math.cos(phi1)*Math.cos(theta3)*Math.sin(theta2) - 10*phid1*Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) + 5*phid3*Math.sin(phi3)*(10*Math.cos(phi2)*Math.sin(phi1) + 10*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2)) - 50*phid1*Math.cos(phi1)*Math.cos(phi2) + 50*phid2*Math.sin(phi1)*Math.sin(phi2) + 5*phid3*Math.cos(phi3)*(10*Math.cos(theta3)*(Math.sin(phi1)*Math.sin(phi2) - Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2)) + 10*Math.cos(phi1)*Math.sin(theta2)*Math.sin(theta3)) - 50*phid2*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2) + 50*phid1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) + 50*thetad2*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta2)) + Math.sin(phi3)*(10*Math.cos(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) - 10*Math.sin(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)))*(5*Math.cos(cr + theta1)*(10*phid1*Math.sin(phi1) + 10*phid1*Math.cos(phi2)*Math.sin(phi1) + 10*phid2*Math.cos(phi1)*Math.sin(phi2) + 10*phid1*Math.cos(phi2)*Math.cos(phi3)*Math.sin(phi1) + 10*phid2*Math.cos(phi1)*Math.cos(phi3)*Math.sin(phi2) + 10*phid3*Math.cos(phi1)*Math.cos(phi2)*Math.sin(phi3) + 10*phid1*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2) + 10*phid2*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1) - 10*thetad2*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta2) + 10*phid1*Math.cos(phi1)*Math.cos(phi3)*Math.cos(theta2)*Math.sin(phi2) + 10*phid2*Math.cos(phi2)*Math.cos(phi3)*Math.cos(theta2)*Math.sin(phi1) + 10*phid2*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta3)*Math.sin(phi3) + 10*phid3*Math.cos(phi1)*Math.cos(phi3)*Math.cos(theta3)*Math.sin(phi2) - 10*phid1*Math.cos(theta3)*Math.sin(phi1)*Math.sin(phi2)*Math.sin(phi3) - 10*phid3*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)*Math.sin(phi3) - 10*phid1*Math.cos(phi1)*Math.sin(phi3)*Math.sin(theta2)*Math.sin(theta3) - 10*thetad2*Math.cos(phi3)*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta2) - 10*phid3*Math.cos(phi3)*Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3) - 10*thetad3*Math.cos(phi1)*Math.sin(phi2)*Math.sin(phi3)*Math.sin(theta3) - 10*thetad2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi3)*Math.sin(theta3) - 10*thetad3*Math.cos(theta3)*Math.sin(phi1)*Math.sin(phi3)*Math.sin(theta2) + 10*phid1*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi3) + 10*phid3*Math.cos(phi2)*Math.cos(phi3)*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi1) - 10*phid2*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi1)*Math.sin(phi2)*Math.sin(phi3) - 10*thetad2*Math.cos(phi2)*Math.cos(theta3)*Math.sin(phi1)*Math.sin(phi3)*Math.sin(theta2) - 10*thetad3*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi3)*Math.sin(theta3)) + 5*Math.sin(cr + theta1)*(crd + thetad1)*(10*Math.cos(phi1) + 10*Math.cos(phi1)*Math.cos(phi2) + 10*Math.cos(phi1)*Math.cos(phi2)*Math.cos(phi3) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 10*Math.cos(phi3)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 10*Math.cos(phi1)*Math.cos(theta3)*Math.sin(phi2)*Math.sin(phi3) + 10*Math.sin(phi1)*Math.sin(phi3)*Math.sin(theta2)*Math.sin(theta3) - 10*Math.cos(phi2)*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi1)*Math.sin(phi3))) - Math.sin(phi3)*(10*Math.cos(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) - 10*Math.sin(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)))*(5*Math.sin(cr + theta1)*(10*phid1*Math.sin(phi1) + 10*phid1*Math.cos(phi2)*Math.sin(phi1) + 10*phid2*Math.cos(phi1)*Math.sin(phi2) + 10*phid1*Math.cos(phi2)*Math.cos(phi3)*Math.sin(phi1) + 10*phid2*Math.cos(phi1)*Math.cos(phi3)*Math.sin(phi2) + 10*phid3*Math.cos(phi1)*Math.cos(phi2)*Math.sin(phi3) + 10*phid1*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2) + 10*phid2*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1) - 10*thetad2*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta2) + 10*phid1*Math.cos(phi1)*Math.cos(phi3)*Math.cos(theta2)*Math.sin(phi2) + 10*phid2*Math.cos(phi2)*Math.cos(phi3)*Math.cos(theta2)*Math.sin(phi1) + 10*phid2*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta3)*Math.sin(phi3) + 10*phid3*Math.cos(phi1)*Math.cos(phi3)*Math.cos(theta3)*Math.sin(phi2) - 10*phid1*Math.cos(theta3)*Math.sin(phi1)*Math.sin(phi2)*Math.sin(phi3) - 10*phid3*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)*Math.sin(phi3) - 10*phid1*Math.cos(phi1)*Math.sin(phi3)*Math.sin(theta2)*Math.sin(theta3) - 10*thetad2*Math.cos(phi3)*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta2) - 10*phid3*Math.cos(phi3)*Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3) - 10*thetad3*Math.cos(phi1)*Math.sin(phi2)*Math.sin(phi3)*Math.sin(theta3) - 10*thetad2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi3)*Math.sin(theta3) - 10*thetad3*Math.cos(theta3)*Math.sin(phi1)*Math.sin(phi3)*Math.sin(theta2) + 10*phid1*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi3) + 10*phid3*Math.cos(phi2)*Math.cos(phi3)*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi1) - 10*phid2*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi1)*Math.sin(phi2)*Math.sin(phi3) - 10*thetad2*Math.cos(phi2)*Math.cos(theta3)*Math.sin(phi1)*Math.sin(phi3)*Math.sin(theta2) - 10*thetad3*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi3)*Math.sin(theta3)) - 5*Math.cos(cr + theta1)*(crd + thetad1)*(10*Math.cos(phi1) + 10*Math.cos(phi1)*Math.cos(phi2) + 10*Math.cos(phi1)*Math.cos(phi2)*Math.cos(phi3) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 10*Math.cos(phi3)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 10*Math.cos(phi1)*Math.cos(theta3)*Math.sin(phi2)*Math.sin(phi3) + 10*Math.sin(phi1)*Math.sin(phi3)*Math.sin(theta2)*Math.sin(theta3) - 10*Math.cos(phi2)*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi1)*Math.sin(phi3))) + (phid2*Math.cos(phi2)*Math.sin(theta2))/40 + (thetad2*Math.cos(theta2)*Math.sin(phi2))/40",
        "vars": [
          "cr",
          "crd",
          "phi1",
          "phi2",
          "phi3",
          "phid1",
          "phid2",
          "phid3",
          "theta1",
          "theta2",
          "theta3",
          "thetad1",
          "thetad2",
          "thetad3"
        ]
      },
      {
        "expr": "Math.sin(phi3)*(10*Math.sin(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + 10*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2))*(5*Math.sin(phi1)*(10*phid2*Math.cos(phi2)*Math.sin(theta2) + 10*thetad2*Math.cos(theta2)*Math.sin(phi2) + 10*phid2*Math.cos(phi2)*Math.cos(phi3)*Math.sin(theta2) + 10*thetad2*Math.cos(phi3)*Math.cos(theta2)*Math.sin(phi2) + 10*phid3*Math.cos(phi3)*Math.cos(theta2)*Math.sin(theta3) + 10*thetad3*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi3) - 10*phid3*Math.sin(phi2)*Math.sin(phi3)*Math.sin(theta2) - 10*thetad2*Math.sin(phi3)*Math.sin(theta2)*Math.sin(theta3) + 10*phid3*Math.cos(phi2)*Math.cos(phi3)*Math.cos(theta3)*Math.sin(theta2) + 10*thetad2*Math.cos(phi2)*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi3) - 10*phid2*Math.cos(theta3)*Math.sin(phi2)*Math.sin(phi3)*Math.sin(theta2) - 10*thetad3*Math.cos(phi2)*Math.sin(phi3)*Math.sin(theta2)*Math.sin(theta3)) + 5*phid1*Math.cos(phi1)*(10*Math.sin(phi2)*Math.sin(theta2) + 10*Math.cos(theta2)*Math.sin(phi3)*Math.sin(theta3) + 10*Math.cos(phi3)*Math.sin(phi2)*Math.sin(theta2) + 10*Math.cos(phi2)*Math.cos(theta3)*Math.sin(phi3)*Math.sin(theta2))) - 2*Math.cos(phi3)*((phid2*Math.cos(phi3)*Math.sin(phi2))/40 - (Math.cos(phi2)*Math.sin(phi3) + Math.cos(phi3)*Math.cos(theta3)*Math.sin(phi2))*(41*phid3 + 41*phid2*Math.cos(theta3) + 41*phid1*Math.cos(theta2)*Math.cos(theta3) + 41*thetad2*Math.sin(phi2)*Math.sin(theta3) + 41*crd*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3) + 41*crd*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2) + 41*thetad1*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3) - 41*phid1*Math.cos(phi2)*Math.sin(theta2)*Math.sin(theta3) + 41*thetad1*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2) + 41*crd*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3) + 41*thetad1*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3)) + (phid3*Math.cos(phi2)*Math.sin(phi3))/40 + Math.sin(phi2)*Math.sin(theta3)*(41*Math.cos(phi3)*(Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2))) + 41*Math.sin(phi3)*(thetad3 + thetad2*Math.cos(phi2) + crd*Math.cos(phi1)*Math.cos(phi2) + thetad1*Math.cos(phi1)*Math.cos(phi2) + phid1*Math.sin(phi2)*Math.sin(theta2) - crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))) + (phid2*Math.cos(phi2)*Math.cos(theta3)*Math.sin(phi3))/40 + (phid3*Math.cos(phi3)*Math.cos(theta3)*Math.sin(phi2))/40 - (thetad3*Math.sin(phi2)*Math.sin(phi3)*Math.sin(theta3))/40) - 2*Math.sin(phi3)*((Math.cos(phi2)*Math.cos(phi3) - Math.cos(theta3)*Math.sin(phi2)*Math.sin(phi3))*(phid3/40 + (phid2*Math.cos(theta3))/40 + (phid1*Math.cos(theta2)*Math.cos(theta3))/40 + (thetad2*Math.sin(phi2)*Math.sin(theta3))/40 + (crd*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3))/40 + (crd*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2))/40 + (thetad1*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3))/40 - (phid1*Math.cos(phi2)*Math.sin(theta2)*Math.sin(theta3))/40 + (thetad1*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2))/40 + (crd*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3))/40 + (thetad1*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3))/40) - 41*phid3*Math.cos(phi2)*Math.cos(phi3) + 41*phid2*Math.sin(phi2)*Math.sin(phi3) - Math.sin(phi2)*Math.sin(theta3)*(41*Math.cos(phi3)*(thetad3 + thetad2*Math.cos(phi2) + crd*Math.cos(phi1)*Math.cos(phi2) + thetad1*Math.cos(phi1)*Math.cos(phi2) + phid1*Math.sin(phi2)*Math.sin(theta2) - crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) - 41*Math.sin(phi3)*(Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2)))) - 41*phid2*Math.cos(phi2)*Math.cos(phi3)*Math.cos(theta3) + 41*phid3*Math.cos(theta3)*Math.sin(phi2)*Math.sin(phi3) + 41*thetad3*Math.cos(phi3)*Math.sin(phi2)*Math.sin(theta3)) - Math.sin(phi2)*Math.sin(theta3)*(41*Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - 41*Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2))) - (phid2*Math.sin(phi2))/40 - Math.sin(phi3)*(10*Math.cos(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) - 10*Math.sin(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)))*(5*Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.cos(theta2)*(crd + thetad1) + 10*thetad2*Math.cos(cr + theta1)*Math.sin(theta2) + 10*thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2) - 10*phid1*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(theta2) + 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)*(crd + thetad1)) + 5*Math.sin(phi3)*(10*Math.cos(phi2)*Math.cos(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2)*(crd + thetad1) + thetad2*Math.cos(cr + theta1)*Math.sin(theta2) + thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2) - phid1*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)*(crd + thetad1)) - 10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.sin(theta2)*(crd + thetad1) - thetad2*Math.cos(cr + theta1)*Math.cos(theta2) + phid1*Math.sin(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + 10*thetad3*Math.cos(theta3)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*phid2*Math.cos(theta3)*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*thetad3*Math.cos(phi2)*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) + 5*Math.cos(phi3)*Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.cos(theta2)*(crd + thetad1) + 10*thetad2*Math.cos(cr + theta1)*Math.sin(theta2) + 10*thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2) - 10*phid1*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(theta2) + 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)*(crd + thetad1)) + 5*phid3*Math.cos(phi3)*(10*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(phi2)*Math.cos(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) - 5*phid2*Math.cos(phi2)*(10*Math.cos(cr + theta1)*Math.cos(theta2) - 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) - 5*phid2*Math.cos(phi2)*Math.cos(phi3)*(10*Math.cos(cr + theta1)*Math.cos(theta2) - 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 5*phid3*Math.sin(phi2)*Math.sin(phi3)*(10*Math.cos(cr + theta1)*Math.cos(theta2) - 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) + Math.cos(theta3)*Math.sin(phi2)*(41*Math.sin(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) + 41*Math.cos(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2))) - Math.sin(phi3)*(10*Math.cos(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) - 10*Math.sin(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)))*(5*Math.sin(phi2)*(10*thetad2*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(theta2)*(crd + thetad1) - 10*thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2) + 10*phid1*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)*(crd + thetad1)) + 5*Math.sin(phi3)*(10*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.sin(theta2)*(crd + thetad1) + thetad2*Math.sin(cr + theta1)*Math.cos(theta2) + phid1*Math.cos(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + 10*Math.cos(phi2)*Math.cos(theta3)*(thetad2*Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(theta2)*(crd + thetad1) - thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2) + phid1*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)*(crd + thetad1)) + 10*thetad3*Math.cos(theta3)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*phid2*Math.cos(theta3)*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*thetad3*Math.cos(phi2)*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) + 5*Math.cos(phi3)*Math.sin(phi2)*(10*thetad2*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(theta2)*(crd + thetad1) - 10*thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2) + 10*phid1*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)*(crd + thetad1)) + 5*phid3*Math.cos(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(phi2)*Math.cos(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) - 5*phid2*Math.cos(phi2)*(10*Math.sin(cr + theta1)*Math.cos(theta2) + 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) - 5*phid2*Math.cos(phi2)*Math.cos(phi3)*(10*Math.sin(cr + theta1)*Math.cos(theta2) + 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 5*phid3*Math.sin(phi2)*Math.sin(phi3)*(10*Math.sin(cr + theta1)*Math.cos(theta2) + 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)))",
        "vars": [
          "cr",
          "crd",
          "phi1",
          "phi2",
          "phi3",
          "phid1",
          "phid2",
          "phid3",
          "theta1",
          "theta2",
          "theta3",
          "thetad1",
          "thetad2",
          "thetad3"
        ]
      },
      {
        "expr": "2*Math.sin(phi3)*(Math.cos(theta3)*(41*Math.cos(phi3)*(thetad3 + thetad2*Math.cos(phi2) + crd*Math.cos(phi1)*Math.cos(phi2) + thetad1*Math.cos(phi1)*Math.cos(phi2) + phid1*Math.sin(phi2)*Math.sin(theta2) - crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) - 41*Math.sin(phi3)*(Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2)))) - 41*thetad3*Math.cos(phi3)*Math.cos(theta3) + 41*phid3*Math.sin(phi3)*Math.sin(theta3) - Math.sin(phi3)*Math.sin(theta3)*(phid3/40 + (phid2*Math.cos(theta3))/40 + (phid1*Math.cos(theta2)*Math.cos(theta3))/40 + (thetad2*Math.sin(phi2)*Math.sin(theta3))/40 + (crd*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3))/40 + (crd*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2))/40 + (thetad1*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3))/40 - (phid1*Math.cos(phi2)*Math.sin(theta2)*Math.sin(theta3))/40 + (thetad1*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2))/40 + (crd*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3))/40 + (thetad1*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3))/40)) - Math.sin(theta3)*(41*Math.sin(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) + 41*Math.cos(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2))) - 2*Math.cos(phi3)*(Math.cos(theta3)*(41*Math.cos(phi3)*(Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2))) + 41*Math.sin(phi3)*(thetad3 + thetad2*Math.cos(phi2) + crd*Math.cos(phi1)*Math.cos(phi2) + thetad1*Math.cos(phi1)*Math.cos(phi2) + phid1*Math.sin(phi2)*Math.sin(theta2) - crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))) - (phid3*Math.cos(phi3)*Math.sin(theta3))/40 - (thetad3*Math.cos(theta3)*Math.sin(phi3))/40 + Math.cos(phi3)*Math.sin(theta3)*(41*phid3 + 41*phid2*Math.cos(theta3) + 41*phid1*Math.cos(theta2)*Math.cos(theta3) + 41*thetad2*Math.sin(phi2)*Math.sin(theta3) + 41*crd*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3) + 41*crd*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2) + 41*thetad1*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3) - 41*phid1*Math.cos(phi2)*Math.sin(theta2)*Math.sin(theta3) + 41*thetad1*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2) + 41*crd*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3) + 41*thetad1*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3))) - Math.cos(theta3)*(41*Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - 41*Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2))) + Math.sin(phi3)*(10*Math.cos(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) - 10*Math.sin(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)))*(5*Math.cos(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2)*(crd + thetad1) + 10*thetad2*Math.sin(cr + theta1)*Math.cos(theta2) + 10*phid1*Math.cos(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + 10*thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + 5*Math.cos(phi3)*(10*Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2)*(crd + thetad1) + thetad2*Math.sin(cr + theta1)*Math.cos(theta2) + phid1*Math.cos(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) - 10*phid2*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)*(crd + thetad1) + 10*phid1*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(phi2) + 10*phid2*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) - 5*Math.cos(theta3)*Math.sin(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2)*(crd + thetad1) + thetad2*Math.sin(cr + theta1)*Math.cos(theta2) + phid1*Math.cos(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + 10*phid2*Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*phid1*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(phi2) + 10*phid2*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)*(crd + thetad1)) - 5*phid2*Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 5*phid3*Math.sin(phi3)*(10*Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)) - 50*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)*(crd + thetad1) + 50*phid1*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(phi2) + 50*phid2*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1) - 5*phid3*Math.cos(phi3)*Math.cos(theta3)*(10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 5*thetad3*Math.sin(phi3)*Math.sin(theta3)*(10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1))) + Math.sin(phi3)*(10*Math.sin(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + 10*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2))*(5*Math.cos(phi3)*(10*phid1*Math.sin(phi1)*Math.sin(phi2) - 10*phid2*Math.cos(phi1)*Math.cos(phi2) - 10*phid1*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2) + 10*phid2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) + 10*thetad2*Math.cos(phi2)*Math.sin(phi1)*Math.sin(theta2)) + 5*phid3*Math.sin(phi3)*(10*Math.cos(phi1)*Math.sin(phi2) + 10*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - 50*phid2*Math.cos(phi1)*Math.cos(phi2) + 50*phid1*Math.sin(phi1)*Math.sin(phi2) + 5*Math.cos(theta3)*Math.sin(phi3)*(10*phid1*Math.cos(phi2)*Math.sin(phi1) + 10*phid2*Math.cos(phi1)*Math.sin(phi2) + 10*phid1*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2) + 10*phid2*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1) - 10*thetad2*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta2)) + 5*thetad3*Math.sin(phi3)*Math.sin(theta3)*(10*Math.cos(phi1)*Math.cos(phi2) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) - 50*phid1*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2) + 50*phid2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) + 50*thetad2*Math.cos(phi2)*Math.sin(phi1)*Math.sin(theta2) - 5*phid3*Math.cos(phi3)*Math.cos(theta3)*(10*Math.cos(phi1)*Math.cos(phi2) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))) - Math.sin(phi3)*(10*Math.cos(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) - 10*Math.sin(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)))*(5*Math.cos(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2)*(crd + thetad1) - 10*thetad2*Math.cos(cr + theta1)*Math.cos(theta2) + 10*phid1*Math.sin(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + 10*thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + 5*Math.cos(phi3)*(10*Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2)*(crd + thetad1) - thetad2*Math.cos(cr + theta1)*Math.cos(theta2) + phid1*Math.sin(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + 10*phid2*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*phid1*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(phi2) + 10*phid2*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1) + 10*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)*(crd + thetad1)) + 5*phid3*Math.sin(phi3)*(10*Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)) + 5*phid2*Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 5*Math.cos(theta3)*Math.sin(phi3)*(10*phid2*Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2)*(crd + thetad1) - thetad2*Math.cos(cr + theta1)*Math.cos(theta2) + phid1*Math.sin(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + 10*phid1*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(phi2) - 10*phid2*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2) + 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)*(crd + thetad1)) + 50*phid1*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(phi2) + 50*phid2*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1) + 5*phid3*Math.cos(phi3)*Math.cos(theta3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 50*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)*(crd + thetad1) - 5*thetad3*Math.sin(phi3)*Math.sin(theta3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)))",
        "vars": [
          "cr",
          "crd",
          "phi1",
          "phi2",
          "phi3",
          "phid1",
          "phid2",
          "phid3",
          "theta1",
          "theta2",
          "theta3",
          "thetad1",
          "thetad2",
          "thetad3"
        ]
      },
      {
        "expr": "2*Math.sin(phi3)*(41*phid3*Math.cos(phi3) - Math.cos(phi3)*(phid3/40 + (phid2*Math.cos(theta3))/40 + (phid1*Math.cos(theta2)*Math.cos(theta3))/40 + (thetad2*Math.sin(phi2)*Math.sin(theta3))/40 + (crd*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3))/40 + (crd*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2))/40 + (thetad1*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3))/40 - (phid1*Math.cos(phi2)*Math.sin(theta2)*Math.sin(theta3))/40 + (thetad1*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2))/40 + (crd*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3))/40 + (thetad1*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3))/40)) - 2*Math.cos(phi3)*((phid3*Math.sin(phi3))/40 - Math.sin(phi3)*(41*phid3 + 41*phid2*Math.cos(theta3) + 41*phid1*Math.cos(theta2)*Math.cos(theta3) + 41*thetad2*Math.sin(phi2)*Math.sin(theta3) + 41*crd*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3) + 41*crd*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2) + 41*thetad1*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3) - 41*phid1*Math.cos(phi2)*Math.sin(theta2)*Math.sin(theta3) + 41*thetad1*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2) + 41*crd*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3) + 41*thetad1*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3))) - Math.sin(phi3)*(10*Math.cos(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) - 10*Math.sin(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)))*(5*Math.sin(phi3)*(10*Math.cos(theta3)*(thetad2*Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(theta2)*(crd + thetad1) - thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2) + phid1*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)*(crd + thetad1)) + 10*Math.sin(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2)*(crd + thetad1) + thetad2*Math.sin(cr + theta1)*Math.cos(theta2) + phid1*Math.cos(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) - phid2*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)*(crd + thetad1) + phid1*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(phi2) + phid2*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 10*thetad3*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*thetad3*Math.cos(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) - 5*phid3*Math.cos(phi3)*(10*Math.cos(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) - 10*Math.sin(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)))) + Math.sin(phi3)*(10*Math.sin(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + 10*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2))*(5*Math.sin(phi3)*(10*thetad3*Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - 10*Math.sin(theta3)*(phid1*Math.sin(phi1)*Math.sin(phi2) - phid2*Math.cos(phi1)*Math.cos(phi2) - phid1*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2) + phid2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) + thetad2*Math.cos(phi2)*Math.sin(phi1)*Math.sin(theta2)) + 10*phid1*Math.cos(phi1)*Math.cos(theta3)*Math.sin(theta2) + 10*thetad2*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi1) - 10*thetad3*Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) + 5*phid3*Math.cos(phi3)*(10*Math.sin(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + 10*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2))) - Math.sin(phi3)*(10*Math.cos(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) - 10*Math.sin(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)))*(5*Math.sin(phi3)*(10*Math.cos(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2)*(crd + thetad1) + thetad2*Math.cos(cr + theta1)*Math.sin(theta2) + thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2) - phid1*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)*(crd + thetad1)) - 10*Math.sin(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2)*(crd + thetad1) - thetad2*Math.cos(cr + theta1)*Math.cos(theta2) + phid1*Math.sin(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + phid2*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + phid1*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(phi2) + phid2*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)*(crd + thetad1)) + 10*thetad3*Math.cos(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)) + 10*thetad3*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) - 5*phid3*Math.cos(phi3)*(10*Math.cos(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) - 10*Math.sin(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))))",
        "vars": [
          "cr",
          "crd",
          "phi1",
          "phi2",
          "phi3",
          "phid1",
          "phid2",
          "phid3",
          "theta1",
          "theta2",
          "theta3",
          "thetad1",
          "thetad2",
          "thetad3"
        ]
      },
      {
        "expr": "2*Math.sin(phi3)*(41*Math.cos(phi3)*(thetad3 + thetad2*Math.cos(phi2) + crd*Math.cos(phi1)*Math.cos(phi2) + thetad1*Math.cos(phi1)*Math.cos(phi2) + phid1*Math.sin(phi2)*Math.sin(theta2) - crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) - 41*Math.sin(phi3)*(Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2)))) - 2*Math.cos(phi3)*(41*Math.cos(phi3)*(Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2))) + 41*Math.sin(phi3)*(thetad3 + thetad2*Math.cos(phi2) + crd*Math.cos(phi1)*Math.cos(phi2) + thetad1*Math.cos(phi1)*Math.cos(phi2) + phid1*Math.sin(phi2)*Math.sin(theta2) - crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))) - Math.sin(phi3)*(10*Math.cos(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) - 10*Math.sin(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)))*(5*Math.cos(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2)*(crd + thetad1) + thetad2*Math.cos(cr + theta1)*Math.sin(theta2) + thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2) - phid1*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)*(crd + thetad1)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2)*(crd + thetad1) - thetad2*Math.cos(cr + theta1)*Math.cos(theta2) + phid1*Math.sin(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + phid2*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + phid1*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(phi2) + phid2*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)*(crd + thetad1)) + 10*thetad3*Math.sin(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)) - 10*thetad3*Math.cos(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) + 5*Math.sin(phi3)*(10*phid2*Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2)*(crd + thetad1) - thetad2*Math.cos(cr + theta1)*Math.cos(theta2) + phid1*Math.sin(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + 10*phid1*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(phi2) - 10*phid2*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2) + 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)*(crd + thetad1)) + 5*phid3*Math.sin(phi3)*(10*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) + 5*phid3*Math.cos(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1))) + Math.sin(phi3)*(10*Math.sin(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + 10*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2))*(5*Math.cos(phi3)*(10*Math.cos(theta3)*(phid1*Math.sin(phi1)*Math.sin(phi2) - phid2*Math.cos(phi1)*Math.cos(phi2) - phid1*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2) + phid2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) + thetad2*Math.cos(phi2)*Math.sin(phi1)*Math.sin(theta2)) + 10*thetad3*Math.sin(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + 10*phid1*Math.cos(phi1)*Math.sin(theta2)*Math.sin(theta3) + 10*thetad2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3) + 10*thetad3*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2)) + 5*Math.sin(phi3)*(10*phid1*Math.cos(phi2)*Math.sin(phi1) + 10*phid2*Math.cos(phi1)*Math.sin(phi2) + 10*phid1*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2) + 10*phid2*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1) - 10*thetad2*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta2)) - 5*phid3*Math.cos(phi3)*(10*Math.cos(phi1)*Math.cos(phi2) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) + 5*phid3*Math.sin(phi3)*(10*Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - 10*Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3))) - Math.sin(phi3)*(10*Math.cos(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) - 10*Math.sin(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)))*(5*Math.cos(phi3)*(10*Math.sin(theta3)*(thetad2*Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(theta2)*(crd + thetad1) - thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2) + phid1*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)*(crd + thetad1)) - 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2)*(crd + thetad1) + thetad2*Math.sin(cr + theta1)*Math.cos(theta2) + phid1*Math.cos(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) - phid2*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)*(crd + thetad1) + phid1*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(phi2) + phid2*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 10*thetad3*Math.sin(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)) - 10*thetad3*Math.cos(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) + 5*Math.sin(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2)*(crd + thetad1) + thetad2*Math.sin(cr + theta1)*Math.cos(theta2) + phid1*Math.cos(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + 10*phid2*Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*phid1*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(phi2) + 10*phid2*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)*(crd + thetad1)) + 5*phid3*Math.sin(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) + 5*phid3*Math.cos(phi3)*(10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)))",
        "vars": [
          "cr",
          "crd",
          "phi1",
          "phi2",
          "phi3",
          "phid1",
          "phid2",
          "phid3",
          "theta1",
          "theta2",
          "theta3",
          "thetad1",
          "thetad2",
          "thetad3"
        ]
      }
    ],
    [
      {
        "expr": "(Math.cos(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) - Math.sin(phi3)*(10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)))*((61*crd*Math.cos(cr))/20 - 5*Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2)*(crd + thetad1) - 10*thetad2*Math.cos(cr + theta1)*Math.cos(theta2) + 10*phid1*Math.sin(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + 10*thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + (117*crd*Math.sin(cr))/5 - 5*Math.sin(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2)*(crd + thetad1) + thetad2*Math.cos(cr + theta1)*Math.sin(theta2) + thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2) - phid1*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)*(crd + thetad1)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2)*(crd + thetad1) - thetad2*Math.cos(cr + theta1)*Math.cos(theta2) + phid1*Math.sin(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + phid2*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + phid1*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(phi2) + phid2*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)*(crd + thetad1)) + 10*thetad3*Math.sin(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)) - 10*thetad3*Math.cos(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) + 5*Math.cos(phi3)*(10*phid2*Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2)*(crd + thetad1) - thetad2*Math.cos(cr + theta1)*Math.cos(theta2) + phid1*Math.sin(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + 10*phid1*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(phi2) - 10*phid2*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2) + 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)*(crd + thetad1)) - 5*phid3*Math.sin(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 50*Math.cos(cr + theta1)*Math.sin(phi1)*(crd + thetad1) + 50*phid1*Math.sin(cr + theta1)*Math.cos(phi1) + 5*phid2*Math.cos(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 5*phid3*Math.cos(phi3)*(10*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) + 50*phid1*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(phi2) - 50*phid2*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2) + 50*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)*(crd + thetad1)) - 2*(Math.sin(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) - Math.cos(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))*((Math.cos(phi3)*(Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2))))/40 + (Math.sin(phi3)*(thetad3 + thetad2*Math.cos(phi2) + crd*Math.cos(phi1)*Math.cos(phi2) + thetad1*Math.cos(phi1)*Math.cos(phi2) + phid1*Math.sin(phi2)*Math.sin(theta2) - crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))/40) - 2*(Math.cos(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) + Math.sin(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))*(41*Math.cos(phi3)*(thetad3 + thetad2*Math.cos(phi2) + crd*Math.cos(phi1)*Math.cos(phi2) + thetad1*Math.cos(phi1)*Math.cos(phi2) + phid1*Math.sin(phi2)*Math.sin(theta2) - crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) - 41*Math.sin(phi3)*(Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2)))) - (Math.cos(phi3)*(10*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) - Math.sin(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)))*(5*Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2)*(crd + thetad1) + 10*thetad2*Math.sin(cr + theta1)*Math.cos(theta2) + 10*phid1*Math.cos(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + 10*thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) - 5*Math.sin(phi3)*(10*Math.sin(theta3)*(thetad2*Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(theta2)*(crd + thetad1) - thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2) + phid1*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)*(crd + thetad1)) - 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2)*(crd + thetad1) + thetad2*Math.sin(cr + theta1)*Math.cos(theta2) + phid1*Math.cos(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) - phid2*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)*(crd + thetad1) + phid1*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(phi2) + phid2*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 10*thetad3*Math.sin(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)) - 10*thetad3*Math.cos(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) - (117*crd*Math.cos(cr))/5 + (61*crd*Math.sin(cr))/20 + 5*Math.cos(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2)*(crd + thetad1) + thetad2*Math.sin(cr + theta1)*Math.cos(theta2) + phid1*Math.cos(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + 10*phid2*Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*phid1*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(phi2) + 10*phid2*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)*(crd + thetad1)) + 50*Math.sin(cr + theta1)*Math.sin(phi1)*(crd + thetad1) - 50*phid1*Math.cos(cr + theta1)*Math.cos(phi1) + 5*phid2*Math.cos(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 5*phid3*Math.cos(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) - 5*phid3*Math.sin(phi3)*(10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) - 50*phid1*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(phi2) + 50*phid2*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2) + 50*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)*(crd + thetad1)) + 82*phid2*Math.cos(phi1)*Math.cos(phi2)*Math.sin(theta3) + 82*phid1*Math.cos(phi1)*Math.cos(theta3)*Math.sin(theta2) + 82*thetad3*Math.cos(phi1)*Math.cos(theta3)*Math.sin(phi2) + 82*thetad2*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi1) - 82*phid1*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta3) - 82*thetad3*Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3) + 82*phid1*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2)*Math.sin(theta3) + 82*thetad3*Math.cos(phi2)*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi1) - 82*phid2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta3) - 82*thetad2*Math.cos(phi2)*Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)",
        "vars": [
          "cr",
          "crd",
          "phi1",
          "phi2",
          "phi3",
          "phid1",
          "phid2",
          "phid3",
          "theta1",
          "theta2",
          "theta3",
          "thetad1",
          "thetad2",
          "thetad3"
        ]
      },
      {
        "expr": "(Math.cos(phi3)*(10*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) - Math.sin(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)))*(10*crd*Math.sin(cr) + 5*cr*crd*Math.cos(cr)) - (Math.cos(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) - Math.sin(phi3)*(10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)))*(10*crd*Math.cos(cr) - 5*cr*crd*Math.sin(cr))",
        "vars": [
          "cr",
          "crd",
          "phi1",
          "phi2",
          "phi3",
          "theta1",
          "theta2",
          "theta3"
        ]
      },
      {
        "expr": "(Math.cos(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) - Math.sin(phi3)*(10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)))*(5*Math.cos(phi3)*(10*phid2*Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2)*(crd + thetad1) - thetad2*Math.cos(cr + theta1)*Math.cos(theta2) + phid1*Math.sin(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + 10*phid1*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(phi2) - 10*phid2*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2) + 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)*(crd + thetad1)) - 5*Math.sin(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2)*(crd + thetad1) + thetad2*Math.cos(cr + theta1)*Math.sin(theta2) + thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2) - phid1*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)*(crd + thetad1)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2)*(crd + thetad1) - thetad2*Math.cos(cr + theta1)*Math.cos(theta2) + phid1*Math.sin(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + phid2*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + phid1*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(phi2) + phid2*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)*(crd + thetad1)) + 10*thetad3*Math.sin(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)) - 10*thetad3*Math.cos(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) - 5*Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2)*(crd + thetad1) - 10*thetad2*Math.cos(cr + theta1)*Math.cos(theta2) + 10*phid1*Math.sin(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + 10*thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) - 5*phid3*Math.sin(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 50*Math.cos(cr + theta1)*Math.sin(phi1)*(crd + thetad1) + 50*phid1*Math.sin(cr + theta1)*Math.cos(phi1) + 5*phid2*Math.cos(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 5*phid3*Math.cos(phi3)*(10*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) + 50*phid1*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(phi2) - 50*phid2*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2) + 50*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)*(crd + thetad1)) - 2*(Math.sin(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) - Math.cos(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))*((Math.cos(phi3)*(Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2))))/40 + (Math.sin(phi3)*(thetad3 + thetad2*Math.cos(phi2) + crd*Math.cos(phi1)*Math.cos(phi2) + thetad1*Math.cos(phi1)*Math.cos(phi2) + phid1*Math.sin(phi2)*Math.sin(theta2) - crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))/40) - 2*(Math.cos(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) + Math.sin(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))*(41*Math.cos(phi3)*(thetad3 + thetad2*Math.cos(phi2) + crd*Math.cos(phi1)*Math.cos(phi2) + thetad1*Math.cos(phi1)*Math.cos(phi2) + phid1*Math.sin(phi2)*Math.sin(theta2) - crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) - 41*Math.sin(phi3)*(Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2)))) - (Math.cos(phi3)*(10*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) - Math.sin(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)))*(5*Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2)*(crd + thetad1) + 10*thetad2*Math.sin(cr + theta1)*Math.cos(theta2) + 10*phid1*Math.cos(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + 10*thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) - 5*Math.sin(phi3)*(10*Math.sin(theta3)*(thetad2*Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(theta2)*(crd + thetad1) - thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2) + phid1*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)*(crd + thetad1)) - 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2)*(crd + thetad1) + thetad2*Math.sin(cr + theta1)*Math.cos(theta2) + phid1*Math.cos(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) - phid2*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)*(crd + thetad1) + phid1*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(phi2) + phid2*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 10*thetad3*Math.sin(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)) - 10*thetad3*Math.cos(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) + 5*Math.cos(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2)*(crd + thetad1) + thetad2*Math.sin(cr + theta1)*Math.cos(theta2) + phid1*Math.cos(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + 10*phid2*Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*phid1*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(phi2) + 10*phid2*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)*(crd + thetad1)) + 50*Math.sin(cr + theta1)*Math.sin(phi1)*(crd + thetad1) - 50*phid1*Math.cos(cr + theta1)*Math.cos(phi1) + 5*phid2*Math.cos(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 5*phid3*Math.cos(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) - 5*phid3*Math.sin(phi3)*(10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) - 50*phid1*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(phi2) + 50*phid2*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2) + 50*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)*(crd + thetad1)) + 82*phid2*Math.cos(phi1)*Math.cos(phi2)*Math.sin(theta3) + 82*phid1*Math.cos(phi1)*Math.cos(theta3)*Math.sin(theta2) + 82*thetad3*Math.cos(phi1)*Math.cos(theta3)*Math.sin(phi2) + 82*thetad2*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi1) - 82*phid1*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta3) - 82*thetad3*Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3) + 82*phid1*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2)*Math.sin(theta3) + 82*thetad3*Math.cos(phi2)*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi1) - 82*phid2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta3) - 82*thetad2*Math.cos(phi2)*Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)",
        "vars": [
          "cr",
          "crd",
          "phi1",
          "phi2",
          "phi3",
          "phid1",
          "phid2",
          "phid3",
          "theta1",
          "theta2",
          "theta3",
          "thetad1",
          "thetad2",
          "thetad3"
        ]
      },
      {
        "expr": "(Math.cos(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) - Math.sin(phi3)*(10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)))*(5*Math.cos(cr + theta1)*(10*phid1*Math.sin(phi1) + 10*phid1*Math.cos(phi2)*Math.sin(phi1) + 10*phid2*Math.cos(phi1)*Math.sin(phi2) + 10*phid1*Math.cos(phi2)*Math.cos(phi3)*Math.sin(phi1) + 10*phid2*Math.cos(phi1)*Math.cos(phi3)*Math.sin(phi2) + 10*phid3*Math.cos(phi1)*Math.cos(phi2)*Math.sin(phi3) + 10*phid1*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2) + 10*phid2*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1) - 10*thetad2*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta2) + 10*phid1*Math.cos(phi1)*Math.cos(phi3)*Math.cos(theta2)*Math.sin(phi2) + 10*phid2*Math.cos(phi2)*Math.cos(phi3)*Math.cos(theta2)*Math.sin(phi1) + 10*phid2*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta3)*Math.sin(phi3) + 10*phid3*Math.cos(phi1)*Math.cos(phi3)*Math.cos(theta3)*Math.sin(phi2) - 10*phid1*Math.cos(theta3)*Math.sin(phi1)*Math.sin(phi2)*Math.sin(phi3) - 10*phid3*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)*Math.sin(phi3) - 10*phid1*Math.cos(phi1)*Math.sin(phi3)*Math.sin(theta2)*Math.sin(theta3) - 10*thetad2*Math.cos(phi3)*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta2) - 10*phid3*Math.cos(phi3)*Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3) - 10*thetad3*Math.cos(phi1)*Math.sin(phi2)*Math.sin(phi3)*Math.sin(theta3) - 10*thetad2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi3)*Math.sin(theta3) - 10*thetad3*Math.cos(theta3)*Math.sin(phi1)*Math.sin(phi3)*Math.sin(theta2) + 10*phid1*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi3) + 10*phid3*Math.cos(phi2)*Math.cos(phi3)*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi1) - 10*phid2*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi1)*Math.sin(phi2)*Math.sin(phi3) - 10*thetad2*Math.cos(phi2)*Math.cos(theta3)*Math.sin(phi1)*Math.sin(phi3)*Math.sin(theta2) - 10*thetad3*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi3)*Math.sin(theta3)) + 5*Math.sin(cr + theta1)*(crd + thetad1)*(10*Math.cos(phi1) + 10*Math.cos(phi1)*Math.cos(phi2) + 10*Math.cos(phi1)*Math.cos(phi2)*Math.cos(phi3) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 10*Math.cos(phi3)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 10*Math.cos(phi1)*Math.cos(theta3)*Math.sin(phi2)*Math.sin(phi3) + 10*Math.sin(phi1)*Math.sin(phi3)*Math.sin(theta2)*Math.sin(theta3) - 10*Math.cos(phi2)*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi1)*Math.sin(phi3))) - (Math.cos(phi3)*(10*Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - 10*Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) + Math.sin(phi3)*(10*Math.cos(phi1)*Math.cos(phi2) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))*(5*Math.cos(phi3)*(10*phid2*Math.sin(phi1)*Math.sin(phi2) - 10*phid1*Math.cos(phi1)*Math.cos(phi2) - 10*phid2*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2) + 10*phid1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) + 10*thetad2*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta2)) - 50*phid1*Math.cos(phi1) + 5*Math.sin(phi3)*(10*Math.cos(theta3)*(phid1*Math.cos(phi1)*Math.sin(phi2) + phid2*Math.cos(phi2)*Math.sin(phi1) + phid1*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1) + phid2*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2) + thetad2*Math.cos(phi1)*Math.cos(phi2)*Math.sin(theta2)) - 10*thetad3*Math.sin(theta3)*(Math.sin(phi1)*Math.sin(phi2) - Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2)) + 10*thetad2*Math.cos(phi1)*Math.cos(theta2)*Math.sin(theta3) + 10*thetad3*Math.cos(phi1)*Math.cos(theta3)*Math.sin(theta2) - 10*phid1*Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) + 5*phid3*Math.sin(phi3)*(10*Math.cos(phi2)*Math.sin(phi1) + 10*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2)) - 50*phid1*Math.cos(phi1)*Math.cos(phi2) + 50*phid2*Math.sin(phi1)*Math.sin(phi2) + 5*phid3*Math.cos(phi3)*(10*Math.cos(theta3)*(Math.sin(phi1)*Math.sin(phi2) - Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2)) + 10*Math.cos(phi1)*Math.sin(theta2)*Math.sin(theta3)) - 50*phid2*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2) + 50*phid1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) + 50*thetad2*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta2)) - (Math.cos(phi3)*(10*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) - Math.sin(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)))*(5*Math.sin(cr + theta1)*(10*phid1*Math.sin(phi1) + 10*phid1*Math.cos(phi2)*Math.sin(phi1) + 10*phid2*Math.cos(phi1)*Math.sin(phi2) + 10*phid1*Math.cos(phi2)*Math.cos(phi3)*Math.sin(phi1) + 10*phid2*Math.cos(phi1)*Math.cos(phi3)*Math.sin(phi2) + 10*phid3*Math.cos(phi1)*Math.cos(phi2)*Math.sin(phi3) + 10*phid1*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2) + 10*phid2*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1) - 10*thetad2*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta2) + 10*phid1*Math.cos(phi1)*Math.cos(phi3)*Math.cos(theta2)*Math.sin(phi2) + 10*phid2*Math.cos(phi2)*Math.cos(phi3)*Math.cos(theta2)*Math.sin(phi1) + 10*phid2*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta3)*Math.sin(phi3) + 10*phid3*Math.cos(phi1)*Math.cos(phi3)*Math.cos(theta3)*Math.sin(phi2) - 10*phid1*Math.cos(theta3)*Math.sin(phi1)*Math.sin(phi2)*Math.sin(phi3) - 10*phid3*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)*Math.sin(phi3) - 10*phid1*Math.cos(phi1)*Math.sin(phi3)*Math.sin(theta2)*Math.sin(theta3) - 10*thetad2*Math.cos(phi3)*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta2) - 10*phid3*Math.cos(phi3)*Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3) - 10*thetad3*Math.cos(phi1)*Math.sin(phi2)*Math.sin(phi3)*Math.sin(theta3) - 10*thetad2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi3)*Math.sin(theta3) - 10*thetad3*Math.cos(theta3)*Math.sin(phi1)*Math.sin(phi3)*Math.sin(theta2) + 10*phid1*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi3) + 10*phid3*Math.cos(phi2)*Math.cos(phi3)*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi1) - 10*phid2*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi1)*Math.sin(phi2)*Math.sin(phi3) - 10*thetad2*Math.cos(phi2)*Math.cos(theta3)*Math.sin(phi1)*Math.sin(phi3)*Math.sin(theta2) - 10*thetad3*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi3)*Math.sin(theta3)) - 5*Math.cos(cr + theta1)*(crd + thetad1)*(10*Math.cos(phi1) + 10*Math.cos(phi1)*Math.cos(phi2) + 10*Math.cos(phi1)*Math.cos(phi2)*Math.cos(phi3) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 10*Math.cos(phi3)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 10*Math.cos(phi1)*Math.cos(theta3)*Math.sin(phi2)*Math.sin(phi3) + 10*Math.sin(phi1)*Math.sin(phi3)*Math.sin(theta2)*Math.sin(theta3) - 10*Math.cos(phi2)*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi1)*Math.sin(phi3))) + 2*(Math.sin(phi3)*(Math.cos(theta2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta3)*Math.sin(theta2)) + Math.cos(phi3)*Math.sin(phi2)*Math.sin(theta2))*((Math.cos(phi3)*(Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2))))/40 + (Math.sin(phi3)*(thetad3 + thetad2*Math.cos(phi2) + crd*Math.cos(phi1)*Math.cos(phi2) + thetad1*Math.cos(phi1)*Math.cos(phi2) + phid1*Math.sin(phi2)*Math.sin(theta2) - crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))/40) + 2*(Math.cos(phi3)*(Math.cos(theta2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta3)*Math.sin(theta2)) - Math.sin(phi2)*Math.sin(phi3)*Math.sin(theta2))*(41*Math.cos(phi3)*(thetad3 + thetad2*Math.cos(phi2) + crd*Math.cos(phi1)*Math.cos(phi2) + thetad1*Math.cos(phi1)*Math.cos(phi2) + phid1*Math.sin(phi2)*Math.sin(theta2) - crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) - 41*Math.sin(phi3)*(Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2)))) - 82*thetad2*Math.cos(theta3)*Math.sin(theta2) - 82*thetad3*Math.cos(theta2)*Math.sin(theta3) - 82*thetad2*Math.cos(phi2)*Math.cos(theta2)*Math.sin(theta3) - 82*thetad3*Math.cos(phi2)*Math.cos(theta3)*Math.sin(theta2) + 82*phid2*Math.sin(phi2)*Math.sin(theta2)*Math.sin(theta3)",
        "vars": [
          "cr",
          "crd",
          "phi1",
          "phi2",
          "phi3",
          "phid1",
          "phid2",
          "phid3",
          "theta1",
          "theta2",
          "theta3",
          "thetad1",
          "thetad2",
          "thetad3"
        ]
      },
      {
        "expr": "2*(Math.cos(phi2)*Math.cos(phi3) - Math.cos(theta3)*Math.sin(phi2)*Math.sin(phi3))*((Math.cos(phi3)*(Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2))))/40 + (Math.sin(phi3)*(thetad3 + thetad2*Math.cos(phi2) + crd*Math.cos(phi1)*Math.cos(phi2) + thetad1*Math.cos(phi1)*Math.cos(phi2) + phid1*Math.sin(phi2)*Math.sin(theta2) - crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))/40) - 2*(Math.cos(phi2)*Math.sin(phi3) + Math.cos(phi3)*Math.cos(theta3)*Math.sin(phi2))*(41*Math.cos(phi3)*(thetad3 + thetad2*Math.cos(phi2) + crd*Math.cos(phi1)*Math.cos(phi2) + thetad1*Math.cos(phi1)*Math.cos(phi2) + phid1*Math.sin(phi2)*Math.sin(theta2) - crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) - 41*Math.sin(phi3)*(Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2)))) - (Math.cos(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) - Math.sin(phi3)*(10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)))*(5*Math.sin(phi2)*(10*thetad2*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(theta2)*(crd + thetad1) - 10*thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2) + 10*phid1*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)*(crd + thetad1)) + 5*Math.sin(phi3)*(10*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.sin(theta2)*(crd + thetad1) + thetad2*Math.sin(cr + theta1)*Math.cos(theta2) + phid1*Math.cos(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + 10*Math.cos(phi2)*Math.cos(theta3)*(thetad2*Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(theta2)*(crd + thetad1) - thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2) + phid1*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)*(crd + thetad1)) + 10*thetad3*Math.cos(theta3)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*phid2*Math.cos(theta3)*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*thetad3*Math.cos(phi2)*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) + 5*Math.cos(phi3)*Math.sin(phi2)*(10*thetad2*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(theta2)*(crd + thetad1) - 10*thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2) + 10*phid1*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)*(crd + thetad1)) + 5*phid3*Math.cos(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(phi2)*Math.cos(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) - 5*phid2*Math.cos(phi2)*(10*Math.sin(cr + theta1)*Math.cos(theta2) + 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) - 5*phid2*Math.cos(phi2)*Math.cos(phi3)*(10*Math.sin(cr + theta1)*Math.cos(theta2) + 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 5*phid3*Math.sin(phi2)*Math.sin(phi3)*(10*Math.sin(cr + theta1)*Math.cos(theta2) + 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) - (Math.cos(phi3)*(10*Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - 10*Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) + Math.sin(phi3)*(10*Math.cos(phi1)*Math.cos(phi2) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))*(5*Math.sin(phi1)*(10*phid2*Math.cos(phi2)*Math.sin(theta2) + 10*thetad2*Math.cos(theta2)*Math.sin(phi2) + 10*phid2*Math.cos(phi2)*Math.cos(phi3)*Math.sin(theta2) + 10*thetad2*Math.cos(phi3)*Math.cos(theta2)*Math.sin(phi2) + 10*phid3*Math.cos(phi3)*Math.cos(theta2)*Math.sin(theta3) + 10*thetad3*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi3) - 10*phid3*Math.sin(phi2)*Math.sin(phi3)*Math.sin(theta2) - 10*thetad2*Math.sin(phi3)*Math.sin(theta2)*Math.sin(theta3) + 10*phid3*Math.cos(phi2)*Math.cos(phi3)*Math.cos(theta3)*Math.sin(theta2) + 10*thetad2*Math.cos(phi2)*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi3) - 10*phid2*Math.cos(theta3)*Math.sin(phi2)*Math.sin(phi3)*Math.sin(theta2) - 10*thetad3*Math.cos(phi2)*Math.sin(phi3)*Math.sin(theta2)*Math.sin(theta3)) + 5*phid1*Math.cos(phi1)*(10*Math.sin(phi2)*Math.sin(theta2) + 10*Math.cos(theta2)*Math.sin(phi3)*Math.sin(theta3) + 10*Math.cos(phi3)*Math.sin(phi2)*Math.sin(theta2) + 10*Math.cos(phi2)*Math.cos(theta3)*Math.sin(phi3)*Math.sin(theta2))) - (Math.cos(phi3)*(10*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) - Math.sin(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)))*(5*Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.cos(theta2)*(crd + thetad1) + 10*thetad2*Math.cos(cr + theta1)*Math.sin(theta2) + 10*thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2) - 10*phid1*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(theta2) + 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)*(crd + thetad1)) + 5*Math.sin(phi3)*(10*Math.cos(phi2)*Math.cos(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2)*(crd + thetad1) + thetad2*Math.cos(cr + theta1)*Math.sin(theta2) + thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2) - phid1*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)*(crd + thetad1)) - 10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.sin(theta2)*(crd + thetad1) - thetad2*Math.cos(cr + theta1)*Math.cos(theta2) + phid1*Math.sin(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + 10*thetad3*Math.cos(theta3)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*phid2*Math.cos(theta3)*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*thetad3*Math.cos(phi2)*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) + 5*Math.cos(phi3)*Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.cos(theta2)*(crd + thetad1) + 10*thetad2*Math.cos(cr + theta1)*Math.sin(theta2) + 10*thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2) - 10*phid1*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(theta2) + 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)*(crd + thetad1)) + 5*phid3*Math.cos(phi3)*(10*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(phi2)*Math.cos(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) - 5*phid2*Math.cos(phi2)*(10*Math.cos(cr + theta1)*Math.cos(theta2) - 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) - 5*phid2*Math.cos(phi2)*Math.cos(phi3)*(10*Math.cos(cr + theta1)*Math.cos(theta2) - 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 5*phid3*Math.sin(phi2)*Math.sin(phi3)*(10*Math.cos(cr + theta1)*Math.cos(theta2) - 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) + 82*phid2*Math.cos(phi2)*Math.sin(theta3) + 82*thetad3*Math.cos(theta3)*Math.sin(phi2)",
        "vars": [
          "cr",
          "crd",
          "phi1",
          "phi2",
          "phi3",
          "phid1",
          "phid2",
          "phid3",
          "theta1",
          "theta2",
          "theta3",
          "thetad1",
          "thetad2",
          "thetad3"
        ]
      },
      {
        "expr": "(Math.cos(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) - Math.sin(phi3)*(10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)))*(5*Math.cos(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2)*(crd + thetad1) + 10*thetad2*Math.sin(cr + theta1)*Math.cos(theta2) + 10*phid1*Math.cos(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + 10*thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + 5*Math.cos(phi3)*(10*Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2)*(crd + thetad1) + thetad2*Math.sin(cr + theta1)*Math.cos(theta2) + phid1*Math.cos(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) - 10*phid2*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)*(crd + thetad1) + 10*phid1*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(phi2) + 10*phid2*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) - 5*Math.cos(theta3)*Math.sin(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2)*(crd + thetad1) + thetad2*Math.sin(cr + theta1)*Math.cos(theta2) + phid1*Math.cos(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + 10*phid2*Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*phid1*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(phi2) + 10*phid2*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)*(crd + thetad1)) - 5*phid2*Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 5*phid3*Math.sin(phi3)*(10*Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)) - 50*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)*(crd + thetad1) + 50*phid1*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(phi2) + 50*phid2*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1) - 5*phid3*Math.cos(phi3)*Math.cos(theta3)*(10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 5*thetad3*Math.sin(phi3)*Math.sin(theta3)*(10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1))) - (Math.cos(phi3)*(10*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) - Math.sin(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)))*(5*Math.cos(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2)*(crd + thetad1) - 10*thetad2*Math.cos(cr + theta1)*Math.cos(theta2) + 10*phid1*Math.sin(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + 10*thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + 5*Math.cos(phi3)*(10*Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2)*(crd + thetad1) - thetad2*Math.cos(cr + theta1)*Math.cos(theta2) + phid1*Math.sin(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + 10*phid2*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*phid1*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(phi2) + 10*phid2*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1) + 10*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)*(crd + thetad1)) + 5*phid3*Math.sin(phi3)*(10*Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)) + 5*phid2*Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 5*Math.cos(theta3)*Math.sin(phi3)*(10*phid2*Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2)*(crd + thetad1) - thetad2*Math.cos(cr + theta1)*Math.cos(theta2) + phid1*Math.sin(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + 10*phid1*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(phi2) - 10*phid2*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2) + 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)*(crd + thetad1)) + 50*phid1*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(phi2) + 50*phid2*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1) + 5*phid3*Math.cos(phi3)*Math.cos(theta3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 50*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)*(crd + thetad1) - 5*thetad3*Math.sin(phi3)*Math.sin(theta3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1))) - 82*thetad3*Math.sin(theta3) - (Math.cos(phi3)*(10*Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - 10*Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) + Math.sin(phi3)*(10*Math.cos(phi1)*Math.cos(phi2) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))*(5*Math.cos(phi3)*(10*phid1*Math.sin(phi1)*Math.sin(phi2) - 10*phid2*Math.cos(phi1)*Math.cos(phi2) - 10*phid1*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2) + 10*phid2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) + 10*thetad2*Math.cos(phi2)*Math.sin(phi1)*Math.sin(theta2)) + 5*phid3*Math.sin(phi3)*(10*Math.cos(phi1)*Math.sin(phi2) + 10*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - 50*phid2*Math.cos(phi1)*Math.cos(phi2) + 50*phid1*Math.sin(phi1)*Math.sin(phi2) + 5*Math.cos(theta3)*Math.sin(phi3)*(10*phid1*Math.cos(phi2)*Math.sin(phi1) + 10*phid2*Math.cos(phi1)*Math.sin(phi2) + 10*phid1*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2) + 10*phid2*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1) - 10*thetad2*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta2)) + 5*thetad3*Math.sin(phi3)*Math.sin(theta3)*(10*Math.cos(phi1)*Math.cos(phi2) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) - 50*phid1*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2) + 50*phid2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) + 50*thetad2*Math.cos(phi2)*Math.sin(phi1)*Math.sin(theta2) - 5*phid3*Math.cos(phi3)*Math.cos(theta3)*(10*Math.cos(phi1)*Math.cos(phi2) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))) + 2*Math.cos(phi3)*Math.sin(theta3)*(41*Math.cos(phi3)*(thetad3 + thetad2*Math.cos(phi2) + crd*Math.cos(phi1)*Math.cos(phi2) + thetad1*Math.cos(phi1)*Math.cos(phi2) + phid1*Math.sin(phi2)*Math.sin(theta2) - crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) - 41*Math.sin(phi3)*(Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2)))) + 2*Math.sin(phi3)*Math.sin(theta3)*((Math.cos(phi3)*(Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2))))/40 + (Math.sin(phi3)*(thetad3 + thetad2*Math.cos(phi2) + crd*Math.cos(phi1)*Math.cos(phi2) + thetad1*Math.cos(phi1)*Math.cos(phi2) + phid1*Math.sin(phi2)*Math.sin(theta2) - crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))/40)",
        "vars": [
          "cr",
          "crd",
          "phi1",
          "phi2",
          "phi3",
          "phid1",
          "phid2",
          "phid3",
          "theta1",
          "theta2",
          "theta3",
          "thetad1",
          "thetad2",
          "thetad3"
        ]
      },
      {
        "expr": "2*Math.cos(phi3)*((Math.cos(phi3)*(Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2))))/40 + (Math.sin(phi3)*(thetad3 + thetad2*Math.cos(phi2) + crd*Math.cos(phi1)*Math.cos(phi2) + thetad1*Math.cos(phi1)*Math.cos(phi2) + phid1*Math.sin(phi2)*Math.sin(theta2) - crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))/40) - (Math.cos(phi3)*(10*Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - 10*Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) + Math.sin(phi3)*(10*Math.cos(phi1)*Math.cos(phi2) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))*(5*Math.sin(phi3)*(10*thetad3*Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - 10*Math.sin(theta3)*(phid1*Math.sin(phi1)*Math.sin(phi2) - phid2*Math.cos(phi1)*Math.cos(phi2) - phid1*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2) + phid2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) + thetad2*Math.cos(phi2)*Math.sin(phi1)*Math.sin(theta2)) + 10*phid1*Math.cos(phi1)*Math.cos(theta3)*Math.sin(theta2) + 10*thetad2*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi1) - 10*thetad3*Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) + 5*phid3*Math.cos(phi3)*(10*Math.sin(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + 10*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2))) - (Math.cos(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) - Math.sin(phi3)*(10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)))*(5*Math.sin(phi3)*(10*Math.cos(theta3)*(thetad2*Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(theta2)*(crd + thetad1) - thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2) + phid1*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)*(crd + thetad1)) + 10*Math.sin(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2)*(crd + thetad1) + thetad2*Math.sin(cr + theta1)*Math.cos(theta2) + phid1*Math.cos(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) - phid2*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)*(crd + thetad1) + phid1*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(phi2) + phid2*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 10*thetad3*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*thetad3*Math.cos(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) - 5*phid3*Math.cos(phi3)*(10*Math.cos(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) - 10*Math.sin(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)))) - (Math.cos(phi3)*(10*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) - Math.sin(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)))*(5*Math.sin(phi3)*(10*Math.cos(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2)*(crd + thetad1) + thetad2*Math.cos(cr + theta1)*Math.sin(theta2) + thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2) - phid1*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)*(crd + thetad1)) - 10*Math.sin(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2)*(crd + thetad1) - thetad2*Math.cos(cr + theta1)*Math.cos(theta2) + phid1*Math.sin(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + phid2*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + phid1*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(phi2) + phid2*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)*(crd + thetad1)) + 10*thetad3*Math.cos(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)) + 10*thetad3*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) - 5*phid3*Math.cos(phi3)*(10*Math.cos(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) - 10*Math.sin(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)))) - 2*Math.sin(phi3)*(41*Math.cos(phi3)*(thetad3 + thetad2*Math.cos(phi2) + crd*Math.cos(phi1)*Math.cos(phi2) + thetad1*Math.cos(phi1)*Math.cos(phi2) + phid1*Math.sin(phi2)*Math.sin(theta2) - crd*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - thetad1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) - 41*Math.sin(phi3)*(Math.cos(theta3)*(Math.sin(phi2)*(thetad2 + crd*Math.cos(phi1) + thetad1*Math.cos(phi1)) - Math.cos(phi2)*(phid1*Math.sin(theta2) - Math.cos(theta2)*Math.sin(phi1)*(crd + thetad1))) - Math.sin(theta3)*(phid2 + phid1*Math.cos(theta2) + crd*Math.sin(phi1)*Math.sin(theta2) + thetad1*Math.sin(phi1)*Math.sin(theta2))))",
        "vars": [
          "cr",
          "crd",
          "phi1",
          "phi2",
          "phi3",
          "phid1",
          "phid2",
          "phid3",
          "theta1",
          "theta2",
          "theta3",
          "thetad1",
          "thetad2",
          "thetad3"
        ]
      },
      {
        "expr": "- (Math.cos(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) - Math.sin(phi3)*(10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)))*(5*Math.cos(phi3)*(10*Math.sin(theta3)*(thetad2*Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(theta2)*(crd + thetad1) - thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2) + phid1*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)*(crd + thetad1)) - 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2)*(crd + thetad1) + thetad2*Math.sin(cr + theta1)*Math.cos(theta2) + phid1*Math.cos(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) - phid2*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)*(crd + thetad1) + phid1*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(phi2) + phid2*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 10*thetad3*Math.sin(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)) - 10*thetad3*Math.cos(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) + 5*Math.sin(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2)*(crd + thetad1) + thetad2*Math.sin(cr + theta1)*Math.cos(theta2) + phid1*Math.cos(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + 10*phid2*Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*phid1*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(phi2) + 10*phid2*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)*(crd + thetad1)) + 5*phid3*Math.sin(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) + 5*phid3*Math.cos(phi3)*(10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1))) - (Math.cos(phi3)*(10*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) - Math.sin(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)))*(5*Math.cos(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2)*(crd + thetad1) + thetad2*Math.cos(cr + theta1)*Math.sin(theta2) + thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2) - phid1*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)*(crd + thetad1)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2)*(crd + thetad1) - thetad2*Math.cos(cr + theta1)*Math.cos(theta2) + phid1*Math.sin(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + phid2*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + phid1*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(phi2) + phid2*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)*(crd + thetad1)) + 10*thetad3*Math.sin(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)) - 10*thetad3*Math.cos(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) + 5*Math.sin(phi3)*(10*phid2*Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2)*(crd + thetad1) - thetad2*Math.cos(cr + theta1)*Math.cos(theta2) + phid1*Math.sin(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + 10*phid1*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(phi2) - 10*phid2*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2) + 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)*(crd + thetad1)) + 5*phid3*Math.sin(phi3)*(10*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) + 5*phid3*Math.cos(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1))) - (Math.cos(phi3)*(10*Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - 10*Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) + Math.sin(phi3)*(10*Math.cos(phi1)*Math.cos(phi2) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)))*(5*Math.cos(phi3)*(10*Math.cos(theta3)*(phid1*Math.sin(phi1)*Math.sin(phi2) - phid2*Math.cos(phi1)*Math.cos(phi2) - phid1*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2) + phid2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) + thetad2*Math.cos(phi2)*Math.sin(phi1)*Math.sin(theta2)) + 10*thetad3*Math.sin(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + 10*phid1*Math.cos(phi1)*Math.sin(theta2)*Math.sin(theta3) + 10*thetad2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3) + 10*thetad3*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2)) + 5*Math.sin(phi3)*(10*phid1*Math.cos(phi2)*Math.sin(phi1) + 10*phid2*Math.cos(phi1)*Math.sin(phi2) + 10*phid1*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2) + 10*phid2*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1) - 10*thetad2*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta2)) - 5*phid3*Math.cos(phi3)*(10*Math.cos(phi1)*Math.cos(phi2) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) + 5*phid3*Math.sin(phi3)*(10*Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - 10*Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)))",
        "vars": [
          "cr",
          "crd",
          "phi1",
          "phi2",
          "phi3",
          "phid1",
          "phid2",
          "phid3",
          "theta1",
          "theta2",
          "theta3",
          "thetad1",
          "thetad2",
          "thetad3"
        ]
      }
    ]
  ],
  "T": [
    [
      {
        "expr": "(117*Math.cos(cr))/25 - (61*Math.sin(cr))/100",
        "vars": "cr"
      },
      {
        "expr": "(61*Math.cos(cr))/100 + (117*Math.sin(cr))/25",
        "vars": "cr"
      },
      {
        "expr": "493/100",
        "vars": []
      }
    ],
    [
      {
        "expr": "(117*Math.cos(cr))/25 - (61*Math.sin(cr))/100 + trolley*Math.cos(cr)",
        "vars": [
          "cr",
          "trolley"
        ]
      },
      {
        "expr": "(61*Math.cos(cr))/100 + (117*Math.sin(cr))/25 + trolley*Math.sin(cr)",
        "vars": [
          "cr",
          "trolley"
        ]
      },
      {
        "expr": "1193/100",
        "vars": []
      }
    ],
    [
      {
        "expr": "(117*Math.cos(cr))/25 - (61*Math.sin(cr))/100 + trolley*Math.cos(cr)",
        "vars": [
          "cr",
          "trolley"
        ]
      },
      {
        "expr": "(61*Math.cos(cr))/100 + (117*Math.sin(cr))/25 + trolley*Math.sin(cr)",
        "vars": [
          "cr",
          "trolley"
        ]
      },
      {
        "expr": "1193/100",
        "vars": []
      }
    ],
    [
      {
        "expr": "(117*Math.cos(cr))/25 - (61*Math.sin(cr))/100 + trolley*Math.cos(cr)",
        "vars": [
          "cr",
          "trolley"
        ]
      },
      {
        "expr": "(61*Math.cos(cr))/100 + (117*Math.sin(cr))/25 + trolley*Math.sin(cr)",
        "vars": [
          "cr",
          "trolley"
        ]
      },
      {
        "expr": "1193/100",
        "vars": []
      }
    ],
    [
      {
        "expr": "(117*Math.cos(cr))/25 - (61*Math.sin(cr))/100 + trolley*Math.cos(cr) - 10*Math.sin(cr + theta1)*Math.sin(phi1)",
        "vars": [
          "cr",
          "phi1",
          "theta1",
          "trolley"
        ]
      },
      {
        "expr": "(61*Math.cos(cr))/100 + (117*Math.sin(cr))/25 + trolley*Math.sin(cr) + 10*Math.cos(cr + theta1)*Math.sin(phi1)",
        "vars": [
          "cr",
          "phi1",
          "theta1",
          "trolley"
        ]
      },
      {
        "expr": "1193/100 - 10*Math.cos(phi1)",
        "vars": "phi1"
      }
    ],
    [
      {
        "expr": "(117*Math.cos(cr))/25 - (61*Math.sin(cr))/100 + trolley*Math.cos(cr) - 10*Math.sin(cr + theta1)*Math.sin(phi1)",
        "vars": [
          "cr",
          "phi1",
          "theta1",
          "trolley"
        ]
      },
      {
        "expr": "(61*Math.cos(cr))/100 + (117*Math.sin(cr))/25 + trolley*Math.sin(cr) + 10*Math.cos(cr + theta1)*Math.sin(phi1)",
        "vars": [
          "cr",
          "phi1",
          "theta1",
          "trolley"
        ]
      },
      {
        "expr": "1193/100 - 10*Math.cos(phi1)",
        "vars": "phi1"
      }
    ],
    [
      {
        "expr": "(117*Math.cos(cr))/25 - (61*Math.sin(cr))/100 + trolley*Math.cos(cr) - 10*Math.sin(cr + theta1)*Math.sin(phi1)",
        "vars": [
          "cr",
          "phi1",
          "theta1",
          "trolley"
        ]
      },
      {
        "expr": "(61*Math.cos(cr))/100 + (117*Math.sin(cr))/25 + trolley*Math.sin(cr) + 10*Math.cos(cr + theta1)*Math.sin(phi1)",
        "vars": [
          "cr",
          "phi1",
          "theta1",
          "trolley"
        ]
      },
      {
        "expr": "1193/100 - 10*Math.cos(phi1)",
        "vars": "phi1"
      }
    ],
    [
      {
        "expr": "(117*Math.cos(cr))/25 - (61*Math.sin(cr))/100 - Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + trolley*Math.cos(cr) - 10*Math.sin(cr + theta1)*Math.sin(phi1) - 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)",
        "vars": [
          "cr",
          "phi1",
          "phi2",
          "theta1",
          "theta2",
          "trolley"
        ]
      },
      {
        "expr": "(61*Math.cos(cr))/100 + (117*Math.sin(cr))/25 - Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + trolley*Math.sin(cr) + 10*Math.cos(cr + theta1)*Math.sin(phi1) + 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)",
        "vars": [
          "cr",
          "phi1",
          "phi2",
          "theta1",
          "theta2",
          "trolley"
        ]
      },
      {
        "expr": "10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 10*Math.cos(phi1)*Math.cos(phi2) - 10*Math.cos(phi1) + 1193/100",
        "vars": [
          "phi1",
          "phi2",
          "theta2"
        ]
      }
    ],
    [
      {
        "expr": "(117*Math.cos(cr))/25 - (61*Math.sin(cr))/100 - Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + trolley*Math.cos(cr) - 10*Math.sin(cr + theta1)*Math.sin(phi1) - 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)",
        "vars": [
          "cr",
          "phi1",
          "phi2",
          "theta1",
          "theta2",
          "trolley"
        ]
      },
      {
        "expr": "(61*Math.cos(cr))/100 + (117*Math.sin(cr))/25 - Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + trolley*Math.sin(cr) + 10*Math.cos(cr + theta1)*Math.sin(phi1) + 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)",
        "vars": [
          "cr",
          "phi1",
          "phi2",
          "theta1",
          "theta2",
          "trolley"
        ]
      },
      {
        "expr": "10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 10*Math.cos(phi1)*Math.cos(phi2) - 10*Math.cos(phi1) + 1193/100",
        "vars": [
          "phi1",
          "phi2",
          "theta2"
        ]
      }
    ],
    [
      {
        "expr": "(117*Math.cos(cr))/25 - (61*Math.sin(cr))/100 - Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + trolley*Math.cos(cr) - 10*Math.sin(cr + theta1)*Math.sin(phi1) - 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)",
        "vars": [
          "cr",
          "phi1",
          "phi2",
          "theta1",
          "theta2",
          "trolley"
        ]
      },
      {
        "expr": "(61*Math.cos(cr))/100 + (117*Math.sin(cr))/25 - Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + trolley*Math.sin(cr) + 10*Math.cos(cr + theta1)*Math.sin(phi1) + 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)",
        "vars": [
          "cr",
          "phi1",
          "phi2",
          "theta1",
          "theta2",
          "trolley"
        ]
      },
      {
        "expr": "10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 10*Math.cos(phi1)*Math.cos(phi2) - 10*Math.cos(phi1) + 1193/100",
        "vars": [
          "phi1",
          "phi2",
          "theta2"
        ]
      }
    ],
    [
      {
        "expr": "(117*Math.cos(cr))/25 - (61*Math.sin(cr))/100 - Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(phi3)*(10*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) - Math.cos(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + trolley*Math.cos(cr) - 10*Math.sin(cr + theta1)*Math.sin(phi1) - 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)",
        "vars": [
          "cr",
          "phi1",
          "phi2",
          "phi3",
          "theta1",
          "theta2",
          "theta3",
          "trolley"
        ]
      },
      {
        "expr": "(61*Math.cos(cr))/100 + (117*Math.sin(cr))/25 - Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) - Math.cos(phi3)*(10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + trolley*Math.sin(cr) + 10*Math.cos(cr + theta1)*Math.sin(phi1) + 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)",
        "vars": [
          "cr",
          "phi1",
          "phi2",
          "phi3",
          "theta1",
          "theta2",
          "theta3",
          "trolley"
        ]
      },
      {
        "expr": "Math.sin(phi3)*(10*Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - 10*Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) - 10*Math.cos(phi1)*Math.cos(phi2) - 10*Math.cos(phi1) - Math.cos(phi3)*(10*Math.cos(phi1)*Math.cos(phi2) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) + 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) + 1193/100",
        "vars": [
          "phi1",
          "phi2",
          "phi3",
          "theta2",
          "theta3"
        ]
      }
    ]
  ],
  "B": [
    [
      {
        "expr": "- (61*Math.cos(cr))/100 - (117*Math.sin(cr))/25",
        "vars": "cr"
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "(117*Math.cos(cr))/25 - (61*Math.sin(cr))/100",
        "vars": "cr"
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "1",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "- (61*Math.cos(cr))/100 - (117*Math.sin(cr))/25",
        "vars": "cr"
      },
      {
        "expr": "Math.cos(cr) - cr*Math.sin(cr)",
        "vars": "cr"
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "(117*Math.cos(cr))/25 - (61*Math.sin(cr))/100",
        "vars": "cr"
      },
      {
        "expr": "Math.sin(cr) + cr*Math.cos(cr)",
        "vars": "cr"
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "1",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "- (61*Math.cos(cr))/100 - (117*Math.sin(cr))/25",
        "vars": "cr"
      },
      {
        "expr": "Math.cos(cr) - cr*Math.sin(cr)",
        "vars": "cr"
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "(117*Math.cos(cr))/25 - (61*Math.sin(cr))/100",
        "vars": "cr"
      },
      {
        "expr": "Math.sin(cr) + cr*Math.cos(cr)",
        "vars": "cr"
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "1",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "1",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "- (61*Math.cos(cr))/100 - (117*Math.sin(cr))/25",
        "vars": "cr"
      },
      {
        "expr": "Math.cos(cr) - cr*Math.sin(cr)",
        "vars": "cr"
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "(117*Math.cos(cr))/25 - (61*Math.sin(cr))/100",
        "vars": "cr"
      },
      {
        "expr": "Math.sin(cr) + cr*Math.cos(cr)",
        "vars": "cr"
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "1",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "Math.sin(phi1)",
        "vars": "phi1"
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "Math.sin(phi1)",
        "vars": "phi1"
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "Math.cos(phi1)",
        "vars": "phi1"
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "Math.cos(phi1)",
        "vars": "phi1"
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "- (61*Math.cos(cr))/100 - (117*Math.sin(cr))/25 - 10*Math.cos(cr + theta1)*Math.sin(phi1)",
        "vars": [
          "cr",
          "phi1",
          "theta1"
        ]
      },
      {
        "expr": "Math.cos(cr) - cr*Math.sin(cr)",
        "vars": "cr"
      },
      {
        "expr": "-10*Math.cos(cr + theta1)*Math.sin(phi1)",
        "vars": [
          "cr",
          "phi1",
          "theta1"
        ]
      },
      {
        "expr": "-10*Math.sin(cr + theta1)*Math.cos(phi1)",
        "vars": [
          "cr",
          "phi1",
          "theta1"
        ]
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "(117*Math.cos(cr))/25 - (61*Math.sin(cr))/100 - 10*Math.sin(cr + theta1)*Math.sin(phi1)",
        "vars": [
          "cr",
          "phi1",
          "theta1"
        ]
      },
      {
        "expr": "Math.sin(cr) + cr*Math.cos(cr)",
        "vars": "cr"
      },
      {
        "expr": "-10*Math.sin(cr + theta1)*Math.sin(phi1)",
        "vars": [
          "cr",
          "phi1",
          "theta1"
        ]
      },
      {
        "expr": "10*Math.cos(cr + theta1)*Math.cos(phi1)",
        "vars": [
          "cr",
          "phi1",
          "theta1"
        ]
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "10*Math.sin(phi1)",
        "vars": "phi1"
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "1",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "Math.sin(phi1)",
        "vars": "phi1"
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "Math.sin(phi1)",
        "vars": "phi1"
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "Math.cos(phi1)",
        "vars": "phi1"
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "Math.cos(phi1)",
        "vars": "phi1"
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "- (61*Math.cos(cr))/100 - (117*Math.sin(cr))/25 - 10*Math.cos(cr + theta1)*Math.sin(phi1)",
        "vars": [
          "cr",
          "phi1",
          "theta1"
        ]
      },
      {
        "expr": "Math.cos(cr) - cr*Math.sin(cr)",
        "vars": "cr"
      },
      {
        "expr": "-10*Math.cos(cr + theta1)*Math.sin(phi1)",
        "vars": [
          "cr",
          "phi1",
          "theta1"
        ]
      },
      {
        "expr": "-10*Math.sin(cr + theta1)*Math.cos(phi1)",
        "vars": [
          "cr",
          "phi1",
          "theta1"
        ]
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "(117*Math.cos(cr))/25 - (61*Math.sin(cr))/100 - 10*Math.sin(cr + theta1)*Math.sin(phi1)",
        "vars": [
          "cr",
          "phi1",
          "theta1"
        ]
      },
      {
        "expr": "Math.sin(cr) + cr*Math.cos(cr)",
        "vars": "cr"
      },
      {
        "expr": "-10*Math.sin(cr + theta1)*Math.sin(phi1)",
        "vars": [
          "cr",
          "phi1",
          "theta1"
        ]
      },
      {
        "expr": "10*Math.cos(cr + theta1)*Math.cos(phi1)",
        "vars": [
          "cr",
          "phi1",
          "theta1"
        ]
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "10*Math.sin(phi1)",
        "vars": "phi1"
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "Math.sin(phi1)*Math.sin(theta2)",
        "vars": [
          "phi1",
          "theta2"
        ]
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "Math.sin(phi1)*Math.sin(theta2)",
        "vars": [
          "phi1",
          "theta2"
        ]
      },
      {
        "expr": "Math.cos(theta2)",
        "vars": "theta2"
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "Math.cos(theta2)*Math.sin(phi1)",
        "vars": [
          "phi1",
          "theta2"
        ]
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "Math.cos(theta2)*Math.sin(phi1)",
        "vars": [
          "phi1",
          "theta2"
        ]
      },
      {
        "expr": "-Math.sin(theta2)",
        "vars": "theta2"
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "Math.cos(phi1)",
        "vars": "phi1"
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "Math.cos(phi1)",
        "vars": "phi1"
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "1",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "- (61*Math.cos(cr))/100 - (117*Math.sin(cr))/25 - 10*Math.cos(cr + theta1)*Math.sin(phi1)",
        "vars": [
          "cr",
          "phi1",
          "theta1"
        ]
      },
      {
        "expr": "Math.cos(cr) - cr*Math.sin(cr)",
        "vars": "cr"
      },
      {
        "expr": "-10*Math.cos(cr + theta1)*Math.sin(phi1)",
        "vars": [
          "cr",
          "phi1",
          "theta1"
        ]
      },
      {
        "expr": "-10*Math.sin(cr + theta1)*Math.cos(phi1)",
        "vars": [
          "cr",
          "phi1",
          "theta1"
        ]
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "(117*Math.cos(cr))/25 - (61*Math.sin(cr))/100 - 10*Math.sin(cr + theta1)*Math.sin(phi1)",
        "vars": [
          "cr",
          "phi1",
          "theta1"
        ]
      },
      {
        "expr": "Math.sin(cr) + cr*Math.cos(cr)",
        "vars": "cr"
      },
      {
        "expr": "-10*Math.sin(cr + theta1)*Math.sin(phi1)",
        "vars": [
          "cr",
          "phi1",
          "theta1"
        ]
      },
      {
        "expr": "10*Math.cos(cr + theta1)*Math.cos(phi1)",
        "vars": [
          "cr",
          "phi1",
          "theta1"
        ]
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "10*Math.sin(phi1)",
        "vars": "phi1"
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "Math.sin(phi1)*Math.sin(theta2)",
        "vars": [
          "phi1",
          "theta2"
        ]
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "Math.sin(phi1)*Math.sin(theta2)",
        "vars": [
          "phi1",
          "theta2"
        ]
      },
      {
        "expr": "Math.cos(theta2)",
        "vars": "theta2"
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "1",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)",
        "vars": [
          "phi1",
          "phi2",
          "theta2"
        ]
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)",
        "vars": [
          "phi1",
          "phi2",
          "theta2"
        ]
      },
      {
        "expr": "-Math.cos(phi2)*Math.sin(theta2)",
        "vars": [
          "phi2",
          "theta2"
        ]
      },
      {
        "expr": "Math.sin(phi2)",
        "vars": "phi2"
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)",
        "vars": [
          "phi1",
          "phi2",
          "theta2"
        ]
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)",
        "vars": [
          "phi1",
          "phi2",
          "theta2"
        ]
      },
      {
        "expr": "Math.sin(phi2)*Math.sin(theta2)",
        "vars": [
          "phi2",
          "theta2"
        ]
      },
      {
        "expr": "Math.cos(phi2)",
        "vars": "phi2"
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - (117*Math.sin(cr))/25 - (61*Math.cos(cr))/100 - 10*Math.cos(cr + theta1)*Math.sin(phi1) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)",
        "vars": [
          "cr",
          "phi1",
          "phi2",
          "theta1",
          "theta2"
        ]
      },
      {
        "expr": "Math.cos(cr) - cr*Math.sin(cr)",
        "vars": "cr"
      },
      {
        "expr": "Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.sin(phi1) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)",
        "vars": [
          "cr",
          "phi1",
          "phi2",
          "theta1",
          "theta2"
        ]
      },
      {
        "expr": "-Math.sin(cr + theta1)*(10*Math.cos(phi1) + 10*Math.cos(phi1)*Math.cos(phi2) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))",
        "vars": [
          "cr",
          "phi1",
          "phi2",
          "theta1",
          "theta2"
        ]
      },
      {
        "expr": "-Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.cos(theta2) - 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))",
        "vars": [
          "cr",
          "phi1",
          "phi2",
          "theta1",
          "theta2"
        ]
      },
      {
        "expr": "10*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2) - Math.cos(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2))",
        "vars": [
          "cr",
          "phi1",
          "phi2",
          "theta1",
          "theta2"
        ]
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "(117*Math.cos(cr))/25 - (61*Math.sin(cr))/100 - Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.sin(cr + theta1)*Math.sin(phi1) - 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)",
        "vars": [
          "cr",
          "phi1",
          "phi2",
          "theta1",
          "theta2"
        ]
      },
      {
        "expr": "Math.sin(cr) + cr*Math.cos(cr)",
        "vars": "cr"
      },
      {
        "expr": "- Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.sin(cr + theta1)*Math.sin(phi1) - 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)",
        "vars": [
          "cr",
          "phi1",
          "phi2",
          "theta1",
          "theta2"
        ]
      },
      {
        "expr": "Math.cos(cr + theta1)*(10*Math.cos(phi1) + 10*Math.cos(phi1)*Math.cos(phi2) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))",
        "vars": [
          "cr",
          "phi1",
          "phi2",
          "theta1",
          "theta2"
        ]
      },
      {
        "expr": "-Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.cos(theta2) + 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))",
        "vars": [
          "cr",
          "phi1",
          "phi2",
          "theta1",
          "theta2"
        ]
      },
      {
        "expr": "- Math.cos(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)",
        "vars": [
          "cr",
          "phi1",
          "phi2",
          "theta1",
          "theta2"
        ]
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "10*Math.sin(phi1) + 10*Math.cos(phi2)*Math.sin(phi1) + 10*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2)",
        "vars": [
          "phi1",
          "phi2",
          "theta2"
        ]
      },
      {
        "expr": "-10*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta2)",
        "vars": [
          "phi1",
          "phi2",
          "theta2"
        ]
      },
      {
        "expr": "10*Math.cos(phi1)*Math.sin(phi2) + 10*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)",
        "vars": [
          "phi1",
          "phi2",
          "theta2"
        ]
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "Math.sin(phi1)*Math.sin(theta2)",
        "vars": [
          "phi1",
          "theta2"
        ]
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "Math.sin(phi1)*Math.sin(theta2)",
        "vars": [
          "phi1",
          "theta2"
        ]
      },
      {
        "expr": "Math.cos(theta2)",
        "vars": "theta2"
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "1",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)",
        "vars": [
          "phi1",
          "phi2",
          "theta2"
        ]
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)",
        "vars": [
          "phi1",
          "phi2",
          "theta2"
        ]
      },
      {
        "expr": "-Math.cos(phi2)*Math.sin(theta2)",
        "vars": [
          "phi2",
          "theta2"
        ]
      },
      {
        "expr": "Math.sin(phi2)",
        "vars": "phi2"
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)",
        "vars": [
          "phi1",
          "phi2",
          "theta2"
        ]
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)",
        "vars": [
          "phi1",
          "phi2",
          "theta2"
        ]
      },
      {
        "expr": "Math.sin(phi2)*Math.sin(theta2)",
        "vars": [
          "phi2",
          "theta2"
        ]
      },
      {
        "expr": "Math.cos(phi2)",
        "vars": "phi2"
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - (117*Math.sin(cr))/25 - (61*Math.cos(cr))/100 - 10*Math.cos(cr + theta1)*Math.sin(phi1) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)",
        "vars": [
          "cr",
          "phi1",
          "phi2",
          "theta1",
          "theta2"
        ]
      },
      {
        "expr": "Math.cos(cr) - cr*Math.sin(cr)",
        "vars": "cr"
      },
      {
        "expr": "Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.sin(phi1) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)",
        "vars": [
          "cr",
          "phi1",
          "phi2",
          "theta1",
          "theta2"
        ]
      },
      {
        "expr": "-Math.sin(cr + theta1)*(10*Math.cos(phi1) + 10*Math.cos(phi1)*Math.cos(phi2) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))",
        "vars": [
          "cr",
          "phi1",
          "phi2",
          "theta1",
          "theta2"
        ]
      },
      {
        "expr": "-Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.cos(theta2) - 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))",
        "vars": [
          "cr",
          "phi1",
          "phi2",
          "theta1",
          "theta2"
        ]
      },
      {
        "expr": "10*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2) - Math.cos(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2))",
        "vars": [
          "cr",
          "phi1",
          "phi2",
          "theta1",
          "theta2"
        ]
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "(117*Math.cos(cr))/25 - (61*Math.sin(cr))/100 - Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.sin(cr + theta1)*Math.sin(phi1) - 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)",
        "vars": [
          "cr",
          "phi1",
          "phi2",
          "theta1",
          "theta2"
        ]
      },
      {
        "expr": "Math.sin(cr) + cr*Math.cos(cr)",
        "vars": "cr"
      },
      {
        "expr": "- Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.sin(cr + theta1)*Math.sin(phi1) - 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)",
        "vars": [
          "cr",
          "phi1",
          "phi2",
          "theta1",
          "theta2"
        ]
      },
      {
        "expr": "Math.cos(cr + theta1)*(10*Math.cos(phi1) + 10*Math.cos(phi1)*Math.cos(phi2) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))",
        "vars": [
          "cr",
          "phi1",
          "phi2",
          "theta1",
          "theta2"
        ]
      },
      {
        "expr": "-Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.cos(theta2) + 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))",
        "vars": [
          "cr",
          "phi1",
          "phi2",
          "theta1",
          "theta2"
        ]
      },
      {
        "expr": "- Math.cos(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)",
        "vars": [
          "cr",
          "phi1",
          "phi2",
          "theta1",
          "theta2"
        ]
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "10*Math.sin(phi1) + 10*Math.cos(phi2)*Math.sin(phi1) + 10*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2)",
        "vars": [
          "phi1",
          "phi2",
          "theta2"
        ]
      },
      {
        "expr": "-10*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta2)",
        "vars": [
          "phi1",
          "phi2",
          "theta2"
        ]
      },
      {
        "expr": "10*Math.cos(phi1)*Math.sin(phi2) + 10*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)",
        "vars": [
          "phi1",
          "phi2",
          "theta2"
        ]
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "Math.sin(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2)",
        "vars": [
          "phi1",
          "phi2",
          "theta2",
          "theta3"
        ]
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "Math.sin(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2)",
        "vars": [
          "phi1",
          "phi2",
          "theta2",
          "theta3"
        ]
      },
      {
        "expr": "Math.cos(theta2)*Math.cos(theta3) - Math.cos(phi2)*Math.sin(theta2)*Math.sin(theta3)",
        "vars": [
          "phi2",
          "theta2",
          "theta3"
        ]
      },
      {
        "expr": "Math.sin(phi2)*Math.sin(theta3)",
        "vars": [
          "phi2",
          "theta3"
        ]
      },
      {
        "expr": "Math.cos(theta3)",
        "vars": "theta3"
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)",
        "vars": [
          "phi1",
          "phi2",
          "theta2",
          "theta3"
        ]
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)",
        "vars": [
          "phi1",
          "phi2",
          "theta2",
          "theta3"
        ]
      },
      {
        "expr": "- Math.cos(theta2)*Math.sin(theta3) - Math.cos(phi2)*Math.cos(theta3)*Math.sin(theta2)",
        "vars": [
          "phi2",
          "theta2",
          "theta3"
        ]
      },
      {
        "expr": "Math.cos(theta3)*Math.sin(phi2)",
        "vars": [
          "phi2",
          "theta3"
        ]
      },
      {
        "expr": "-Math.sin(theta3)",
        "vars": "theta3"
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)",
        "vars": [
          "phi1",
          "phi2",
          "theta2"
        ]
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)",
        "vars": [
          "phi1",
          "phi2",
          "theta2"
        ]
      },
      {
        "expr": "Math.sin(phi2)*Math.sin(theta2)",
        "vars": [
          "phi2",
          "theta2"
        ]
      },
      {
        "expr": "Math.cos(phi2)",
        "vars": "phi2"
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "1",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - (117*Math.sin(cr))/25 - (61*Math.cos(cr))/100 - 10*Math.cos(cr + theta1)*Math.sin(phi1) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)",
        "vars": [
          "cr",
          "phi1",
          "phi2",
          "theta1",
          "theta2"
        ]
      },
      {
        "expr": "Math.cos(cr) - cr*Math.sin(cr)",
        "vars": "cr"
      },
      {
        "expr": "Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.sin(phi1) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)",
        "vars": [
          "cr",
          "phi1",
          "phi2",
          "theta1",
          "theta2"
        ]
      },
      {
        "expr": "-Math.sin(cr + theta1)*(10*Math.cos(phi1) + 10*Math.cos(phi1)*Math.cos(phi2) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))",
        "vars": [
          "cr",
          "phi1",
          "phi2",
          "theta1",
          "theta2"
        ]
      },
      {
        "expr": "-Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.cos(theta2) - 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))",
        "vars": [
          "cr",
          "phi1",
          "phi2",
          "theta1",
          "theta2"
        ]
      },
      {
        "expr": "10*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2) - Math.cos(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2))",
        "vars": [
          "cr",
          "phi1",
          "phi2",
          "theta1",
          "theta2"
        ]
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "(117*Math.cos(cr))/25 - (61*Math.sin(cr))/100 - Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.sin(cr + theta1)*Math.sin(phi1) - 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)",
        "vars": [
          "cr",
          "phi1",
          "phi2",
          "theta1",
          "theta2"
        ]
      },
      {
        "expr": "Math.sin(cr) + cr*Math.cos(cr)",
        "vars": "cr"
      },
      {
        "expr": "- Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.sin(cr + theta1)*Math.sin(phi1) - 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)",
        "vars": [
          "cr",
          "phi1",
          "phi2",
          "theta1",
          "theta2"
        ]
      },
      {
        "expr": "Math.cos(cr + theta1)*(10*Math.cos(phi1) + 10*Math.cos(phi1)*Math.cos(phi2) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))",
        "vars": [
          "cr",
          "phi1",
          "phi2",
          "theta1",
          "theta2"
        ]
      },
      {
        "expr": "-Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.cos(theta2) + 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))",
        "vars": [
          "cr",
          "phi1",
          "phi2",
          "theta1",
          "theta2"
        ]
      },
      {
        "expr": "- Math.cos(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)",
        "vars": [
          "cr",
          "phi1",
          "phi2",
          "theta1",
          "theta2"
        ]
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "10*Math.sin(phi1) + 10*Math.cos(phi2)*Math.sin(phi1) + 10*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2)",
        "vars": [
          "phi1",
          "phi2",
          "theta2"
        ]
      },
      {
        "expr": "-10*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta2)",
        "vars": [
          "phi1",
          "phi2",
          "theta2"
        ]
      },
      {
        "expr": "10*Math.cos(phi1)*Math.sin(phi2) + 10*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)",
        "vars": [
          "phi1",
          "phi2",
          "theta2"
        ]
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2) + Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3)",
        "vars": [
          "phi1",
          "phi2",
          "theta2",
          "theta3"
        ]
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2) + Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3)",
        "vars": [
          "phi1",
          "phi2",
          "theta2",
          "theta3"
        ]
      },
      {
        "expr": "Math.cos(theta2)*Math.cos(theta3) - Math.cos(phi2)*Math.sin(theta2)*Math.sin(theta3)",
        "vars": [
          "phi2",
          "theta2",
          "theta3"
        ]
      },
      {
        "expr": "Math.sin(phi2)*Math.sin(theta3)",
        "vars": [
          "phi2",
          "theta3"
        ]
      },
      {
        "expr": "Math.cos(theta3)",
        "vars": "theta3"
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "1",
        "vars": []
      }
    ],
    [
      {
        "expr": "Math.cos(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) + Math.sin(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))",
        "vars": [
          "phi1",
          "phi2",
          "phi3",
          "theta2",
          "theta3"
        ]
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "Math.cos(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) + Math.sin(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))",
        "vars": [
          "phi1",
          "phi2",
          "phi3",
          "theta2",
          "theta3"
        ]
      },
      {
        "expr": "Math.sin(phi2)*Math.sin(phi3)*Math.sin(theta2) - Math.cos(phi3)*(Math.cos(theta2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta3)*Math.sin(theta2))",
        "vars": [
          "phi2",
          "phi3",
          "theta2",
          "theta3"
        ]
      },
      {
        "expr": "Math.cos(phi2)*Math.sin(phi3) + Math.cos(phi3)*Math.cos(theta3)*Math.sin(phi2)",
        "vars": [
          "phi2",
          "phi3",
          "theta3"
        ]
      },
      {
        "expr": "-Math.cos(phi3)*Math.sin(theta3)",
        "vars": [
          "phi3",
          "theta3"
        ]
      },
      {
        "expr": "Math.sin(phi3)",
        "vars": "phi3"
      },
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "Math.cos(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) - Math.sin(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3))",
        "vars": [
          "phi1",
          "phi2",
          "phi3",
          "theta2",
          "theta3"
        ]
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "Math.cos(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) - Math.sin(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3))",
        "vars": [
          "phi1",
          "phi2",
          "phi3",
          "theta2",
          "theta3"
        ]
      },
      {
        "expr": "Math.sin(phi3)*(Math.cos(theta2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta3)*Math.sin(theta2)) + Math.cos(phi3)*Math.sin(phi2)*Math.sin(theta2)",
        "vars": [
          "phi2",
          "phi3",
          "theta2",
          "theta3"
        ]
      },
      {
        "expr": "Math.cos(phi2)*Math.cos(phi3) - Math.cos(theta3)*Math.sin(phi2)*Math.sin(phi3)",
        "vars": [
          "phi2",
          "phi3",
          "theta3"
        ]
      },
      {
        "expr": "Math.sin(phi3)*Math.sin(theta3)",
        "vars": [
          "phi3",
          "theta3"
        ]
      },
      {
        "expr": "Math.cos(phi3)",
        "vars": "phi3"
      },
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - (117*Math.sin(cr))/25 - (61*Math.cos(cr))/100 + Math.sin(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) + Math.cos(phi3)*(10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) - 10*Math.cos(cr + theta1)*Math.sin(phi1) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)",
        "vars": [
          "cr",
          "phi1",
          "phi2",
          "phi3",
          "theta1",
          "theta2",
          "theta3"
        ]
      },
      {
        "expr": "Math.cos(cr) - cr*Math.sin(cr)",
        "vars": "cr"
      },
      {
        "expr": "Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.sin(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) + Math.cos(phi3)*(10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) - 10*Math.cos(cr + theta1)*Math.sin(phi1) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)",
        "vars": [
          "cr",
          "phi1",
          "phi2",
          "phi3",
          "theta1",
          "theta2",
          "theta3"
        ]
      },
      {
        "expr": "-Math.sin(cr + theta1)*(10*Math.cos(phi1) + 10*Math.cos(phi1)*Math.cos(phi2) + 10*Math.cos(phi1)*Math.cos(phi2)*Math.cos(phi3) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 10*Math.cos(phi3)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 10*Math.cos(phi1)*Math.cos(theta3)*Math.sin(phi2)*Math.sin(phi3) + 10*Math.sin(phi1)*Math.sin(phi3)*Math.sin(theta2)*Math.sin(theta3) - 10*Math.cos(phi2)*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi1)*Math.sin(phi3))",
        "vars": [
          "cr",
          "phi1",
          "phi2",
          "phi3",
          "theta1",
          "theta2",
          "theta3"
        ]
      },
      {
        "expr": "Math.sin(phi3)*(10*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(phi2)*Math.cos(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) - Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.cos(theta2) - 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) - Math.cos(phi3)*Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.cos(theta2) - 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))",
        "vars": [
          "cr",
          "phi1",
          "phi2",
          "phi3",
          "theta1",
          "theta2",
          "theta3"
        ]
      },
      {
        "expr": "Math.cos(theta3)*Math.sin(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) - Math.cos(phi3)*(10*Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)) - Math.cos(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)",
        "vars": [
          "cr",
          "phi1",
          "phi2",
          "phi3",
          "theta1",
          "theta2",
          "theta3"
        ]
      },
      {
        "expr": "-Math.sin(phi3)*(10*Math.cos(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) - 10*Math.sin(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)))",
        "vars": [
          "cr",
          "phi1",
          "phi2",
          "phi3",
          "theta1",
          "theta2",
          "theta3"
        ]
      },
      {
        "expr": "Math.sin(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) - Math.cos(phi3)*(10*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)))",
        "vars": [
          "cr",
          "phi1",
          "phi2",
          "phi3",
          "theta1",
          "theta2",
          "theta3"
        ]
      }
    ],
    [
      {
        "expr": "(117*Math.cos(cr))/25 - (61*Math.sin(cr))/100 - Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(phi3)*(10*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) - Math.cos(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) - 10*Math.sin(cr + theta1)*Math.sin(phi1) - 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)",
        "vars": [
          "cr",
          "phi1",
          "phi2",
          "phi3",
          "theta1",
          "theta2",
          "theta3"
        ]
      },
      {
        "expr": "Math.sin(cr) + cr*Math.cos(cr)",
        "vars": "cr"
      },
      {
        "expr": "- Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(phi3)*(10*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) - Math.cos(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) - 10*Math.sin(cr + theta1)*Math.sin(phi1) - 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)",
        "vars": [
          "cr",
          "phi1",
          "phi2",
          "phi3",
          "theta1",
          "theta2",
          "theta3"
        ]
      },
      {
        "expr": "Math.cos(cr + theta1)*(10*Math.cos(phi1) + 10*Math.cos(phi1)*Math.cos(phi2) + 10*Math.cos(phi1)*Math.cos(phi2)*Math.cos(phi3) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 10*Math.cos(phi3)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 10*Math.cos(phi1)*Math.cos(theta3)*Math.sin(phi2)*Math.sin(phi3) + 10*Math.sin(phi1)*Math.sin(phi3)*Math.sin(theta2)*Math.sin(theta3) - 10*Math.cos(phi2)*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi1)*Math.sin(phi3))",
        "vars": [
          "cr",
          "phi1",
          "phi2",
          "phi3",
          "theta1",
          "theta2",
          "theta3"
        ]
      },
      {
        "expr": "Math.sin(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(phi2)*Math.cos(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) - Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.cos(theta2) + 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) - Math.cos(phi3)*Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.cos(theta2) + 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))",
        "vars": [
          "cr",
          "phi1",
          "phi2",
          "phi3",
          "theta1",
          "theta2",
          "theta3"
        ]
      },
      {
        "expr": "Math.cos(theta3)*Math.sin(phi3)*(10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) - Math.cos(phi3)*(10*Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)) - Math.cos(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)",
        "vars": [
          "cr",
          "phi1",
          "phi2",
          "phi3",
          "theta1",
          "theta2",
          "theta3"
        ]
      },
      {
        "expr": "-Math.sin(phi3)*(10*Math.cos(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) - 10*Math.sin(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)))",
        "vars": [
          "cr",
          "phi1",
          "phi2",
          "phi3",
          "theta1",
          "theta2",
          "theta3"
        ]
      },
      {
        "expr": "Math.sin(phi3)*(10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) - Math.cos(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)))",
        "vars": [
          "cr",
          "phi1",
          "phi2",
          "phi3",
          "theta1",
          "theta2",
          "theta3"
        ]
      }
    ],
    [
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "10*Math.sin(phi1) + 10*Math.cos(phi2)*Math.sin(phi1) - Math.sin(phi3)*(10*Math.cos(theta3)*(Math.sin(phi1)*Math.sin(phi2) - Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2)) + 10*Math.cos(phi1)*Math.sin(theta2)*Math.sin(theta3)) + Math.cos(phi3)*(10*Math.cos(phi2)*Math.sin(phi1) + 10*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2)) + 10*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2)",
        "vars": [
          "phi1",
          "phi2",
          "phi3",
          "theta2",
          "theta3"
        ]
      },
      {
        "expr": "-Math.sin(phi1)*(10*Math.sin(phi2)*Math.sin(theta2) + 10*Math.cos(theta2)*Math.sin(phi3)*Math.sin(theta3) + 10*Math.cos(phi3)*Math.sin(phi2)*Math.sin(theta2) + 10*Math.cos(phi2)*Math.cos(theta3)*Math.sin(phi3)*Math.sin(theta2))",
        "vars": [
          "phi1",
          "phi2",
          "phi3",
          "theta2",
          "theta3"
        ]
      },
      {
        "expr": "10*Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi3)*(10*Math.cos(phi1)*Math.sin(phi2) + 10*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + Math.cos(theta3)*Math.sin(phi3)*(10*Math.cos(phi1)*Math.cos(phi2) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) + 10*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)",
        "vars": [
          "phi1",
          "phi2",
          "phi3",
          "theta2",
          "theta3"
        ]
      },
      {
        "expr": "-Math.sin(phi3)*(10*Math.sin(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + 10*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2))",
        "vars": [
          "phi1",
          "phi2",
          "phi3",
          "theta2",
          "theta3"
        ]
      },
      {
        "expr": "Math.cos(phi3)*(10*Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - 10*Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) + Math.sin(phi3)*(10*Math.cos(phi1)*Math.cos(phi2) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))",
        "vars": [
          "phi1",
          "phi2",
          "phi3",
          "theta2",
          "theta3"
        ]
      }
    ],
    [
      {
        "expr": "Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2) + Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3)",
        "vars": [
          "phi1",
          "phi2",
          "theta2",
          "theta3"
        ]
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2) + Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3)",
        "vars": [
          "phi1",
          "phi2",
          "theta2",
          "theta3"
        ]
      },
      {
        "expr": "Math.cos(theta2)*Math.cos(theta3) - Math.cos(phi2)*Math.sin(theta2)*Math.sin(theta3)",
        "vars": [
          "phi2",
          "theta2",
          "theta3"
        ]
      },
      {
        "expr": "Math.sin(phi2)*Math.sin(theta3)",
        "vars": [
          "phi2",
          "theta3"
        ]
      },
      {
        "expr": "Math.cos(theta3)",
        "vars": "theta3"
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "1",
        "vars": []
      }
    ],
    [
      {
        "expr": "Math.cos(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) + Math.sin(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))",
        "vars": [
          "phi1",
          "phi2",
          "phi3",
          "theta2",
          "theta3"
        ]
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "Math.cos(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) + Math.sin(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))",
        "vars": [
          "phi1",
          "phi2",
          "phi3",
          "theta2",
          "theta3"
        ]
      },
      {
        "expr": "Math.sin(phi2)*Math.sin(phi3)*Math.sin(theta2) - Math.cos(phi3)*(Math.cos(theta2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta3)*Math.sin(theta2))",
        "vars": [
          "phi2",
          "phi3",
          "theta2",
          "theta3"
        ]
      },
      {
        "expr": "Math.cos(phi2)*Math.sin(phi3) + Math.cos(phi3)*Math.cos(theta3)*Math.sin(phi2)",
        "vars": [
          "phi2",
          "phi3",
          "theta3"
        ]
      },
      {
        "expr": "-Math.cos(phi3)*Math.sin(theta3)",
        "vars": [
          "phi3",
          "theta3"
        ]
      },
      {
        "expr": "Math.sin(phi3)",
        "vars": "phi3"
      },
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "Math.cos(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) - Math.sin(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3))",
        "vars": [
          "phi1",
          "phi2",
          "phi3",
          "theta2",
          "theta3"
        ]
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "Math.cos(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) - Math.sin(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3))",
        "vars": [
          "phi1",
          "phi2",
          "phi3",
          "theta2",
          "theta3"
        ]
      },
      {
        "expr": "Math.sin(phi3)*(Math.cos(theta2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta3)*Math.sin(theta2)) + Math.cos(phi3)*Math.sin(phi2)*Math.sin(theta2)",
        "vars": [
          "phi2",
          "phi3",
          "theta2",
          "theta3"
        ]
      },
      {
        "expr": "Math.cos(phi2)*Math.cos(phi3) - Math.cos(theta3)*Math.sin(phi2)*Math.sin(phi3)",
        "vars": [
          "phi2",
          "phi3",
          "theta3"
        ]
      },
      {
        "expr": "Math.sin(phi3)*Math.sin(theta3)",
        "vars": [
          "phi3",
          "theta3"
        ]
      },
      {
        "expr": "Math.cos(phi3)",
        "vars": "phi3"
      },
      {
        "expr": "0",
        "vars": []
      }
    ]
  ],
  "Bt": [
    [
      {
        "expr": "- (61*Math.cos(cr))/100 - (117*Math.sin(cr))/25",
        "vars": "cr"
      },
      {
        "expr": "(117*Math.cos(cr))/25 - (61*Math.sin(cr))/100",
        "vars": "cr"
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "1",
        "vars": []
      },
      {
        "expr": "- (61*Math.cos(cr))/100 - (117*Math.sin(cr))/25",
        "vars": "cr"
      },
      {
        "expr": "(117*Math.cos(cr))/25 - (61*Math.sin(cr))/100",
        "vars": "cr"
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "1",
        "vars": []
      },
      {
        "expr": "- (61*Math.cos(cr))/100 - (117*Math.sin(cr))/25",
        "vars": "cr"
      },
      {
        "expr": "(117*Math.cos(cr))/25 - (61*Math.sin(cr))/100",
        "vars": "cr"
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "1",
        "vars": []
      },
      {
        "expr": "- (61*Math.cos(cr))/100 - (117*Math.sin(cr))/25",
        "vars": "cr"
      },
      {
        "expr": "(117*Math.cos(cr))/25 - (61*Math.sin(cr))/100",
        "vars": "cr"
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "Math.sin(phi1)",
        "vars": "phi1"
      },
      {
        "expr": "Math.cos(phi1)",
        "vars": "phi1"
      },
      {
        "expr": "- (61*Math.cos(cr))/100 - (117*Math.sin(cr))/25 - 10*Math.cos(cr + theta1)*Math.sin(phi1)",
        "vars": [
          "cr",
          "phi1",
          "theta1"
        ]
      },
      {
        "expr": "(117*Math.cos(cr))/25 - (61*Math.sin(cr))/100 - 10*Math.sin(cr + theta1)*Math.sin(phi1)",
        "vars": [
          "cr",
          "phi1",
          "theta1"
        ]
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "Math.sin(phi1)",
        "vars": "phi1"
      },
      {
        "expr": "Math.cos(phi1)",
        "vars": "phi1"
      },
      {
        "expr": "- (61*Math.cos(cr))/100 - (117*Math.sin(cr))/25 - 10*Math.cos(cr + theta1)*Math.sin(phi1)",
        "vars": [
          "cr",
          "phi1",
          "theta1"
        ]
      },
      {
        "expr": "(117*Math.cos(cr))/25 - (61*Math.sin(cr))/100 - 10*Math.sin(cr + theta1)*Math.sin(phi1)",
        "vars": [
          "cr",
          "phi1",
          "theta1"
        ]
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "Math.sin(phi1)*Math.sin(theta2)",
        "vars": [
          "phi1",
          "theta2"
        ]
      },
      {
        "expr": "Math.cos(theta2)*Math.sin(phi1)",
        "vars": [
          "phi1",
          "theta2"
        ]
      },
      {
        "expr": "Math.cos(phi1)",
        "vars": "phi1"
      },
      {
        "expr": "- (61*Math.cos(cr))/100 - (117*Math.sin(cr))/25 - 10*Math.cos(cr + theta1)*Math.sin(phi1)",
        "vars": [
          "cr",
          "phi1",
          "theta1"
        ]
      },
      {
        "expr": "(117*Math.cos(cr))/25 - (61*Math.sin(cr))/100 - 10*Math.sin(cr + theta1)*Math.sin(phi1)",
        "vars": [
          "cr",
          "phi1",
          "theta1"
        ]
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "Math.sin(phi1)*Math.sin(theta2)",
        "vars": [
          "phi1",
          "theta2"
        ]
      },
      {
        "expr": "Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)",
        "vars": [
          "phi1",
          "phi2",
          "theta2"
        ]
      },
      {
        "expr": "Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)",
        "vars": [
          "phi1",
          "phi2",
          "theta2"
        ]
      },
      {
        "expr": "Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - (117*Math.sin(cr))/25 - (61*Math.cos(cr))/100 - 10*Math.cos(cr + theta1)*Math.sin(phi1) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)",
        "vars": [
          "cr",
          "phi1",
          "phi2",
          "theta1",
          "theta2"
        ]
      },
      {
        "expr": "(117*Math.cos(cr))/25 - (61*Math.sin(cr))/100 - Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.sin(cr + theta1)*Math.sin(phi1) - 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)",
        "vars": [
          "cr",
          "phi1",
          "phi2",
          "theta1",
          "theta2"
        ]
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "Math.sin(phi1)*Math.sin(theta2)",
        "vars": [
          "phi1",
          "theta2"
        ]
      },
      {
        "expr": "Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)",
        "vars": [
          "phi1",
          "phi2",
          "theta2"
        ]
      },
      {
        "expr": "Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)",
        "vars": [
          "phi1",
          "phi2",
          "theta2"
        ]
      },
      {
        "expr": "Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - (117*Math.sin(cr))/25 - (61*Math.cos(cr))/100 - 10*Math.cos(cr + theta1)*Math.sin(phi1) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)",
        "vars": [
          "cr",
          "phi1",
          "phi2",
          "theta1",
          "theta2"
        ]
      },
      {
        "expr": "(117*Math.cos(cr))/25 - (61*Math.sin(cr))/100 - Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.sin(cr + theta1)*Math.sin(phi1) - 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)",
        "vars": [
          "cr",
          "phi1",
          "phi2",
          "theta1",
          "theta2"
        ]
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "Math.sin(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2)",
        "vars": [
          "phi1",
          "phi2",
          "theta2",
          "theta3"
        ]
      },
      {
        "expr": "Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)",
        "vars": [
          "phi1",
          "phi2",
          "theta2",
          "theta3"
        ]
      },
      {
        "expr": "Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)",
        "vars": [
          "phi1",
          "phi2",
          "theta2"
        ]
      },
      {
        "expr": "Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - (117*Math.sin(cr))/25 - (61*Math.cos(cr))/100 - 10*Math.cos(cr + theta1)*Math.sin(phi1) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)",
        "vars": [
          "cr",
          "phi1",
          "phi2",
          "theta1",
          "theta2"
        ]
      },
      {
        "expr": "(117*Math.cos(cr))/25 - (61*Math.sin(cr))/100 - Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.sin(cr + theta1)*Math.sin(phi1) - 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)",
        "vars": [
          "cr",
          "phi1",
          "phi2",
          "theta1",
          "theta2"
        ]
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2) + Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3)",
        "vars": [
          "phi1",
          "phi2",
          "theta2",
          "theta3"
        ]
      },
      {
        "expr": "Math.cos(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) + Math.sin(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))",
        "vars": [
          "phi1",
          "phi2",
          "phi3",
          "theta2",
          "theta3"
        ]
      },
      {
        "expr": "Math.cos(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) - Math.sin(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3))",
        "vars": [
          "phi1",
          "phi2",
          "phi3",
          "theta2",
          "theta3"
        ]
      },
      {
        "expr": "Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - (117*Math.sin(cr))/25 - (61*Math.cos(cr))/100 + Math.sin(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) + Math.cos(phi3)*(10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) - 10*Math.cos(cr + theta1)*Math.sin(phi1) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)",
        "vars": [
          "cr",
          "phi1",
          "phi2",
          "phi3",
          "theta1",
          "theta2",
          "theta3"
        ]
      },
      {
        "expr": "(117*Math.cos(cr))/25 - (61*Math.sin(cr))/100 - Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(phi3)*(10*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) - Math.cos(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) - 10*Math.sin(cr + theta1)*Math.sin(phi1) - 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)",
        "vars": [
          "cr",
          "phi1",
          "phi2",
          "phi3",
          "theta1",
          "theta2",
          "theta3"
        ]
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2) + Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3)",
        "vars": [
          "phi1",
          "phi2",
          "theta2",
          "theta3"
        ]
      },
      {
        "expr": "Math.cos(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) + Math.sin(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))",
        "vars": [
          "phi1",
          "phi2",
          "phi3",
          "theta2",
          "theta3"
        ]
      },
      {
        "expr": "Math.cos(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) - Math.sin(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3))",
        "vars": [
          "phi1",
          "phi2",
          "phi3",
          "theta2",
          "theta3"
        ]
      }
    ],
    [
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "Math.cos(cr) - cr*Math.sin(cr)",
        "vars": "cr"
      },
      {
        "expr": "Math.sin(cr) + cr*Math.cos(cr)",
        "vars": "cr"
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "Math.cos(cr) - cr*Math.sin(cr)",
        "vars": "cr"
      },
      {
        "expr": "Math.sin(cr) + cr*Math.cos(cr)",
        "vars": "cr"
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "Math.cos(cr) - cr*Math.sin(cr)",
        "vars": "cr"
      },
      {
        "expr": "Math.sin(cr) + cr*Math.cos(cr)",
        "vars": "cr"
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "Math.cos(cr) - cr*Math.sin(cr)",
        "vars": "cr"
      },
      {
        "expr": "Math.sin(cr) + cr*Math.cos(cr)",
        "vars": "cr"
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "Math.cos(cr) - cr*Math.sin(cr)",
        "vars": "cr"
      },
      {
        "expr": "Math.sin(cr) + cr*Math.cos(cr)",
        "vars": "cr"
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "Math.cos(cr) - cr*Math.sin(cr)",
        "vars": "cr"
      },
      {
        "expr": "Math.sin(cr) + cr*Math.cos(cr)",
        "vars": "cr"
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "Math.cos(cr) - cr*Math.sin(cr)",
        "vars": "cr"
      },
      {
        "expr": "Math.sin(cr) + cr*Math.cos(cr)",
        "vars": "cr"
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "Math.cos(cr) - cr*Math.sin(cr)",
        "vars": "cr"
      },
      {
        "expr": "Math.sin(cr) + cr*Math.cos(cr)",
        "vars": "cr"
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "Math.cos(cr) - cr*Math.sin(cr)",
        "vars": "cr"
      },
      {
        "expr": "Math.sin(cr) + cr*Math.cos(cr)",
        "vars": "cr"
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "Math.cos(cr) - cr*Math.sin(cr)",
        "vars": "cr"
      },
      {
        "expr": "Math.sin(cr) + cr*Math.cos(cr)",
        "vars": "cr"
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "1",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "Math.sin(phi1)",
        "vars": "phi1"
      },
      {
        "expr": "Math.cos(phi1)",
        "vars": "phi1"
      },
      {
        "expr": "-10*Math.cos(cr + theta1)*Math.sin(phi1)",
        "vars": [
          "cr",
          "phi1",
          "theta1"
        ]
      },
      {
        "expr": "-10*Math.sin(cr + theta1)*Math.sin(phi1)",
        "vars": [
          "cr",
          "phi1",
          "theta1"
        ]
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "Math.sin(phi1)",
        "vars": "phi1"
      },
      {
        "expr": "Math.cos(phi1)",
        "vars": "phi1"
      },
      {
        "expr": "-10*Math.cos(cr + theta1)*Math.sin(phi1)",
        "vars": [
          "cr",
          "phi1",
          "theta1"
        ]
      },
      {
        "expr": "-10*Math.sin(cr + theta1)*Math.sin(phi1)",
        "vars": [
          "cr",
          "phi1",
          "theta1"
        ]
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "Math.sin(phi1)*Math.sin(theta2)",
        "vars": [
          "phi1",
          "theta2"
        ]
      },
      {
        "expr": "Math.cos(theta2)*Math.sin(phi1)",
        "vars": [
          "phi1",
          "theta2"
        ]
      },
      {
        "expr": "Math.cos(phi1)",
        "vars": "phi1"
      },
      {
        "expr": "-10*Math.cos(cr + theta1)*Math.sin(phi1)",
        "vars": [
          "cr",
          "phi1",
          "theta1"
        ]
      },
      {
        "expr": "-10*Math.sin(cr + theta1)*Math.sin(phi1)",
        "vars": [
          "cr",
          "phi1",
          "theta1"
        ]
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "Math.sin(phi1)*Math.sin(theta2)",
        "vars": [
          "phi1",
          "theta2"
        ]
      },
      {
        "expr": "Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)",
        "vars": [
          "phi1",
          "phi2",
          "theta2"
        ]
      },
      {
        "expr": "Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)",
        "vars": [
          "phi1",
          "phi2",
          "theta2"
        ]
      },
      {
        "expr": "Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.sin(phi1) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)",
        "vars": [
          "cr",
          "phi1",
          "phi2",
          "theta1",
          "theta2"
        ]
      },
      {
        "expr": "- Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.sin(cr + theta1)*Math.sin(phi1) - 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)",
        "vars": [
          "cr",
          "phi1",
          "phi2",
          "theta1",
          "theta2"
        ]
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "Math.sin(phi1)*Math.sin(theta2)",
        "vars": [
          "phi1",
          "theta2"
        ]
      },
      {
        "expr": "Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)",
        "vars": [
          "phi1",
          "phi2",
          "theta2"
        ]
      },
      {
        "expr": "Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)",
        "vars": [
          "phi1",
          "phi2",
          "theta2"
        ]
      },
      {
        "expr": "Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.sin(phi1) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)",
        "vars": [
          "cr",
          "phi1",
          "phi2",
          "theta1",
          "theta2"
        ]
      },
      {
        "expr": "- Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.sin(cr + theta1)*Math.sin(phi1) - 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)",
        "vars": [
          "cr",
          "phi1",
          "phi2",
          "theta1",
          "theta2"
        ]
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "Math.sin(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2)",
        "vars": [
          "phi1",
          "phi2",
          "theta2",
          "theta3"
        ]
      },
      {
        "expr": "Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)",
        "vars": [
          "phi1",
          "phi2",
          "theta2",
          "theta3"
        ]
      },
      {
        "expr": "Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)",
        "vars": [
          "phi1",
          "phi2",
          "theta2"
        ]
      },
      {
        "expr": "Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.sin(phi1) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)",
        "vars": [
          "cr",
          "phi1",
          "phi2",
          "theta1",
          "theta2"
        ]
      },
      {
        "expr": "- Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.sin(cr + theta1)*Math.sin(phi1) - 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)",
        "vars": [
          "cr",
          "phi1",
          "phi2",
          "theta1",
          "theta2"
        ]
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2) + Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3)",
        "vars": [
          "phi1",
          "phi2",
          "theta2",
          "theta3"
        ]
      },
      {
        "expr": "Math.cos(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) + Math.sin(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))",
        "vars": [
          "phi1",
          "phi2",
          "phi3",
          "theta2",
          "theta3"
        ]
      },
      {
        "expr": "Math.cos(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) - Math.sin(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3))",
        "vars": [
          "phi1",
          "phi2",
          "phi3",
          "theta2",
          "theta3"
        ]
      },
      {
        "expr": "Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.sin(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) + Math.cos(phi3)*(10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) - 10*Math.cos(cr + theta1)*Math.sin(phi1) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)",
        "vars": [
          "cr",
          "phi1",
          "phi2",
          "phi3",
          "theta1",
          "theta2",
          "theta3"
        ]
      },
      {
        "expr": "- Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(phi3)*(10*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) - Math.cos(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) - 10*Math.sin(cr + theta1)*Math.sin(phi1) - 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)",
        "vars": [
          "cr",
          "phi1",
          "phi2",
          "phi3",
          "theta1",
          "theta2",
          "theta3"
        ]
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2) + Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3)",
        "vars": [
          "phi1",
          "phi2",
          "theta2",
          "theta3"
        ]
      },
      {
        "expr": "Math.cos(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) + Math.sin(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))",
        "vars": [
          "phi1",
          "phi2",
          "phi3",
          "theta2",
          "theta3"
        ]
      },
      {
        "expr": "Math.cos(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) - Math.sin(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3))",
        "vars": [
          "phi1",
          "phi2",
          "phi3",
          "theta2",
          "theta3"
        ]
      }
    ],
    [
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "1",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "-10*Math.sin(cr + theta1)*Math.cos(phi1)",
        "vars": [
          "cr",
          "phi1",
          "theta1"
        ]
      },
      {
        "expr": "10*Math.cos(cr + theta1)*Math.cos(phi1)",
        "vars": [
          "cr",
          "phi1",
          "theta1"
        ]
      },
      {
        "expr": "10*Math.sin(phi1)",
        "vars": "phi1"
      },
      {
        "expr": "1",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "-10*Math.sin(cr + theta1)*Math.cos(phi1)",
        "vars": [
          "cr",
          "phi1",
          "theta1"
        ]
      },
      {
        "expr": "10*Math.cos(cr + theta1)*Math.cos(phi1)",
        "vars": [
          "cr",
          "phi1",
          "theta1"
        ]
      },
      {
        "expr": "10*Math.sin(phi1)",
        "vars": "phi1"
      },
      {
        "expr": "Math.cos(theta2)",
        "vars": "theta2"
      },
      {
        "expr": "-Math.sin(theta2)",
        "vars": "theta2"
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "-10*Math.sin(cr + theta1)*Math.cos(phi1)",
        "vars": [
          "cr",
          "phi1",
          "theta1"
        ]
      },
      {
        "expr": "10*Math.cos(cr + theta1)*Math.cos(phi1)",
        "vars": [
          "cr",
          "phi1",
          "theta1"
        ]
      },
      {
        "expr": "10*Math.sin(phi1)",
        "vars": "phi1"
      },
      {
        "expr": "Math.cos(theta2)",
        "vars": "theta2"
      },
      {
        "expr": "-Math.cos(phi2)*Math.sin(theta2)",
        "vars": [
          "phi2",
          "theta2"
        ]
      },
      {
        "expr": "Math.sin(phi2)*Math.sin(theta2)",
        "vars": [
          "phi2",
          "theta2"
        ]
      },
      {
        "expr": "-Math.sin(cr + theta1)*(10*Math.cos(phi1) + 10*Math.cos(phi1)*Math.cos(phi2) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))",
        "vars": [
          "cr",
          "phi1",
          "phi2",
          "theta1",
          "theta2"
        ]
      },
      {
        "expr": "Math.cos(cr + theta1)*(10*Math.cos(phi1) + 10*Math.cos(phi1)*Math.cos(phi2) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))",
        "vars": [
          "cr",
          "phi1",
          "phi2",
          "theta1",
          "theta2"
        ]
      },
      {
        "expr": "10*Math.sin(phi1) + 10*Math.cos(phi2)*Math.sin(phi1) + 10*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2)",
        "vars": [
          "phi1",
          "phi2",
          "theta2"
        ]
      },
      {
        "expr": "Math.cos(theta2)",
        "vars": "theta2"
      },
      {
        "expr": "-Math.cos(phi2)*Math.sin(theta2)",
        "vars": [
          "phi2",
          "theta2"
        ]
      },
      {
        "expr": "Math.sin(phi2)*Math.sin(theta2)",
        "vars": [
          "phi2",
          "theta2"
        ]
      },
      {
        "expr": "-Math.sin(cr + theta1)*(10*Math.cos(phi1) + 10*Math.cos(phi1)*Math.cos(phi2) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))",
        "vars": [
          "cr",
          "phi1",
          "phi2",
          "theta1",
          "theta2"
        ]
      },
      {
        "expr": "Math.cos(cr + theta1)*(10*Math.cos(phi1) + 10*Math.cos(phi1)*Math.cos(phi2) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))",
        "vars": [
          "cr",
          "phi1",
          "phi2",
          "theta1",
          "theta2"
        ]
      },
      {
        "expr": "10*Math.sin(phi1) + 10*Math.cos(phi2)*Math.sin(phi1) + 10*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2)",
        "vars": [
          "phi1",
          "phi2",
          "theta2"
        ]
      },
      {
        "expr": "Math.cos(theta2)*Math.cos(theta3) - Math.cos(phi2)*Math.sin(theta2)*Math.sin(theta3)",
        "vars": [
          "phi2",
          "theta2",
          "theta3"
        ]
      },
      {
        "expr": "- Math.cos(theta2)*Math.sin(theta3) - Math.cos(phi2)*Math.cos(theta3)*Math.sin(theta2)",
        "vars": [
          "phi2",
          "theta2",
          "theta3"
        ]
      },
      {
        "expr": "Math.sin(phi2)*Math.sin(theta2)",
        "vars": [
          "phi2",
          "theta2"
        ]
      },
      {
        "expr": "-Math.sin(cr + theta1)*(10*Math.cos(phi1) + 10*Math.cos(phi1)*Math.cos(phi2) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))",
        "vars": [
          "cr",
          "phi1",
          "phi2",
          "theta1",
          "theta2"
        ]
      },
      {
        "expr": "Math.cos(cr + theta1)*(10*Math.cos(phi1) + 10*Math.cos(phi1)*Math.cos(phi2) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))",
        "vars": [
          "cr",
          "phi1",
          "phi2",
          "theta1",
          "theta2"
        ]
      },
      {
        "expr": "10*Math.sin(phi1) + 10*Math.cos(phi2)*Math.sin(phi1) + 10*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2)",
        "vars": [
          "phi1",
          "phi2",
          "theta2"
        ]
      },
      {
        "expr": "Math.cos(theta2)*Math.cos(theta3) - Math.cos(phi2)*Math.sin(theta2)*Math.sin(theta3)",
        "vars": [
          "phi2",
          "theta2",
          "theta3"
        ]
      },
      {
        "expr": "Math.sin(phi2)*Math.sin(phi3)*Math.sin(theta2) - Math.cos(phi3)*(Math.cos(theta2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta3)*Math.sin(theta2))",
        "vars": [
          "phi2",
          "phi3",
          "theta2",
          "theta3"
        ]
      },
      {
        "expr": "Math.sin(phi3)*(Math.cos(theta2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta3)*Math.sin(theta2)) + Math.cos(phi3)*Math.sin(phi2)*Math.sin(theta2)",
        "vars": [
          "phi2",
          "phi3",
          "theta2",
          "theta3"
        ]
      },
      {
        "expr": "-Math.sin(cr + theta1)*(10*Math.cos(phi1) + 10*Math.cos(phi1)*Math.cos(phi2) + 10*Math.cos(phi1)*Math.cos(phi2)*Math.cos(phi3) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 10*Math.cos(phi3)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 10*Math.cos(phi1)*Math.cos(theta3)*Math.sin(phi2)*Math.sin(phi3) + 10*Math.sin(phi1)*Math.sin(phi3)*Math.sin(theta2)*Math.sin(theta3) - 10*Math.cos(phi2)*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi1)*Math.sin(phi3))",
        "vars": [
          "cr",
          "phi1",
          "phi2",
          "phi3",
          "theta1",
          "theta2",
          "theta3"
        ]
      },
      {
        "expr": "Math.cos(cr + theta1)*(10*Math.cos(phi1) + 10*Math.cos(phi1)*Math.cos(phi2) + 10*Math.cos(phi1)*Math.cos(phi2)*Math.cos(phi3) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 10*Math.cos(phi3)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 10*Math.cos(phi1)*Math.cos(theta3)*Math.sin(phi2)*Math.sin(phi3) + 10*Math.sin(phi1)*Math.sin(phi3)*Math.sin(theta2)*Math.sin(theta3) - 10*Math.cos(phi2)*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi1)*Math.sin(phi3))",
        "vars": [
          "cr",
          "phi1",
          "phi2",
          "phi3",
          "theta1",
          "theta2",
          "theta3"
        ]
      },
      {
        "expr": "10*Math.sin(phi1) + 10*Math.cos(phi2)*Math.sin(phi1) - Math.sin(phi3)*(10*Math.cos(theta3)*(Math.sin(phi1)*Math.sin(phi2) - Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2)) + 10*Math.cos(phi1)*Math.sin(theta2)*Math.sin(theta3)) + Math.cos(phi3)*(10*Math.cos(phi2)*Math.sin(phi1) + 10*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2)) + 10*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2)",
        "vars": [
          "phi1",
          "phi2",
          "phi3",
          "theta2",
          "theta3"
        ]
      },
      {
        "expr": "Math.cos(theta2)*Math.cos(theta3) - Math.cos(phi2)*Math.sin(theta2)*Math.sin(theta3)",
        "vars": [
          "phi2",
          "theta2",
          "theta3"
        ]
      },
      {
        "expr": "Math.sin(phi2)*Math.sin(phi3)*Math.sin(theta2) - Math.cos(phi3)*(Math.cos(theta2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta3)*Math.sin(theta2))",
        "vars": [
          "phi2",
          "phi3",
          "theta2",
          "theta3"
        ]
      },
      {
        "expr": "Math.sin(phi3)*(Math.cos(theta2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta3)*Math.sin(theta2)) + Math.cos(phi3)*Math.sin(phi2)*Math.sin(theta2)",
        "vars": [
          "phi2",
          "phi3",
          "theta2",
          "theta3"
        ]
      }
    ],
    [
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "1",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "Math.sin(phi2)",
        "vars": "phi2"
      },
      {
        "expr": "Math.cos(phi2)",
        "vars": "phi2"
      },
      {
        "expr": "-Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.cos(theta2) - 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))",
        "vars": [
          "cr",
          "phi1",
          "phi2",
          "theta1",
          "theta2"
        ]
      },
      {
        "expr": "-Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.cos(theta2) + 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))",
        "vars": [
          "cr",
          "phi1",
          "phi2",
          "theta1",
          "theta2"
        ]
      },
      {
        "expr": "-10*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta2)",
        "vars": [
          "phi1",
          "phi2",
          "theta2"
        ]
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "Math.sin(phi2)",
        "vars": "phi2"
      },
      {
        "expr": "Math.cos(phi2)",
        "vars": "phi2"
      },
      {
        "expr": "-Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.cos(theta2) - 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))",
        "vars": [
          "cr",
          "phi1",
          "phi2",
          "theta1",
          "theta2"
        ]
      },
      {
        "expr": "-Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.cos(theta2) + 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))",
        "vars": [
          "cr",
          "phi1",
          "phi2",
          "theta1",
          "theta2"
        ]
      },
      {
        "expr": "-10*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta2)",
        "vars": [
          "phi1",
          "phi2",
          "theta2"
        ]
      },
      {
        "expr": "Math.sin(phi2)*Math.sin(theta3)",
        "vars": [
          "phi2",
          "theta3"
        ]
      },
      {
        "expr": "Math.cos(theta3)*Math.sin(phi2)",
        "vars": [
          "phi2",
          "theta3"
        ]
      },
      {
        "expr": "Math.cos(phi2)",
        "vars": "phi2"
      },
      {
        "expr": "-Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.cos(theta2) - 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))",
        "vars": [
          "cr",
          "phi1",
          "phi2",
          "theta1",
          "theta2"
        ]
      },
      {
        "expr": "-Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.cos(theta2) + 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))",
        "vars": [
          "cr",
          "phi1",
          "phi2",
          "theta1",
          "theta2"
        ]
      },
      {
        "expr": "-10*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta2)",
        "vars": [
          "phi1",
          "phi2",
          "theta2"
        ]
      },
      {
        "expr": "Math.sin(phi2)*Math.sin(theta3)",
        "vars": [
          "phi2",
          "theta3"
        ]
      },
      {
        "expr": "Math.cos(phi2)*Math.sin(phi3) + Math.cos(phi3)*Math.cos(theta3)*Math.sin(phi2)",
        "vars": [
          "phi2",
          "phi3",
          "theta3"
        ]
      },
      {
        "expr": "Math.cos(phi2)*Math.cos(phi3) - Math.cos(theta3)*Math.sin(phi2)*Math.sin(phi3)",
        "vars": [
          "phi2",
          "phi3",
          "theta3"
        ]
      },
      {
        "expr": "Math.sin(phi3)*(10*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(phi2)*Math.cos(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) - Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.cos(theta2) - 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) - Math.cos(phi3)*Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.cos(theta2) - 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))",
        "vars": [
          "cr",
          "phi1",
          "phi2",
          "phi3",
          "theta1",
          "theta2",
          "theta3"
        ]
      },
      {
        "expr": "Math.sin(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(phi2)*Math.cos(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) - Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.cos(theta2) + 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) - Math.cos(phi3)*Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.cos(theta2) + 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))",
        "vars": [
          "cr",
          "phi1",
          "phi2",
          "phi3",
          "theta1",
          "theta2",
          "theta3"
        ]
      },
      {
        "expr": "-Math.sin(phi1)*(10*Math.sin(phi2)*Math.sin(theta2) + 10*Math.cos(theta2)*Math.sin(phi3)*Math.sin(theta3) + 10*Math.cos(phi3)*Math.sin(phi2)*Math.sin(theta2) + 10*Math.cos(phi2)*Math.cos(theta3)*Math.sin(phi3)*Math.sin(theta2))",
        "vars": [
          "phi1",
          "phi2",
          "phi3",
          "theta2",
          "theta3"
        ]
      },
      {
        "expr": "Math.sin(phi2)*Math.sin(theta3)",
        "vars": [
          "phi2",
          "theta3"
        ]
      },
      {
        "expr": "Math.cos(phi2)*Math.sin(phi3) + Math.cos(phi3)*Math.cos(theta3)*Math.sin(phi2)",
        "vars": [
          "phi2",
          "phi3",
          "theta3"
        ]
      },
      {
        "expr": "Math.cos(phi2)*Math.cos(phi3) - Math.cos(theta3)*Math.sin(phi2)*Math.sin(phi3)",
        "vars": [
          "phi2",
          "phi3",
          "theta3"
        ]
      }
    ],
    [
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "1",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "10*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2) - Math.cos(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2))",
        "vars": [
          "cr",
          "phi1",
          "phi2",
          "theta1",
          "theta2"
        ]
      },
      {
        "expr": "- Math.cos(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)",
        "vars": [
          "cr",
          "phi1",
          "phi2",
          "theta1",
          "theta2"
        ]
      },
      {
        "expr": "10*Math.cos(phi1)*Math.sin(phi2) + 10*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)",
        "vars": [
          "phi1",
          "phi2",
          "theta2"
        ]
      },
      {
        "expr": "1",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "10*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2) - Math.cos(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2))",
        "vars": [
          "cr",
          "phi1",
          "phi2",
          "theta1",
          "theta2"
        ]
      },
      {
        "expr": "- Math.cos(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)",
        "vars": [
          "cr",
          "phi1",
          "phi2",
          "theta1",
          "theta2"
        ]
      },
      {
        "expr": "10*Math.cos(phi1)*Math.sin(phi2) + 10*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)",
        "vars": [
          "phi1",
          "phi2",
          "theta2"
        ]
      },
      {
        "expr": "Math.cos(theta3)",
        "vars": "theta3"
      },
      {
        "expr": "-Math.sin(theta3)",
        "vars": "theta3"
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "10*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2) - Math.cos(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2))",
        "vars": [
          "cr",
          "phi1",
          "phi2",
          "theta1",
          "theta2"
        ]
      },
      {
        "expr": "- Math.cos(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)",
        "vars": [
          "cr",
          "phi1",
          "phi2",
          "theta1",
          "theta2"
        ]
      },
      {
        "expr": "10*Math.cos(phi1)*Math.sin(phi2) + 10*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)",
        "vars": [
          "phi1",
          "phi2",
          "theta2"
        ]
      },
      {
        "expr": "Math.cos(theta3)",
        "vars": "theta3"
      },
      {
        "expr": "-Math.cos(phi3)*Math.sin(theta3)",
        "vars": [
          "phi3",
          "theta3"
        ]
      },
      {
        "expr": "Math.sin(phi3)*Math.sin(theta3)",
        "vars": [
          "phi3",
          "theta3"
        ]
      },
      {
        "expr": "Math.cos(theta3)*Math.sin(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) - Math.cos(phi3)*(10*Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)) - Math.cos(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)",
        "vars": [
          "cr",
          "phi1",
          "phi2",
          "phi3",
          "theta1",
          "theta2",
          "theta3"
        ]
      },
      {
        "expr": "Math.cos(theta3)*Math.sin(phi3)*(10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) - Math.cos(phi3)*(10*Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)) - Math.cos(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)",
        "vars": [
          "cr",
          "phi1",
          "phi2",
          "phi3",
          "theta1",
          "theta2",
          "theta3"
        ]
      },
      {
        "expr": "10*Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi3)*(10*Math.cos(phi1)*Math.sin(phi2) + 10*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + Math.cos(theta3)*Math.sin(phi3)*(10*Math.cos(phi1)*Math.cos(phi2) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) + 10*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)",
        "vars": [
          "phi1",
          "phi2",
          "phi3",
          "theta2",
          "theta3"
        ]
      },
      {
        "expr": "Math.cos(theta3)",
        "vars": "theta3"
      },
      {
        "expr": "-Math.cos(phi3)*Math.sin(theta3)",
        "vars": [
          "phi3",
          "theta3"
        ]
      },
      {
        "expr": "Math.sin(phi3)*Math.sin(theta3)",
        "vars": [
          "phi3",
          "theta3"
        ]
      }
    ],
    [
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "1",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "Math.sin(phi3)",
        "vars": "phi3"
      },
      {
        "expr": "Math.cos(phi3)",
        "vars": "phi3"
      },
      {
        "expr": "-Math.sin(phi3)*(10*Math.cos(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) - 10*Math.sin(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)))",
        "vars": [
          "cr",
          "phi1",
          "phi2",
          "phi3",
          "theta1",
          "theta2",
          "theta3"
        ]
      },
      {
        "expr": "-Math.sin(phi3)*(10*Math.cos(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) - 10*Math.sin(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)))",
        "vars": [
          "cr",
          "phi1",
          "phi2",
          "phi3",
          "theta1",
          "theta2",
          "theta3"
        ]
      },
      {
        "expr": "-Math.sin(phi3)*(10*Math.sin(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + 10*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2))",
        "vars": [
          "phi1",
          "phi2",
          "phi3",
          "theta2",
          "theta3"
        ]
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "Math.sin(phi3)",
        "vars": "phi3"
      },
      {
        "expr": "Math.cos(phi3)",
        "vars": "phi3"
      }
    ],
    [
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "1",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "Math.sin(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) - Math.cos(phi3)*(10*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)))",
        "vars": [
          "cr",
          "phi1",
          "phi2",
          "phi3",
          "theta1",
          "theta2",
          "theta3"
        ]
      },
      {
        "expr": "Math.sin(phi3)*(10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) - Math.cos(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)))",
        "vars": [
          "cr",
          "phi1",
          "phi2",
          "phi3",
          "theta1",
          "theta2",
          "theta3"
        ]
      },
      {
        "expr": "Math.cos(phi3)*(10*Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - 10*Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) + Math.sin(phi3)*(10*Math.cos(phi1)*Math.cos(phi2) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))",
        "vars": [
          "phi1",
          "phi2",
          "phi3",
          "theta2",
          "theta3"
        ]
      },
      {
        "expr": "1",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      }
    ]
  ],
  "Bdot": [
    [
      {
        "expr": "(61*crd*Math.sin(cr))/100 - (117*crd*Math.cos(cr))/25",
        "vars": [
          "cr",
          "crd"
        ]
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "- (61*crd*Math.cos(cr))/100 - (117*crd*Math.sin(cr))/25",
        "vars": [
          "cr",
          "crd"
        ]
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "(61*crd*Math.sin(cr))/100 - (117*crd*Math.cos(cr))/25",
        "vars": [
          "cr",
          "crd"
        ]
      },
      {
        "expr": "- 2*crd*Math.sin(cr) - cr*crd*Math.cos(cr)",
        "vars": [
          "cr",
          "crd"
        ]
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "- (61*crd*Math.cos(cr))/100 - (117*crd*Math.sin(cr))/25",
        "vars": [
          "cr",
          "crd"
        ]
      },
      {
        "expr": "2*crd*Math.cos(cr) - cr*crd*Math.sin(cr)",
        "vars": [
          "cr",
          "crd"
        ]
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "(61*crd*Math.sin(cr))/100 - (117*crd*Math.cos(cr))/25",
        "vars": [
          "cr",
          "crd"
        ]
      },
      {
        "expr": "- 2*crd*Math.sin(cr) - cr*crd*Math.cos(cr)",
        "vars": [
          "cr",
          "crd"
        ]
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "- (61*crd*Math.cos(cr))/100 - (117*crd*Math.sin(cr))/25",
        "vars": [
          "cr",
          "crd"
        ]
      },
      {
        "expr": "2*crd*Math.cos(cr) - cr*crd*Math.sin(cr)",
        "vars": [
          "cr",
          "crd"
        ]
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "(61*crd*Math.sin(cr))/100 - (117*crd*Math.cos(cr))/25",
        "vars": [
          "cr",
          "crd"
        ]
      },
      {
        "expr": "- 2*crd*Math.sin(cr) - cr*crd*Math.cos(cr)",
        "vars": [
          "cr",
          "crd"
        ]
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "- (61*crd*Math.cos(cr))/100 - (117*crd*Math.sin(cr))/25",
        "vars": [
          "cr",
          "crd"
        ]
      },
      {
        "expr": "2*crd*Math.cos(cr) - cr*crd*Math.sin(cr)",
        "vars": [
          "cr",
          "crd"
        ]
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "phid1*Math.cos(phi1)",
        "vars": [
          "phi1",
          "phid1"
        ]
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "phid1*Math.cos(phi1)",
        "vars": [
          "phi1",
          "phid1"
        ]
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "-phid1*Math.sin(phi1)",
        "vars": [
          "phi1",
          "phid1"
        ]
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "-phid1*Math.sin(phi1)",
        "vars": [
          "phi1",
          "phid1"
        ]
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "(61*crd*Math.sin(cr))/100 - (117*crd*Math.cos(cr))/25 + 10*Math.sin(cr + theta1)*Math.sin(phi1)*(crd + thetad1) - 10*phid1*Math.cos(cr + theta1)*Math.cos(phi1)",
        "vars": [
          "cr",
          "crd",
          "phi1",
          "phid1",
          "theta1",
          "thetad1"
        ]
      },
      {
        "expr": "- 2*crd*Math.sin(cr) - cr*crd*Math.cos(cr)",
        "vars": [
          "cr",
          "crd"
        ]
      },
      {
        "expr": "10*Math.sin(cr + theta1)*Math.sin(phi1)*(crd + thetad1) - 10*phid1*Math.cos(cr + theta1)*Math.cos(phi1)",
        "vars": [
          "cr",
          "crd",
          "phi1",
          "phid1",
          "theta1",
          "thetad1"
        ]
      },
      {
        "expr": "10*phid1*Math.sin(cr + theta1)*Math.sin(phi1) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*(crd + thetad1)",
        "vars": [
          "cr",
          "crd",
          "phi1",
          "phid1",
          "theta1",
          "thetad1"
        ]
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "- (61*crd*Math.cos(cr))/100 - (117*crd*Math.sin(cr))/25 - 10*Math.cos(cr + theta1)*Math.sin(phi1)*(crd + thetad1) - 10*phid1*Math.sin(cr + theta1)*Math.cos(phi1)",
        "vars": [
          "cr",
          "crd",
          "phi1",
          "phid1",
          "theta1",
          "thetad1"
        ]
      },
      {
        "expr": "2*crd*Math.cos(cr) - cr*crd*Math.sin(cr)",
        "vars": [
          "cr",
          "crd"
        ]
      },
      {
        "expr": "- 10*Math.cos(cr + theta1)*Math.sin(phi1)*(crd + thetad1) - 10*phid1*Math.sin(cr + theta1)*Math.cos(phi1)",
        "vars": [
          "cr",
          "crd",
          "phi1",
          "phid1",
          "theta1",
          "thetad1"
        ]
      },
      {
        "expr": "- 10*Math.sin(cr + theta1)*Math.cos(phi1)*(crd + thetad1) - 10*phid1*Math.cos(cr + theta1)*Math.sin(phi1)",
        "vars": [
          "cr",
          "crd",
          "phi1",
          "phid1",
          "theta1",
          "thetad1"
        ]
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "10*phid1*Math.cos(phi1)",
        "vars": [
          "phi1",
          "phid1"
        ]
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "phid1*Math.cos(phi1)",
        "vars": [
          "phi1",
          "phid1"
        ]
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "phid1*Math.cos(phi1)",
        "vars": [
          "phi1",
          "phid1"
        ]
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "-phid1*Math.sin(phi1)",
        "vars": [
          "phi1",
          "phid1"
        ]
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "-phid1*Math.sin(phi1)",
        "vars": [
          "phi1",
          "phid1"
        ]
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "(61*crd*Math.sin(cr))/100 - (117*crd*Math.cos(cr))/25 + 10*Math.sin(cr + theta1)*Math.sin(phi1)*(crd + thetad1) - 10*phid1*Math.cos(cr + theta1)*Math.cos(phi1)",
        "vars": [
          "cr",
          "crd",
          "phi1",
          "phid1",
          "theta1",
          "thetad1"
        ]
      },
      {
        "expr": "- 2*crd*Math.sin(cr) - cr*crd*Math.cos(cr)",
        "vars": [
          "cr",
          "crd"
        ]
      },
      {
        "expr": "10*Math.sin(cr + theta1)*Math.sin(phi1)*(crd + thetad1) - 10*phid1*Math.cos(cr + theta1)*Math.cos(phi1)",
        "vars": [
          "cr",
          "crd",
          "phi1",
          "phid1",
          "theta1",
          "thetad1"
        ]
      },
      {
        "expr": "10*phid1*Math.sin(cr + theta1)*Math.sin(phi1) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*(crd + thetad1)",
        "vars": [
          "cr",
          "crd",
          "phi1",
          "phid1",
          "theta1",
          "thetad1"
        ]
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "- (61*crd*Math.cos(cr))/100 - (117*crd*Math.sin(cr))/25 - 10*Math.cos(cr + theta1)*Math.sin(phi1)*(crd + thetad1) - 10*phid1*Math.sin(cr + theta1)*Math.cos(phi1)",
        "vars": [
          "cr",
          "crd",
          "phi1",
          "phid1",
          "theta1",
          "thetad1"
        ]
      },
      {
        "expr": "2*crd*Math.cos(cr) - cr*crd*Math.sin(cr)",
        "vars": [
          "cr",
          "crd"
        ]
      },
      {
        "expr": "- 10*Math.cos(cr + theta1)*Math.sin(phi1)*(crd + thetad1) - 10*phid1*Math.sin(cr + theta1)*Math.cos(phi1)",
        "vars": [
          "cr",
          "crd",
          "phi1",
          "phid1",
          "theta1",
          "thetad1"
        ]
      },
      {
        "expr": "- 10*Math.sin(cr + theta1)*Math.cos(phi1)*(crd + thetad1) - 10*phid1*Math.cos(cr + theta1)*Math.sin(phi1)",
        "vars": [
          "cr",
          "crd",
          "phi1",
          "phid1",
          "theta1",
          "thetad1"
        ]
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "10*phid1*Math.cos(phi1)",
        "vars": [
          "phi1",
          "phid1"
        ]
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "phid1*Math.cos(phi1)*Math.sin(theta2) + thetad2*Math.cos(theta2)*Math.sin(phi1)",
        "vars": [
          "phi1",
          "phid1",
          "theta2",
          "thetad2"
        ]
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "phid1*Math.cos(phi1)*Math.sin(theta2) + thetad2*Math.cos(theta2)*Math.sin(phi1)",
        "vars": [
          "phi1",
          "phid1",
          "theta2",
          "thetad2"
        ]
      },
      {
        "expr": "-thetad2*Math.sin(theta2)",
        "vars": [
          "theta2",
          "thetad2"
        ]
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "phid1*Math.cos(phi1)*Math.cos(theta2) - thetad2*Math.sin(phi1)*Math.sin(theta2)",
        "vars": [
          "phi1",
          "phid1",
          "theta2",
          "thetad2"
        ]
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "phid1*Math.cos(phi1)*Math.cos(theta2) - thetad2*Math.sin(phi1)*Math.sin(theta2)",
        "vars": [
          "phi1",
          "phid1",
          "theta2",
          "thetad2"
        ]
      },
      {
        "expr": "-thetad2*Math.cos(theta2)",
        "vars": [
          "theta2",
          "thetad2"
        ]
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "-phid1*Math.sin(phi1)",
        "vars": [
          "phi1",
          "phid1"
        ]
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "-phid1*Math.sin(phi1)",
        "vars": [
          "phi1",
          "phid1"
        ]
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "(61*crd*Math.sin(cr))/100 - (117*crd*Math.cos(cr))/25 + 10*Math.sin(cr + theta1)*Math.sin(phi1)*(crd + thetad1) - 10*phid1*Math.cos(cr + theta1)*Math.cos(phi1)",
        "vars": [
          "cr",
          "crd",
          "phi1",
          "phid1",
          "theta1",
          "thetad1"
        ]
      },
      {
        "expr": "- 2*crd*Math.sin(cr) - cr*crd*Math.cos(cr)",
        "vars": [
          "cr",
          "crd"
        ]
      },
      {
        "expr": "10*Math.sin(cr + theta1)*Math.sin(phi1)*(crd + thetad1) - 10*phid1*Math.cos(cr + theta1)*Math.cos(phi1)",
        "vars": [
          "cr",
          "crd",
          "phi1",
          "phid1",
          "theta1",
          "thetad1"
        ]
      },
      {
        "expr": "10*phid1*Math.sin(cr + theta1)*Math.sin(phi1) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*(crd + thetad1)",
        "vars": [
          "cr",
          "crd",
          "phi1",
          "phid1",
          "theta1",
          "thetad1"
        ]
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "- (61*crd*Math.cos(cr))/100 - (117*crd*Math.sin(cr))/25 - 10*Math.cos(cr + theta1)*Math.sin(phi1)*(crd + thetad1) - 10*phid1*Math.sin(cr + theta1)*Math.cos(phi1)",
        "vars": [
          "cr",
          "crd",
          "phi1",
          "phid1",
          "theta1",
          "thetad1"
        ]
      },
      {
        "expr": "2*crd*Math.cos(cr) - cr*crd*Math.sin(cr)",
        "vars": [
          "cr",
          "crd"
        ]
      },
      {
        "expr": "- 10*Math.cos(cr + theta1)*Math.sin(phi1)*(crd + thetad1) - 10*phid1*Math.sin(cr + theta1)*Math.cos(phi1)",
        "vars": [
          "cr",
          "crd",
          "phi1",
          "phid1",
          "theta1",
          "thetad1"
        ]
      },
      {
        "expr": "- 10*Math.sin(cr + theta1)*Math.cos(phi1)*(crd + thetad1) - 10*phid1*Math.cos(cr + theta1)*Math.sin(phi1)",
        "vars": [
          "cr",
          "crd",
          "phi1",
          "phid1",
          "theta1",
          "thetad1"
        ]
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "10*phid1*Math.cos(phi1)",
        "vars": [
          "phi1",
          "phid1"
        ]
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "phid1*Math.cos(phi1)*Math.sin(theta2) + thetad2*Math.cos(theta2)*Math.sin(phi1)",
        "vars": [
          "phi1",
          "phid1",
          "theta2",
          "thetad2"
        ]
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "phid1*Math.cos(phi1)*Math.sin(theta2) + thetad2*Math.cos(theta2)*Math.sin(phi1)",
        "vars": [
          "phi1",
          "phid1",
          "theta2",
          "thetad2"
        ]
      },
      {
        "expr": "-thetad2*Math.sin(theta2)",
        "vars": [
          "theta2",
          "thetad2"
        ]
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "phid2*Math.cos(phi1)*Math.cos(phi2) - phid1*Math.sin(phi1)*Math.sin(phi2) + phid1*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2) - phid2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - thetad2*Math.cos(phi2)*Math.sin(phi1)*Math.sin(theta2)",
        "vars": [
          "phi1",
          "phi2",
          "phid1",
          "phid2",
          "theta2",
          "thetad2"
        ]
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "phid2*Math.cos(phi1)*Math.cos(phi2) - phid1*Math.sin(phi1)*Math.sin(phi2) + phid1*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2) - phid2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - thetad2*Math.cos(phi2)*Math.sin(phi1)*Math.sin(theta2)",
        "vars": [
          "phi1",
          "phi2",
          "phid1",
          "phid2",
          "theta2",
          "thetad2"
        ]
      },
      {
        "expr": "phid2*Math.sin(phi2)*Math.sin(theta2) - thetad2*Math.cos(phi2)*Math.cos(theta2)",
        "vars": [
          "phi2",
          "phid2",
          "theta2",
          "thetad2"
        ]
      },
      {
        "expr": "phid2*Math.cos(phi2)",
        "vars": [
          "phi2",
          "phid2"
        ]
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "thetad2*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta2) - phid2*Math.cos(phi1)*Math.sin(phi2) - phid1*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2) - phid2*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1) - phid1*Math.cos(phi2)*Math.sin(phi1)",
        "vars": [
          "phi1",
          "phi2",
          "phid1",
          "phid2",
          "theta2",
          "thetad2"
        ]
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "thetad2*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta2) - phid2*Math.cos(phi1)*Math.sin(phi2) - phid1*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2) - phid2*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1) - phid1*Math.cos(phi2)*Math.sin(phi1)",
        "vars": [
          "phi1",
          "phi2",
          "phid1",
          "phid2",
          "theta2",
          "thetad2"
        ]
      },
      {
        "expr": "phid2*Math.cos(phi2)*Math.sin(theta2) + thetad2*Math.cos(theta2)*Math.sin(phi2)",
        "vars": [
          "phi2",
          "phid2",
          "theta2",
          "thetad2"
        ]
      },
      {
        "expr": "-phid2*Math.sin(phi2)",
        "vars": [
          "phi2",
          "phid2"
        ]
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2)*(crd + thetad1) + 10*thetad2*Math.sin(cr + theta1)*Math.cos(theta2) + 10*phid1*Math.cos(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + 10*thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) - (117*crd*Math.cos(cr))/25 + (61*crd*Math.sin(cr))/100 + 10*Math.sin(cr + theta1)*Math.sin(phi1)*(crd + thetad1) - 10*phid1*Math.cos(cr + theta1)*Math.cos(phi1) + phid2*Math.cos(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*phid1*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(phi2) + 10*phid2*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)*(crd + thetad1)",
        "vars": [
          "cr",
          "crd",
          "phi1",
          "phi2",
          "phid1",
          "phid2",
          "theta1",
          "theta2",
          "thetad1",
          "thetad2"
        ]
      },
      {
        "expr": "- 2*crd*Math.sin(cr) - cr*crd*Math.cos(cr)",
        "vars": [
          "cr",
          "crd"
        ]
      },
      {
        "expr": "Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2)*(crd + thetad1) + 10*thetad2*Math.sin(cr + theta1)*Math.cos(theta2) + 10*phid1*Math.cos(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + 10*thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + 10*Math.sin(cr + theta1)*Math.sin(phi1)*(crd + thetad1) - 10*phid1*Math.cos(cr + theta1)*Math.cos(phi1) + phid2*Math.cos(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*phid1*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(phi2) + 10*phid2*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)*(crd + thetad1)",
        "vars": [
          "cr",
          "crd",
          "phi1",
          "phi2",
          "phid1",
          "phid2",
          "theta1",
          "theta2",
          "thetad1",
          "thetad2"
        ]
      },
      {
        "expr": "Math.sin(cr + theta1)*(10*phid1*Math.sin(phi1) + 10*phid1*Math.cos(phi2)*Math.sin(phi1) + 10*phid2*Math.cos(phi1)*Math.sin(phi2) + 10*phid1*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2) + 10*phid2*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1) - 10*thetad2*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta2)) - Math.cos(cr + theta1)*(crd + thetad1)*(10*Math.cos(phi1) + 10*Math.cos(phi1)*Math.cos(phi2) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))",
        "vars": [
          "cr",
          "crd",
          "phi1",
          "phi2",
          "phid1",
          "phid2",
          "theta1",
          "theta2",
          "thetad1",
          "thetad2"
        ]
      },
      {
        "expr": "Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.cos(theta2)*(crd + thetad1) + 10*thetad2*Math.cos(cr + theta1)*Math.sin(theta2) + 10*thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2) - 10*phid1*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(theta2) + 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)*(crd + thetad1)) - phid2*Math.cos(phi2)*(10*Math.cos(cr + theta1)*Math.cos(theta2) - 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))",
        "vars": [
          "cr",
          "crd",
          "phi1",
          "phi2",
          "phid1",
          "phid2",
          "theta1",
          "theta2",
          "thetad1",
          "thetad2"
        ]
      },
      {
        "expr": "Math.cos(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2)*(crd + thetad1) - 10*thetad2*Math.cos(cr + theta1)*Math.cos(theta2) + 10*phid1*Math.sin(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + 10*thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + phid2*Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*phid1*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(phi2) + 10*phid2*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1) + 10*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)*(crd + thetad1)",
        "vars": [
          "cr",
          "crd",
          "phi1",
          "phi2",
          "phid1",
          "phid2",
          "theta1",
          "theta2",
          "thetad1",
          "thetad2"
        ]
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2)*(crd + thetad1) - 10*thetad2*Math.cos(cr + theta1)*Math.cos(theta2) + 10*phid1*Math.sin(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + 10*thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) - (61*crd*Math.cos(cr))/100 - (117*crd*Math.sin(cr))/25 - 10*Math.cos(cr + theta1)*Math.sin(phi1)*(crd + thetad1) - 10*phid1*Math.sin(cr + theta1)*Math.cos(phi1) - phid2*Math.cos(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*phid1*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(phi2) + 10*phid2*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)*(crd + thetad1)",
        "vars": [
          "cr",
          "crd",
          "phi1",
          "phi2",
          "phid1",
          "phid2",
          "theta1",
          "theta2",
          "thetad1",
          "thetad2"
        ]
      },
      {
        "expr": "2*crd*Math.cos(cr) - cr*crd*Math.sin(cr)",
        "vars": [
          "cr",
          "crd"
        ]
      },
      {
        "expr": "Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2)*(crd + thetad1) - 10*thetad2*Math.cos(cr + theta1)*Math.cos(theta2) + 10*phid1*Math.sin(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + 10*thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) - 10*Math.cos(cr + theta1)*Math.sin(phi1)*(crd + thetad1) - 10*phid1*Math.sin(cr + theta1)*Math.cos(phi1) - phid2*Math.cos(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*phid1*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(phi2) + 10*phid2*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)*(crd + thetad1)",
        "vars": [
          "cr",
          "crd",
          "phi1",
          "phi2",
          "phid1",
          "phid2",
          "theta1",
          "theta2",
          "thetad1",
          "thetad2"
        ]
      },
      {
        "expr": "- Math.cos(cr + theta1)*(10*phid1*Math.sin(phi1) + 10*phid1*Math.cos(phi2)*Math.sin(phi1) + 10*phid2*Math.cos(phi1)*Math.sin(phi2) + 10*phid1*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2) + 10*phid2*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1) - 10*thetad2*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta2)) - Math.sin(cr + theta1)*(crd + thetad1)*(10*Math.cos(phi1) + 10*Math.cos(phi1)*Math.cos(phi2) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))",
        "vars": [
          "cr",
          "crd",
          "phi1",
          "phi2",
          "phid1",
          "phid2",
          "theta1",
          "theta2",
          "thetad1",
          "thetad2"
        ]
      },
      {
        "expr": "Math.sin(phi2)*(10*thetad2*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(theta2)*(crd + thetad1) - 10*thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2) + 10*phid1*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)*(crd + thetad1)) - phid2*Math.cos(phi2)*(10*Math.sin(cr + theta1)*Math.cos(theta2) + 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))",
        "vars": [
          "cr",
          "crd",
          "phi1",
          "phi2",
          "phid1",
          "phid2",
          "theta1",
          "theta2",
          "thetad1",
          "thetad2"
        ]
      },
      {
        "expr": "phid2*Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.cos(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2)*(crd + thetad1) + 10*thetad2*Math.sin(cr + theta1)*Math.cos(theta2) + 10*phid1*Math.cos(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + 10*thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + 10*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)*(crd + thetad1) - 10*phid1*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(phi2) - 10*phid2*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)",
        "vars": [
          "cr",
          "crd",
          "phi1",
          "phi2",
          "phid1",
          "phid2",
          "theta1",
          "theta2",
          "thetad1",
          "thetad2"
        ]
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "10*phid1*Math.cos(phi1) + 10*phid1*Math.cos(phi1)*Math.cos(phi2) - 10*phid2*Math.sin(phi1)*Math.sin(phi2) + 10*phid2*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2) - 10*phid1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 10*thetad2*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta2)",
        "vars": [
          "phi1",
          "phi2",
          "phid1",
          "phid2",
          "theta2",
          "thetad2"
        ]
      },
      {
        "expr": "- 10*phid1*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta2) - 10*phid2*Math.cos(phi2)*Math.sin(phi1)*Math.sin(theta2) - 10*thetad2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)",
        "vars": [
          "phi1",
          "phi2",
          "phid1",
          "phid2",
          "theta2",
          "thetad2"
        ]
      },
      {
        "expr": "10*phid2*Math.cos(phi1)*Math.cos(phi2) - 10*phid1*Math.sin(phi1)*Math.sin(phi2) + 10*phid1*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2) - 10*phid2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 10*thetad2*Math.cos(phi2)*Math.sin(phi1)*Math.sin(theta2)",
        "vars": [
          "phi1",
          "phi2",
          "phid1",
          "phid2",
          "theta2",
          "thetad2"
        ]
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "phid1*Math.cos(phi1)*Math.sin(theta2) + thetad2*Math.cos(theta2)*Math.sin(phi1)",
        "vars": [
          "phi1",
          "phid1",
          "theta2",
          "thetad2"
        ]
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "phid1*Math.cos(phi1)*Math.sin(theta2) + thetad2*Math.cos(theta2)*Math.sin(phi1)",
        "vars": [
          "phi1",
          "phid1",
          "theta2",
          "thetad2"
        ]
      },
      {
        "expr": "-thetad2*Math.sin(theta2)",
        "vars": [
          "theta2",
          "thetad2"
        ]
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "phid2*Math.cos(phi1)*Math.cos(phi2) - phid1*Math.sin(phi1)*Math.sin(phi2) + phid1*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2) - phid2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - thetad2*Math.cos(phi2)*Math.sin(phi1)*Math.sin(theta2)",
        "vars": [
          "phi1",
          "phi2",
          "phid1",
          "phid2",
          "theta2",
          "thetad2"
        ]
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "phid2*Math.cos(phi1)*Math.cos(phi2) - phid1*Math.sin(phi1)*Math.sin(phi2) + phid1*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2) - phid2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - thetad2*Math.cos(phi2)*Math.sin(phi1)*Math.sin(theta2)",
        "vars": [
          "phi1",
          "phi2",
          "phid1",
          "phid2",
          "theta2",
          "thetad2"
        ]
      },
      {
        "expr": "phid2*Math.sin(phi2)*Math.sin(theta2) - thetad2*Math.cos(phi2)*Math.cos(theta2)",
        "vars": [
          "phi2",
          "phid2",
          "theta2",
          "thetad2"
        ]
      },
      {
        "expr": "phid2*Math.cos(phi2)",
        "vars": [
          "phi2",
          "phid2"
        ]
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "thetad2*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta2) - phid2*Math.cos(phi1)*Math.sin(phi2) - phid1*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2) - phid2*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1) - phid1*Math.cos(phi2)*Math.sin(phi1)",
        "vars": [
          "phi1",
          "phi2",
          "phid1",
          "phid2",
          "theta2",
          "thetad2"
        ]
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "thetad2*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta2) - phid2*Math.cos(phi1)*Math.sin(phi2) - phid1*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2) - phid2*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1) - phid1*Math.cos(phi2)*Math.sin(phi1)",
        "vars": [
          "phi1",
          "phi2",
          "phid1",
          "phid2",
          "theta2",
          "thetad2"
        ]
      },
      {
        "expr": "phid2*Math.cos(phi2)*Math.sin(theta2) + thetad2*Math.cos(theta2)*Math.sin(phi2)",
        "vars": [
          "phi2",
          "phid2",
          "theta2",
          "thetad2"
        ]
      },
      {
        "expr": "-phid2*Math.sin(phi2)",
        "vars": [
          "phi2",
          "phid2"
        ]
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2)*(crd + thetad1) + 10*thetad2*Math.sin(cr + theta1)*Math.cos(theta2) + 10*phid1*Math.cos(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + 10*thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) - (117*crd*Math.cos(cr))/25 + (61*crd*Math.sin(cr))/100 + 10*Math.sin(cr + theta1)*Math.sin(phi1)*(crd + thetad1) - 10*phid1*Math.cos(cr + theta1)*Math.cos(phi1) + phid2*Math.cos(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*phid1*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(phi2) + 10*phid2*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)*(crd + thetad1)",
        "vars": [
          "cr",
          "crd",
          "phi1",
          "phi2",
          "phid1",
          "phid2",
          "theta1",
          "theta2",
          "thetad1",
          "thetad2"
        ]
      },
      {
        "expr": "- 2*crd*Math.sin(cr) - cr*crd*Math.cos(cr)",
        "vars": [
          "cr",
          "crd"
        ]
      },
      {
        "expr": "Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2)*(crd + thetad1) + 10*thetad2*Math.sin(cr + theta1)*Math.cos(theta2) + 10*phid1*Math.cos(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + 10*thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + 10*Math.sin(cr + theta1)*Math.sin(phi1)*(crd + thetad1) - 10*phid1*Math.cos(cr + theta1)*Math.cos(phi1) + phid2*Math.cos(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*phid1*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(phi2) + 10*phid2*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)*(crd + thetad1)",
        "vars": [
          "cr",
          "crd",
          "phi1",
          "phi2",
          "phid1",
          "phid2",
          "theta1",
          "theta2",
          "thetad1",
          "thetad2"
        ]
      },
      {
        "expr": "Math.sin(cr + theta1)*(10*phid1*Math.sin(phi1) + 10*phid1*Math.cos(phi2)*Math.sin(phi1) + 10*phid2*Math.cos(phi1)*Math.sin(phi2) + 10*phid1*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2) + 10*phid2*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1) - 10*thetad2*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta2)) - Math.cos(cr + theta1)*(crd + thetad1)*(10*Math.cos(phi1) + 10*Math.cos(phi1)*Math.cos(phi2) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))",
        "vars": [
          "cr",
          "crd",
          "phi1",
          "phi2",
          "phid1",
          "phid2",
          "theta1",
          "theta2",
          "thetad1",
          "thetad2"
        ]
      },
      {
        "expr": "Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.cos(theta2)*(crd + thetad1) + 10*thetad2*Math.cos(cr + theta1)*Math.sin(theta2) + 10*thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2) - 10*phid1*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(theta2) + 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)*(crd + thetad1)) - phid2*Math.cos(phi2)*(10*Math.cos(cr + theta1)*Math.cos(theta2) - 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))",
        "vars": [
          "cr",
          "crd",
          "phi1",
          "phi2",
          "phid1",
          "phid2",
          "theta1",
          "theta2",
          "thetad1",
          "thetad2"
        ]
      },
      {
        "expr": "Math.cos(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2)*(crd + thetad1) - 10*thetad2*Math.cos(cr + theta1)*Math.cos(theta2) + 10*phid1*Math.sin(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + 10*thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + phid2*Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*phid1*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(phi2) + 10*phid2*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1) + 10*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)*(crd + thetad1)",
        "vars": [
          "cr",
          "crd",
          "phi1",
          "phi2",
          "phid1",
          "phid2",
          "theta1",
          "theta2",
          "thetad1",
          "thetad2"
        ]
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2)*(crd + thetad1) - 10*thetad2*Math.cos(cr + theta1)*Math.cos(theta2) + 10*phid1*Math.sin(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + 10*thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) - (61*crd*Math.cos(cr))/100 - (117*crd*Math.sin(cr))/25 - 10*Math.cos(cr + theta1)*Math.sin(phi1)*(crd + thetad1) - 10*phid1*Math.sin(cr + theta1)*Math.cos(phi1) - phid2*Math.cos(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*phid1*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(phi2) + 10*phid2*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)*(crd + thetad1)",
        "vars": [
          "cr",
          "crd",
          "phi1",
          "phi2",
          "phid1",
          "phid2",
          "theta1",
          "theta2",
          "thetad1",
          "thetad2"
        ]
      },
      {
        "expr": "2*crd*Math.cos(cr) - cr*crd*Math.sin(cr)",
        "vars": [
          "cr",
          "crd"
        ]
      },
      {
        "expr": "Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2)*(crd + thetad1) - 10*thetad2*Math.cos(cr + theta1)*Math.cos(theta2) + 10*phid1*Math.sin(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + 10*thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) - 10*Math.cos(cr + theta1)*Math.sin(phi1)*(crd + thetad1) - 10*phid1*Math.sin(cr + theta1)*Math.cos(phi1) - phid2*Math.cos(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*phid1*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(phi2) + 10*phid2*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)*(crd + thetad1)",
        "vars": [
          "cr",
          "crd",
          "phi1",
          "phi2",
          "phid1",
          "phid2",
          "theta1",
          "theta2",
          "thetad1",
          "thetad2"
        ]
      },
      {
        "expr": "- Math.cos(cr + theta1)*(10*phid1*Math.sin(phi1) + 10*phid1*Math.cos(phi2)*Math.sin(phi1) + 10*phid2*Math.cos(phi1)*Math.sin(phi2) + 10*phid1*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2) + 10*phid2*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1) - 10*thetad2*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta2)) - Math.sin(cr + theta1)*(crd + thetad1)*(10*Math.cos(phi1) + 10*Math.cos(phi1)*Math.cos(phi2) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))",
        "vars": [
          "cr",
          "crd",
          "phi1",
          "phi2",
          "phid1",
          "phid2",
          "theta1",
          "theta2",
          "thetad1",
          "thetad2"
        ]
      },
      {
        "expr": "Math.sin(phi2)*(10*thetad2*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(theta2)*(crd + thetad1) - 10*thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2) + 10*phid1*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)*(crd + thetad1)) - phid2*Math.cos(phi2)*(10*Math.sin(cr + theta1)*Math.cos(theta2) + 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))",
        "vars": [
          "cr",
          "crd",
          "phi1",
          "phi2",
          "phid1",
          "phid2",
          "theta1",
          "theta2",
          "thetad1",
          "thetad2"
        ]
      },
      {
        "expr": "phid2*Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.cos(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2)*(crd + thetad1) + 10*thetad2*Math.sin(cr + theta1)*Math.cos(theta2) + 10*phid1*Math.cos(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + 10*thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + 10*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)*(crd + thetad1) - 10*phid1*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(phi2) - 10*phid2*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)",
        "vars": [
          "cr",
          "crd",
          "phi1",
          "phi2",
          "phid1",
          "phid2",
          "theta1",
          "theta2",
          "thetad1",
          "thetad2"
        ]
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "10*phid1*Math.cos(phi1) + 10*phid1*Math.cos(phi1)*Math.cos(phi2) - 10*phid2*Math.sin(phi1)*Math.sin(phi2) + 10*phid2*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2) - 10*phid1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 10*thetad2*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta2)",
        "vars": [
          "phi1",
          "phi2",
          "phid1",
          "phid2",
          "theta2",
          "thetad2"
        ]
      },
      {
        "expr": "- 10*phid1*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta2) - 10*phid2*Math.cos(phi2)*Math.sin(phi1)*Math.sin(theta2) - 10*thetad2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)",
        "vars": [
          "phi1",
          "phi2",
          "phid1",
          "phid2",
          "theta2",
          "thetad2"
        ]
      },
      {
        "expr": "10*phid2*Math.cos(phi1)*Math.cos(phi2) - 10*phid1*Math.sin(phi1)*Math.sin(phi2) + 10*phid1*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2) - 10*phid2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 10*thetad2*Math.cos(phi2)*Math.sin(phi1)*Math.sin(theta2)",
        "vars": [
          "phi1",
          "phi2",
          "phid1",
          "phid2",
          "theta2",
          "thetad2"
        ]
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "thetad3*Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(theta3)*(phid1*Math.sin(phi1)*Math.sin(phi2) - phid2*Math.cos(phi1)*Math.cos(phi2) - phid1*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2) + phid2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) + thetad2*Math.cos(phi2)*Math.sin(phi1)*Math.sin(theta2)) + phid1*Math.cos(phi1)*Math.cos(theta3)*Math.sin(theta2) + thetad2*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi1) - thetad3*Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)",
        "vars": [
          "phi1",
          "phi2",
          "phid1",
          "phid2",
          "theta2",
          "theta3",
          "thetad2",
          "thetad3"
        ]
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "thetad3*Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(theta3)*(phid1*Math.sin(phi1)*Math.sin(phi2) - phid2*Math.cos(phi1)*Math.cos(phi2) - phid1*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2) + phid2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) + thetad2*Math.cos(phi2)*Math.sin(phi1)*Math.sin(theta2)) + phid1*Math.cos(phi1)*Math.cos(theta3)*Math.sin(theta2) + thetad2*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi1) - thetad3*Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)",
        "vars": [
          "phi1",
          "phi2",
          "phid1",
          "phid2",
          "theta2",
          "theta3",
          "thetad2",
          "thetad3"
        ]
      },
      {
        "expr": "phid2*Math.sin(phi2)*Math.sin(theta2)*Math.sin(theta3) - thetad3*Math.cos(theta2)*Math.sin(theta3) - thetad2*Math.cos(phi2)*Math.cos(theta2)*Math.sin(theta3) - thetad3*Math.cos(phi2)*Math.cos(theta3)*Math.sin(theta2) - thetad2*Math.cos(theta3)*Math.sin(theta2)",
        "vars": [
          "phi2",
          "phid2",
          "theta2",
          "theta3",
          "thetad2",
          "thetad3"
        ]
      },
      {
        "expr": "phid2*Math.cos(phi2)*Math.sin(theta3) + thetad3*Math.cos(theta3)*Math.sin(phi2)",
        "vars": [
          "phi2",
          "phid2",
          "theta3",
          "thetad3"
        ]
      },
      {
        "expr": "-thetad3*Math.sin(theta3)",
        "vars": [
          "theta3",
          "thetad3"
        ]
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "- Math.cos(theta3)*(phid1*Math.sin(phi1)*Math.sin(phi2) - phid2*Math.cos(phi1)*Math.cos(phi2) - phid1*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2) + phid2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) + thetad2*Math.cos(phi2)*Math.sin(phi1)*Math.sin(theta2)) - thetad3*Math.sin(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - phid1*Math.cos(phi1)*Math.sin(theta2)*Math.sin(theta3) - thetad2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3) - thetad3*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2)",
        "vars": [
          "phi1",
          "phi2",
          "phid1",
          "phid2",
          "theta2",
          "theta3",
          "thetad2",
          "thetad3"
        ]
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "- Math.cos(theta3)*(phid1*Math.sin(phi1)*Math.sin(phi2) - phid2*Math.cos(phi1)*Math.cos(phi2) - phid1*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2) + phid2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) + thetad2*Math.cos(phi2)*Math.sin(phi1)*Math.sin(theta2)) - thetad3*Math.sin(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - phid1*Math.cos(phi1)*Math.sin(theta2)*Math.sin(theta3) - thetad2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3) - thetad3*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2)",
        "vars": [
          "phi1",
          "phi2",
          "phid1",
          "phid2",
          "theta2",
          "theta3",
          "thetad2",
          "thetad3"
        ]
      },
      {
        "expr": "thetad2*Math.sin(theta2)*Math.sin(theta3) - thetad3*Math.cos(theta2)*Math.cos(theta3) - thetad2*Math.cos(phi2)*Math.cos(theta2)*Math.cos(theta3) + phid2*Math.cos(theta3)*Math.sin(phi2)*Math.sin(theta2) + thetad3*Math.cos(phi2)*Math.sin(theta2)*Math.sin(theta3)",
        "vars": [
          "phi2",
          "phid2",
          "theta2",
          "theta3",
          "thetad2",
          "thetad3"
        ]
      },
      {
        "expr": "phid2*Math.cos(phi2)*Math.cos(theta3) - thetad3*Math.sin(phi2)*Math.sin(theta3)",
        "vars": [
          "phi2",
          "phid2",
          "theta3",
          "thetad3"
        ]
      },
      {
        "expr": "-thetad3*Math.cos(theta3)",
        "vars": [
          "theta3",
          "thetad3"
        ]
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "thetad2*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta2) - phid2*Math.cos(phi1)*Math.sin(phi2) - phid1*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2) - phid2*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1) - phid1*Math.cos(phi2)*Math.sin(phi1)",
        "vars": [
          "phi1",
          "phi2",
          "phid1",
          "phid2",
          "theta2",
          "thetad2"
        ]
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "thetad2*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta2) - phid2*Math.cos(phi1)*Math.sin(phi2) - phid1*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2) - phid2*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1) - phid1*Math.cos(phi2)*Math.sin(phi1)",
        "vars": [
          "phi1",
          "phi2",
          "phid1",
          "phid2",
          "theta2",
          "thetad2"
        ]
      },
      {
        "expr": "phid2*Math.cos(phi2)*Math.sin(theta2) + thetad2*Math.cos(theta2)*Math.sin(phi2)",
        "vars": [
          "phi2",
          "phid2",
          "theta2",
          "thetad2"
        ]
      },
      {
        "expr": "-phid2*Math.sin(phi2)",
        "vars": [
          "phi2",
          "phid2"
        ]
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2)*(crd + thetad1) + 10*thetad2*Math.sin(cr + theta1)*Math.cos(theta2) + 10*phid1*Math.cos(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + 10*thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) - (117*crd*Math.cos(cr))/25 + (61*crd*Math.sin(cr))/100 + 10*Math.sin(cr + theta1)*Math.sin(phi1)*(crd + thetad1) - 10*phid1*Math.cos(cr + theta1)*Math.cos(phi1) + phid2*Math.cos(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*phid1*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(phi2) + 10*phid2*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)*(crd + thetad1)",
        "vars": [
          "cr",
          "crd",
          "phi1",
          "phi2",
          "phid1",
          "phid2",
          "theta1",
          "theta2",
          "thetad1",
          "thetad2"
        ]
      },
      {
        "expr": "- 2*crd*Math.sin(cr) - cr*crd*Math.cos(cr)",
        "vars": [
          "cr",
          "crd"
        ]
      },
      {
        "expr": "Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2)*(crd + thetad1) + 10*thetad2*Math.sin(cr + theta1)*Math.cos(theta2) + 10*phid1*Math.cos(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + 10*thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + 10*Math.sin(cr + theta1)*Math.sin(phi1)*(crd + thetad1) - 10*phid1*Math.cos(cr + theta1)*Math.cos(phi1) + phid2*Math.cos(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*phid1*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(phi2) + 10*phid2*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)*(crd + thetad1)",
        "vars": [
          "cr",
          "crd",
          "phi1",
          "phi2",
          "phid1",
          "phid2",
          "theta1",
          "theta2",
          "thetad1",
          "thetad2"
        ]
      },
      {
        "expr": "Math.sin(cr + theta1)*(10*phid1*Math.sin(phi1) + 10*phid1*Math.cos(phi2)*Math.sin(phi1) + 10*phid2*Math.cos(phi1)*Math.sin(phi2) + 10*phid1*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2) + 10*phid2*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1) - 10*thetad2*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta2)) - Math.cos(cr + theta1)*(crd + thetad1)*(10*Math.cos(phi1) + 10*Math.cos(phi1)*Math.cos(phi2) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))",
        "vars": [
          "cr",
          "crd",
          "phi1",
          "phi2",
          "phid1",
          "phid2",
          "theta1",
          "theta2",
          "thetad1",
          "thetad2"
        ]
      },
      {
        "expr": "Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.cos(theta2)*(crd + thetad1) + 10*thetad2*Math.cos(cr + theta1)*Math.sin(theta2) + 10*thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2) - 10*phid1*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(theta2) + 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)*(crd + thetad1)) - phid2*Math.cos(phi2)*(10*Math.cos(cr + theta1)*Math.cos(theta2) - 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))",
        "vars": [
          "cr",
          "crd",
          "phi1",
          "phi2",
          "phid1",
          "phid2",
          "theta1",
          "theta2",
          "thetad1",
          "thetad2"
        ]
      },
      {
        "expr": "Math.cos(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2)*(crd + thetad1) - 10*thetad2*Math.cos(cr + theta1)*Math.cos(theta2) + 10*phid1*Math.sin(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + 10*thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + phid2*Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*phid1*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(phi2) + 10*phid2*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1) + 10*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)*(crd + thetad1)",
        "vars": [
          "cr",
          "crd",
          "phi1",
          "phi2",
          "phid1",
          "phid2",
          "theta1",
          "theta2",
          "thetad1",
          "thetad2"
        ]
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2)*(crd + thetad1) - 10*thetad2*Math.cos(cr + theta1)*Math.cos(theta2) + 10*phid1*Math.sin(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + 10*thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) - (61*crd*Math.cos(cr))/100 - (117*crd*Math.sin(cr))/25 - 10*Math.cos(cr + theta1)*Math.sin(phi1)*(crd + thetad1) - 10*phid1*Math.sin(cr + theta1)*Math.cos(phi1) - phid2*Math.cos(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*phid1*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(phi2) + 10*phid2*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)*(crd + thetad1)",
        "vars": [
          "cr",
          "crd",
          "phi1",
          "phi2",
          "phid1",
          "phid2",
          "theta1",
          "theta2",
          "thetad1",
          "thetad2"
        ]
      },
      {
        "expr": "2*crd*Math.cos(cr) - cr*crd*Math.sin(cr)",
        "vars": [
          "cr",
          "crd"
        ]
      },
      {
        "expr": "Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2)*(crd + thetad1) - 10*thetad2*Math.cos(cr + theta1)*Math.cos(theta2) + 10*phid1*Math.sin(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + 10*thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) - 10*Math.cos(cr + theta1)*Math.sin(phi1)*(crd + thetad1) - 10*phid1*Math.sin(cr + theta1)*Math.cos(phi1) - phid2*Math.cos(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*phid1*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(phi2) + 10*phid2*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)*(crd + thetad1)",
        "vars": [
          "cr",
          "crd",
          "phi1",
          "phi2",
          "phid1",
          "phid2",
          "theta1",
          "theta2",
          "thetad1",
          "thetad2"
        ]
      },
      {
        "expr": "- Math.cos(cr + theta1)*(10*phid1*Math.sin(phi1) + 10*phid1*Math.cos(phi2)*Math.sin(phi1) + 10*phid2*Math.cos(phi1)*Math.sin(phi2) + 10*phid1*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2) + 10*phid2*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1) - 10*thetad2*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta2)) - Math.sin(cr + theta1)*(crd + thetad1)*(10*Math.cos(phi1) + 10*Math.cos(phi1)*Math.cos(phi2) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))",
        "vars": [
          "cr",
          "crd",
          "phi1",
          "phi2",
          "phid1",
          "phid2",
          "theta1",
          "theta2",
          "thetad1",
          "thetad2"
        ]
      },
      {
        "expr": "Math.sin(phi2)*(10*thetad2*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(theta2)*(crd + thetad1) - 10*thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2) + 10*phid1*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)*(crd + thetad1)) - phid2*Math.cos(phi2)*(10*Math.sin(cr + theta1)*Math.cos(theta2) + 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))",
        "vars": [
          "cr",
          "crd",
          "phi1",
          "phi2",
          "phid1",
          "phid2",
          "theta1",
          "theta2",
          "thetad1",
          "thetad2"
        ]
      },
      {
        "expr": "phid2*Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.cos(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2)*(crd + thetad1) + 10*thetad2*Math.sin(cr + theta1)*Math.cos(theta2) + 10*phid1*Math.cos(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + 10*thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + 10*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)*(crd + thetad1) - 10*phid1*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(phi2) - 10*phid2*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)",
        "vars": [
          "cr",
          "crd",
          "phi1",
          "phi2",
          "phid1",
          "phid2",
          "theta1",
          "theta2",
          "thetad1",
          "thetad2"
        ]
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "10*phid1*Math.cos(phi1) + 10*phid1*Math.cos(phi1)*Math.cos(phi2) - 10*phid2*Math.sin(phi1)*Math.sin(phi2) + 10*phid2*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2) - 10*phid1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 10*thetad2*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta2)",
        "vars": [
          "phi1",
          "phi2",
          "phid1",
          "phid2",
          "theta2",
          "thetad2"
        ]
      },
      {
        "expr": "- 10*phid1*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta2) - 10*phid2*Math.cos(phi2)*Math.sin(phi1)*Math.sin(theta2) - 10*thetad2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)",
        "vars": [
          "phi1",
          "phi2",
          "phid1",
          "phid2",
          "theta2",
          "thetad2"
        ]
      },
      {
        "expr": "10*phid2*Math.cos(phi1)*Math.cos(phi2) - 10*phid1*Math.sin(phi1)*Math.sin(phi2) + 10*phid1*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2) - 10*phid2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 10*thetad2*Math.cos(phi2)*Math.sin(phi1)*Math.sin(theta2)",
        "vars": [
          "phi1",
          "phi2",
          "phid1",
          "phid2",
          "theta2",
          "thetad2"
        ]
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "phid2*Math.cos(phi1)*Math.cos(phi2)*Math.sin(theta3) + phid1*Math.cos(phi1)*Math.cos(theta3)*Math.sin(theta2) + thetad3*Math.cos(phi1)*Math.cos(theta3)*Math.sin(phi2) + thetad2*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi1) - phid1*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta3) - thetad3*Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3) + phid1*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2)*Math.sin(theta3) + thetad3*Math.cos(phi2)*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi1) - phid2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta3) - thetad2*Math.cos(phi2)*Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)",
        "vars": [
          "phi1",
          "phi2",
          "phid1",
          "phid2",
          "theta2",
          "theta3",
          "thetad2",
          "thetad3"
        ]
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "phid2*Math.cos(phi1)*Math.cos(phi2)*Math.sin(theta3) + phid1*Math.cos(phi1)*Math.cos(theta3)*Math.sin(theta2) + thetad3*Math.cos(phi1)*Math.cos(theta3)*Math.sin(phi2) + thetad2*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi1) - phid1*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta3) - thetad3*Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3) + phid1*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2)*Math.sin(theta3) + thetad3*Math.cos(phi2)*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi1) - phid2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta3) - thetad2*Math.cos(phi2)*Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)",
        "vars": [
          "phi1",
          "phi2",
          "phid1",
          "phid2",
          "theta2",
          "theta3",
          "thetad2",
          "thetad3"
        ]
      },
      {
        "expr": "phid2*Math.sin(phi2)*Math.sin(theta2)*Math.sin(theta3) - thetad3*Math.cos(theta2)*Math.sin(theta3) - thetad2*Math.cos(phi2)*Math.cos(theta2)*Math.sin(theta3) - thetad3*Math.cos(phi2)*Math.cos(theta3)*Math.sin(theta2) - thetad2*Math.cos(theta3)*Math.sin(theta2)",
        "vars": [
          "phi2",
          "phid2",
          "theta2",
          "theta3",
          "thetad2",
          "thetad3"
        ]
      },
      {
        "expr": "phid2*Math.cos(phi2)*Math.sin(theta3) + thetad3*Math.cos(theta3)*Math.sin(phi2)",
        "vars": [
          "phi2",
          "phid2",
          "theta3",
          "thetad3"
        ]
      },
      {
        "expr": "-thetad3*Math.sin(theta3)",
        "vars": [
          "theta3",
          "thetad3"
        ]
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "phid3*Math.cos(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) - Math.sin(phi3)*(phid1*Math.cos(phi2)*Math.sin(phi1) + phid2*Math.cos(phi1)*Math.sin(phi2) + phid1*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2) + phid2*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1) - thetad2*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta2)) - Math.cos(phi3)*(Math.cos(theta3)*(phid1*Math.sin(phi1)*Math.sin(phi2) - phid2*Math.cos(phi1)*Math.cos(phi2) - phid1*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2) + phid2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) + thetad2*Math.cos(phi2)*Math.sin(phi1)*Math.sin(theta2)) + thetad3*Math.sin(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + phid1*Math.cos(phi1)*Math.sin(theta2)*Math.sin(theta3) + thetad2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3) + thetad3*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2)) - phid3*Math.sin(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3))",
        "vars": [
          "phi1",
          "phi2",
          "phi3",
          "phid1",
          "phid2",
          "phid3",
          "theta2",
          "theta3",
          "thetad2",
          "thetad3"
        ]
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "phid3*Math.cos(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) - Math.sin(phi3)*(phid1*Math.cos(phi2)*Math.sin(phi1) + phid2*Math.cos(phi1)*Math.sin(phi2) + phid1*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2) + phid2*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1) - thetad2*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta2)) - Math.cos(phi3)*(Math.cos(theta3)*(phid1*Math.sin(phi1)*Math.sin(phi2) - phid2*Math.cos(phi1)*Math.cos(phi2) - phid1*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2) + phid2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) + thetad2*Math.cos(phi2)*Math.sin(phi1)*Math.sin(theta2)) + thetad3*Math.sin(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + phid1*Math.cos(phi1)*Math.sin(theta2)*Math.sin(theta3) + thetad2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3) + thetad3*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2)) - phid3*Math.sin(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3))",
        "vars": [
          "phi1",
          "phi2",
          "phi3",
          "phid1",
          "phid2",
          "phid3",
          "theta2",
          "theta3",
          "thetad2",
          "thetad3"
        ]
      },
      {
        "expr": "Math.cos(phi3)*(thetad2*Math.sin(theta2)*Math.sin(theta3) - thetad3*Math.cos(theta2)*Math.cos(theta3) - thetad2*Math.cos(phi2)*Math.cos(theta2)*Math.cos(theta3) + phid2*Math.cos(theta3)*Math.sin(phi2)*Math.sin(theta2) + thetad3*Math.cos(phi2)*Math.sin(theta2)*Math.sin(theta3)) + phid3*Math.sin(phi3)*(Math.cos(theta2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta3)*Math.sin(theta2)) + phid2*Math.cos(phi2)*Math.sin(phi3)*Math.sin(theta2) + phid3*Math.cos(phi3)*Math.sin(phi2)*Math.sin(theta2) + thetad2*Math.cos(theta2)*Math.sin(phi2)*Math.sin(phi3)",
        "vars": [
          "phi2",
          "phi3",
          "phid2",
          "phid3",
          "theta2",
          "theta3",
          "thetad2",
          "thetad3"
        ]
      },
      {
        "expr": "phid3*Math.cos(phi2)*Math.cos(phi3) - phid2*Math.sin(phi2)*Math.sin(phi3) + phid2*Math.cos(phi2)*Math.cos(phi3)*Math.cos(theta3) - phid3*Math.cos(theta3)*Math.sin(phi2)*Math.sin(phi3) - thetad3*Math.cos(phi3)*Math.sin(phi2)*Math.sin(theta3)",
        "vars": [
          "phi2",
          "phi3",
          "phid2",
          "phid3",
          "theta3",
          "thetad3"
        ]
      },
      {
        "expr": "phid3*Math.sin(phi3)*Math.sin(theta3) - thetad3*Math.cos(phi3)*Math.cos(theta3)",
        "vars": [
          "phi3",
          "phid3",
          "theta3",
          "thetad3"
        ]
      },
      {
        "expr": "phid3*Math.cos(phi3)",
        "vars": [
          "phi3",
          "phid3"
        ]
      },
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "Math.sin(phi3)*(Math.cos(theta3)*(phid1*Math.sin(phi1)*Math.sin(phi2) - phid2*Math.cos(phi1)*Math.cos(phi2) - phid1*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2) + phid2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) + thetad2*Math.cos(phi2)*Math.sin(phi1)*Math.sin(theta2)) + thetad3*Math.sin(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + phid1*Math.cos(phi1)*Math.sin(theta2)*Math.sin(theta3) + thetad2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3) + thetad3*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2)) - Math.cos(phi3)*(phid1*Math.cos(phi2)*Math.sin(phi1) + phid2*Math.cos(phi1)*Math.sin(phi2) + phid1*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2) + phid2*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1) - thetad2*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta2)) - phid3*Math.sin(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) - phid3*Math.cos(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3))",
        "vars": [
          "phi1",
          "phi2",
          "phi3",
          "phid1",
          "phid2",
          "phid3",
          "theta2",
          "theta3",
          "thetad2",
          "thetad3"
        ]
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "Math.sin(phi3)*(Math.cos(theta3)*(phid1*Math.sin(phi1)*Math.sin(phi2) - phid2*Math.cos(phi1)*Math.cos(phi2) - phid1*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2) + phid2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) + thetad2*Math.cos(phi2)*Math.sin(phi1)*Math.sin(theta2)) + thetad3*Math.sin(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + phid1*Math.cos(phi1)*Math.sin(theta2)*Math.sin(theta3) + thetad2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3) + thetad3*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2)) - Math.cos(phi3)*(phid1*Math.cos(phi2)*Math.sin(phi1) + phid2*Math.cos(phi1)*Math.sin(phi2) + phid1*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2) + phid2*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1) - thetad2*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta2)) - phid3*Math.sin(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) - phid3*Math.cos(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3))",
        "vars": [
          "phi1",
          "phi2",
          "phi3",
          "phid1",
          "phid2",
          "phid3",
          "theta2",
          "theta3",
          "thetad2",
          "thetad3"
        ]
      },
      {
        "expr": "phid3*Math.cos(phi3)*(Math.cos(theta2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta3)*Math.sin(theta2)) - Math.sin(phi3)*(thetad2*Math.sin(theta2)*Math.sin(theta3) - thetad3*Math.cos(theta2)*Math.cos(theta3) - thetad2*Math.cos(phi2)*Math.cos(theta2)*Math.cos(theta3) + phid2*Math.cos(theta3)*Math.sin(phi2)*Math.sin(theta2) + thetad3*Math.cos(phi2)*Math.sin(theta2)*Math.sin(theta3)) + phid2*Math.cos(phi2)*Math.cos(phi3)*Math.sin(theta2) + thetad2*Math.cos(phi3)*Math.cos(theta2)*Math.sin(phi2) - phid3*Math.sin(phi2)*Math.sin(phi3)*Math.sin(theta2)",
        "vars": [
          "phi2",
          "phi3",
          "phid2",
          "phid3",
          "theta2",
          "theta3",
          "thetad2",
          "thetad3"
        ]
      },
      {
        "expr": "thetad3*Math.sin(phi2)*Math.sin(phi3)*Math.sin(theta3) - phid3*Math.cos(phi2)*Math.sin(phi3) - phid2*Math.cos(phi2)*Math.cos(theta3)*Math.sin(phi3) - phid3*Math.cos(phi3)*Math.cos(theta3)*Math.sin(phi2) - phid2*Math.cos(phi3)*Math.sin(phi2)",
        "vars": [
          "phi2",
          "phi3",
          "phid2",
          "phid3",
          "theta3",
          "thetad3"
        ]
      },
      {
        "expr": "phid3*Math.cos(phi3)*Math.sin(theta3) + thetad3*Math.cos(theta3)*Math.sin(phi3)",
        "vars": [
          "phi3",
          "phid3",
          "theta3",
          "thetad3"
        ]
      },
      {
        "expr": "-phid3*Math.sin(phi3)",
        "vars": [
          "phi3",
          "phid3"
        ]
      },
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2)*(crd + thetad1) + 10*thetad2*Math.sin(cr + theta1)*Math.cos(theta2) + 10*phid1*Math.cos(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + 10*thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) - Math.sin(phi3)*(10*Math.sin(theta3)*(thetad2*Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(theta2)*(crd + thetad1) - thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2) + phid1*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)*(crd + thetad1)) - 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2)*(crd + thetad1) + thetad2*Math.sin(cr + theta1)*Math.cos(theta2) + phid1*Math.cos(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) - phid2*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)*(crd + thetad1) + phid1*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(phi2) + phid2*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 10*thetad3*Math.sin(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)) - 10*thetad3*Math.cos(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) - (117*crd*Math.cos(cr))/25 + (61*crd*Math.sin(cr))/100 + Math.cos(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2)*(crd + thetad1) + thetad2*Math.sin(cr + theta1)*Math.cos(theta2) + phid1*Math.cos(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + 10*phid2*Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*phid1*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(phi2) + 10*phid2*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)*(crd + thetad1)) + 10*Math.sin(cr + theta1)*Math.sin(phi1)*(crd + thetad1) - 10*phid1*Math.cos(cr + theta1)*Math.cos(phi1) + phid2*Math.cos(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + phid3*Math.cos(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) - phid3*Math.sin(phi3)*(10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) - 10*phid1*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(phi2) + 10*phid2*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)*(crd + thetad1)",
        "vars": [
          "cr",
          "crd",
          "phi1",
          "phi2",
          "phi3",
          "phid1",
          "phid2",
          "phid3",
          "theta1",
          "theta2",
          "theta3",
          "thetad1",
          "thetad2",
          "thetad3"
        ]
      },
      {
        "expr": "- 2*crd*Math.sin(cr) - cr*crd*Math.cos(cr)",
        "vars": [
          "cr",
          "crd"
        ]
      },
      {
        "expr": "Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2)*(crd + thetad1) + 10*thetad2*Math.sin(cr + theta1)*Math.cos(theta2) + 10*phid1*Math.cos(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + 10*thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) - Math.sin(phi3)*(10*Math.sin(theta3)*(thetad2*Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(theta2)*(crd + thetad1) - thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2) + phid1*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)*(crd + thetad1)) - 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2)*(crd + thetad1) + thetad2*Math.sin(cr + theta1)*Math.cos(theta2) + phid1*Math.cos(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) - phid2*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)*(crd + thetad1) + phid1*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(phi2) + phid2*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 10*thetad3*Math.sin(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)) - 10*thetad3*Math.cos(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) + Math.cos(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2)*(crd + thetad1) + thetad2*Math.sin(cr + theta1)*Math.cos(theta2) + phid1*Math.cos(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + 10*phid2*Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*phid1*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(phi2) + 10*phid2*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)*(crd + thetad1)) + 10*Math.sin(cr + theta1)*Math.sin(phi1)*(crd + thetad1) - 10*phid1*Math.cos(cr + theta1)*Math.cos(phi1) + phid2*Math.cos(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + phid3*Math.cos(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) - phid3*Math.sin(phi3)*(10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) - 10*phid1*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(phi2) + 10*phid2*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)*(crd + thetad1)",
        "vars": [
          "cr",
          "crd",
          "phi1",
          "phi2",
          "phi3",
          "phid1",
          "phid2",
          "phid3",
          "theta1",
          "theta2",
          "theta3",
          "thetad1",
          "thetad2",
          "thetad3"
        ]
      },
      {
        "expr": "Math.sin(cr + theta1)*(10*phid1*Math.sin(phi1) + 10*phid1*Math.cos(phi2)*Math.sin(phi1) + 10*phid2*Math.cos(phi1)*Math.sin(phi2) + 10*phid1*Math.cos(phi2)*Math.cos(phi3)*Math.sin(phi1) + 10*phid2*Math.cos(phi1)*Math.cos(phi3)*Math.sin(phi2) + 10*phid3*Math.cos(phi1)*Math.cos(phi2)*Math.sin(phi3) + 10*phid1*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2) + 10*phid2*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1) - 10*thetad2*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta2) + 10*phid1*Math.cos(phi1)*Math.cos(phi3)*Math.cos(theta2)*Math.sin(phi2) + 10*phid2*Math.cos(phi2)*Math.cos(phi3)*Math.cos(theta2)*Math.sin(phi1) + 10*phid2*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta3)*Math.sin(phi3) + 10*phid3*Math.cos(phi1)*Math.cos(phi3)*Math.cos(theta3)*Math.sin(phi2) - 10*phid1*Math.cos(theta3)*Math.sin(phi1)*Math.sin(phi2)*Math.sin(phi3) - 10*phid3*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)*Math.sin(phi3) - 10*phid1*Math.cos(phi1)*Math.sin(phi3)*Math.sin(theta2)*Math.sin(theta3) - 10*thetad2*Math.cos(phi3)*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta2) - 10*phid3*Math.cos(phi3)*Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3) - 10*thetad3*Math.cos(phi1)*Math.sin(phi2)*Math.sin(phi3)*Math.sin(theta3) - 10*thetad2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi3)*Math.sin(theta3) - 10*thetad3*Math.cos(theta3)*Math.sin(phi1)*Math.sin(phi3)*Math.sin(theta2) + 10*phid1*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi3) + 10*phid3*Math.cos(phi2)*Math.cos(phi3)*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi1) - 10*phid2*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi1)*Math.sin(phi2)*Math.sin(phi3) - 10*thetad2*Math.cos(phi2)*Math.cos(theta3)*Math.sin(phi1)*Math.sin(phi3)*Math.sin(theta2) - 10*thetad3*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi3)*Math.sin(theta3)) - Math.cos(cr + theta1)*(crd + thetad1)*(10*Math.cos(phi1) + 10*Math.cos(phi1)*Math.cos(phi2) + 10*Math.cos(phi1)*Math.cos(phi2)*Math.cos(phi3) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 10*Math.cos(phi3)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 10*Math.cos(phi1)*Math.cos(theta3)*Math.sin(phi2)*Math.sin(phi3) + 10*Math.sin(phi1)*Math.sin(phi3)*Math.sin(theta2)*Math.sin(theta3) - 10*Math.cos(phi2)*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi1)*Math.sin(phi3))",
        "vars": [
          "cr",
          "crd",
          "phi1",
          "phi2",
          "phi3",
          "phid1",
          "phid2",
          "phid3",
          "theta1",
          "theta2",
          "theta3",
          "thetad1",
          "thetad2",
          "thetad3"
        ]
      },
      {
        "expr": "Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.cos(theta2)*(crd + thetad1) + 10*thetad2*Math.cos(cr + theta1)*Math.sin(theta2) + 10*thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2) - 10*phid1*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(theta2) + 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)*(crd + thetad1)) + Math.sin(phi3)*(10*Math.cos(phi2)*Math.cos(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2)*(crd + thetad1) + thetad2*Math.cos(cr + theta1)*Math.sin(theta2) + thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2) - phid1*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)*(crd + thetad1)) - 10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.sin(theta2)*(crd + thetad1) - thetad2*Math.cos(cr + theta1)*Math.cos(theta2) + phid1*Math.sin(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + 10*thetad3*Math.cos(theta3)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*phid2*Math.cos(theta3)*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*thetad3*Math.cos(phi2)*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) + Math.cos(phi3)*Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.cos(theta2)*(crd + thetad1) + 10*thetad2*Math.cos(cr + theta1)*Math.sin(theta2) + 10*thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2) - 10*phid1*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(theta2) + 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)*(crd + thetad1)) + phid3*Math.cos(phi3)*(10*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(phi2)*Math.cos(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) - phid2*Math.cos(phi2)*(10*Math.cos(cr + theta1)*Math.cos(theta2) - 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) - phid2*Math.cos(phi2)*Math.cos(phi3)*(10*Math.cos(cr + theta1)*Math.cos(theta2) - 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + phid3*Math.sin(phi2)*Math.sin(phi3)*(10*Math.cos(cr + theta1)*Math.cos(theta2) - 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))",
        "vars": [
          "cr",
          "crd",
          "phi1",
          "phi2",
          "phi3",
          "phid1",
          "phid2",
          "phid3",
          "theta1",
          "theta2",
          "theta3",
          "thetad1",
          "thetad2",
          "thetad3"
        ]
      },
      {
        "expr": "Math.cos(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2)*(crd + thetad1) - 10*thetad2*Math.cos(cr + theta1)*Math.cos(theta2) + 10*phid1*Math.sin(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + 10*thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + Math.cos(phi3)*(10*Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2)*(crd + thetad1) - thetad2*Math.cos(cr + theta1)*Math.cos(theta2) + phid1*Math.sin(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + 10*phid2*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*phid1*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(phi2) + 10*phid2*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1) + 10*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)*(crd + thetad1)) + phid3*Math.sin(phi3)*(10*Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)) + phid2*Math.sin(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(theta3)*Math.sin(phi3)*(10*phid2*Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2)*(crd + thetad1) - thetad2*Math.cos(cr + theta1)*Math.cos(theta2) + phid1*Math.sin(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + 10*phid1*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(phi2) - 10*phid2*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2) + 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)*(crd + thetad1)) + 10*phid1*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(phi2) + 10*phid2*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1) + phid3*Math.cos(phi3)*Math.cos(theta3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 10*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)*(crd + thetad1) - thetad3*Math.sin(phi3)*Math.sin(theta3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1))",
        "vars": [
          "cr",
          "crd",
          "phi1",
          "phi2",
          "phi3",
          "phid1",
          "phid2",
          "phid3",
          "theta1",
          "theta2",
          "theta3",
          "thetad1",
          "thetad2",
          "thetad3"
        ]
      },
      {
        "expr": "Math.sin(phi3)*(10*Math.cos(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2)*(crd + thetad1) + thetad2*Math.cos(cr + theta1)*Math.sin(theta2) + thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2) - phid1*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)*(crd + thetad1)) - 10*Math.sin(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2)*(crd + thetad1) - thetad2*Math.cos(cr + theta1)*Math.cos(theta2) + phid1*Math.sin(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + phid2*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + phid1*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(phi2) + phid2*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)*(crd + thetad1)) + 10*thetad3*Math.cos(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)) + 10*thetad3*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) - phid3*Math.cos(phi3)*(10*Math.cos(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) - 10*Math.sin(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)))",
        "vars": [
          "cr",
          "crd",
          "phi1",
          "phi2",
          "phi3",
          "phid1",
          "phid2",
          "phid3",
          "theta1",
          "theta2",
          "theta3",
          "thetad1",
          "thetad2",
          "thetad3"
        ]
      },
      {
        "expr": "Math.cos(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2)*(crd + thetad1) + thetad2*Math.cos(cr + theta1)*Math.sin(theta2) + thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2) - phid1*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)*(crd + thetad1)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2)*(crd + thetad1) - thetad2*Math.cos(cr + theta1)*Math.cos(theta2) + phid1*Math.sin(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + phid2*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + phid1*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(phi2) + phid2*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)*(crd + thetad1)) + 10*thetad3*Math.sin(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)) - 10*thetad3*Math.cos(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) + Math.sin(phi3)*(10*phid2*Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2)*(crd + thetad1) - thetad2*Math.cos(cr + theta1)*Math.cos(theta2) + phid1*Math.sin(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + 10*phid1*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(phi2) - 10*phid2*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2) + 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)*(crd + thetad1)) + phid3*Math.sin(phi3)*(10*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) + phid3*Math.cos(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1))",
        "vars": [
          "cr",
          "crd",
          "phi1",
          "phi2",
          "phi3",
          "phid1",
          "phid2",
          "phid3",
          "theta1",
          "theta2",
          "theta3",
          "thetad1",
          "thetad2",
          "thetad3"
        ]
      }
    ],
    [
      {
        "expr": "Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2)*(crd + thetad1) - 10*thetad2*Math.cos(cr + theta1)*Math.cos(theta2) + 10*phid1*Math.sin(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + 10*thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) - (61*crd*Math.cos(cr))/100 - (117*crd*Math.sin(cr))/25 + Math.sin(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2)*(crd + thetad1) + thetad2*Math.cos(cr + theta1)*Math.sin(theta2) + thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2) - phid1*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)*(crd + thetad1)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2)*(crd + thetad1) - thetad2*Math.cos(cr + theta1)*Math.cos(theta2) + phid1*Math.sin(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + phid2*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + phid1*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(phi2) + phid2*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)*(crd + thetad1)) + 10*thetad3*Math.sin(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)) - 10*thetad3*Math.cos(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) - Math.cos(phi3)*(10*phid2*Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2)*(crd + thetad1) - thetad2*Math.cos(cr + theta1)*Math.cos(theta2) + phid1*Math.sin(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + 10*phid1*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(phi2) - 10*phid2*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2) + 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)*(crd + thetad1)) + phid3*Math.sin(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) - 10*Math.cos(cr + theta1)*Math.sin(phi1)*(crd + thetad1) - 10*phid1*Math.sin(cr + theta1)*Math.cos(phi1) - phid2*Math.cos(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - phid3*Math.cos(phi3)*(10*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) - 10*phid1*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(phi2) + 10*phid2*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)*(crd + thetad1)",
        "vars": [
          "cr",
          "crd",
          "phi1",
          "phi2",
          "phi3",
          "phid1",
          "phid2",
          "phid3",
          "theta1",
          "theta2",
          "theta3",
          "thetad1",
          "thetad2",
          "thetad3"
        ]
      },
      {
        "expr": "2*crd*Math.cos(cr) - cr*crd*Math.sin(cr)",
        "vars": [
          "cr",
          "crd"
        ]
      },
      {
        "expr": "Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2)*(crd + thetad1) - 10*thetad2*Math.cos(cr + theta1)*Math.cos(theta2) + 10*phid1*Math.sin(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + 10*thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + Math.sin(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2)*(crd + thetad1) + thetad2*Math.cos(cr + theta1)*Math.sin(theta2) + thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2) - phid1*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)*(crd + thetad1)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2)*(crd + thetad1) - thetad2*Math.cos(cr + theta1)*Math.cos(theta2) + phid1*Math.sin(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + phid2*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + phid1*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(phi2) + phid2*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)*(crd + thetad1)) + 10*thetad3*Math.sin(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)) - 10*thetad3*Math.cos(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) - Math.cos(phi3)*(10*phid2*Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2)*(crd + thetad1) - thetad2*Math.cos(cr + theta1)*Math.cos(theta2) + phid1*Math.sin(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + 10*phid1*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(phi2) - 10*phid2*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2) + 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)*(crd + thetad1)) + phid3*Math.sin(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) - 10*Math.cos(cr + theta1)*Math.sin(phi1)*(crd + thetad1) - 10*phid1*Math.sin(cr + theta1)*Math.cos(phi1) - phid2*Math.cos(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - phid3*Math.cos(phi3)*(10*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.cos(theta2) - Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) - 10*phid1*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(phi2) + 10*phid2*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)*(crd + thetad1)",
        "vars": [
          "cr",
          "crd",
          "phi1",
          "phi2",
          "phi3",
          "phid1",
          "phid2",
          "phid3",
          "theta1",
          "theta2",
          "theta3",
          "thetad1",
          "thetad2",
          "thetad3"
        ]
      },
      {
        "expr": "- Math.cos(cr + theta1)*(10*phid1*Math.sin(phi1) + 10*phid1*Math.cos(phi2)*Math.sin(phi1) + 10*phid2*Math.cos(phi1)*Math.sin(phi2) + 10*phid1*Math.cos(phi2)*Math.cos(phi3)*Math.sin(phi1) + 10*phid2*Math.cos(phi1)*Math.cos(phi3)*Math.sin(phi2) + 10*phid3*Math.cos(phi1)*Math.cos(phi2)*Math.sin(phi3) + 10*phid1*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2) + 10*phid2*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1) - 10*thetad2*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta2) + 10*phid1*Math.cos(phi1)*Math.cos(phi3)*Math.cos(theta2)*Math.sin(phi2) + 10*phid2*Math.cos(phi2)*Math.cos(phi3)*Math.cos(theta2)*Math.sin(phi1) + 10*phid2*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta3)*Math.sin(phi3) + 10*phid3*Math.cos(phi1)*Math.cos(phi3)*Math.cos(theta3)*Math.sin(phi2) - 10*phid1*Math.cos(theta3)*Math.sin(phi1)*Math.sin(phi2)*Math.sin(phi3) - 10*phid3*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)*Math.sin(phi3) - 10*phid1*Math.cos(phi1)*Math.sin(phi3)*Math.sin(theta2)*Math.sin(theta3) - 10*thetad2*Math.cos(phi3)*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta2) - 10*phid3*Math.cos(phi3)*Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3) - 10*thetad3*Math.cos(phi1)*Math.sin(phi2)*Math.sin(phi3)*Math.sin(theta3) - 10*thetad2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi3)*Math.sin(theta3) - 10*thetad3*Math.cos(theta3)*Math.sin(phi1)*Math.sin(phi3)*Math.sin(theta2) + 10*phid1*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi3) + 10*phid3*Math.cos(phi2)*Math.cos(phi3)*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi1) - 10*phid2*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi1)*Math.sin(phi2)*Math.sin(phi3) - 10*thetad2*Math.cos(phi2)*Math.cos(theta3)*Math.sin(phi1)*Math.sin(phi3)*Math.sin(theta2) - 10*thetad3*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi3)*Math.sin(theta3)) - Math.sin(cr + theta1)*(crd + thetad1)*(10*Math.cos(phi1) + 10*Math.cos(phi1)*Math.cos(phi2) + 10*Math.cos(phi1)*Math.cos(phi2)*Math.cos(phi3) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 10*Math.cos(phi3)*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 10*Math.cos(phi1)*Math.cos(theta3)*Math.sin(phi2)*Math.sin(phi3) + 10*Math.sin(phi1)*Math.sin(phi3)*Math.sin(theta2)*Math.sin(theta3) - 10*Math.cos(phi2)*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi1)*Math.sin(phi3))",
        "vars": [
          "cr",
          "crd",
          "phi1",
          "phi2",
          "phi3",
          "phid1",
          "phid2",
          "phid3",
          "theta1",
          "theta2",
          "theta3",
          "thetad1",
          "thetad2",
          "thetad3"
        ]
      },
      {
        "expr": "Math.sin(phi2)*(10*thetad2*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(theta2)*(crd + thetad1) - 10*thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2) + 10*phid1*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)*(crd + thetad1)) + Math.sin(phi3)*(10*Math.sin(theta3)*(Math.cos(cr + theta1)*Math.sin(theta2)*(crd + thetad1) + thetad2*Math.sin(cr + theta1)*Math.cos(theta2) + phid1*Math.cos(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + 10*Math.cos(phi2)*Math.cos(theta3)*(thetad2*Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(theta2)*(crd + thetad1) - thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2) + phid1*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)*(crd + thetad1)) + 10*thetad3*Math.cos(theta3)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*phid2*Math.cos(theta3)*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*thetad3*Math.cos(phi2)*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) + Math.cos(phi3)*Math.sin(phi2)*(10*thetad2*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(theta2)*(crd + thetad1) - 10*thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2) + 10*phid1*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)*(crd + thetad1)) + phid3*Math.cos(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(phi2)*Math.cos(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) - phid2*Math.cos(phi2)*(10*Math.sin(cr + theta1)*Math.cos(theta2) + 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) - phid2*Math.cos(phi2)*Math.cos(phi3)*(10*Math.sin(cr + theta1)*Math.cos(theta2) + 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + phid3*Math.sin(phi2)*Math.sin(phi3)*(10*Math.sin(cr + theta1)*Math.cos(theta2) + 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))",
        "vars": [
          "cr",
          "crd",
          "phi1",
          "phi2",
          "phi3",
          "phid1",
          "phid2",
          "phid3",
          "theta1",
          "theta2",
          "theta3",
          "thetad1",
          "thetad2",
          "thetad3"
        ]
      },
      {
        "expr": "Math.cos(theta3)*Math.sin(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2)*(crd + thetad1) + thetad2*Math.sin(cr + theta1)*Math.cos(theta2) + phid1*Math.cos(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + 10*phid2*Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*phid1*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(phi2) + 10*phid2*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)*(crd + thetad1)) - Math.cos(phi3)*(10*Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2)*(crd + thetad1) + thetad2*Math.sin(cr + theta1)*Math.cos(theta2) + phid1*Math.cos(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) - 10*phid2*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)*(crd + thetad1) + 10*phid1*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(phi2) + 10*phid2*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) - Math.cos(phi2)*(10*Math.cos(cr + theta1)*Math.sin(theta2)*(crd + thetad1) + 10*thetad2*Math.sin(cr + theta1)*Math.cos(theta2) + 10*phid1*Math.cos(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + 10*thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) + 10*Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + phid2*Math.sin(phi2)*(10*Math.sin(cr + theta1)*Math.sin(theta2) - 10*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + phid3*Math.sin(phi3)*(10*Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + 10*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)) + 10*Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)*(crd + thetad1) - 10*phid1*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(phi2) - 10*phid2*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1) + phid3*Math.cos(phi3)*Math.cos(theta3)*(10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) - thetad3*Math.sin(phi3)*Math.sin(theta3)*(10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1))",
        "vars": [
          "cr",
          "crd",
          "phi1",
          "phi2",
          "phi3",
          "phid1",
          "phid2",
          "phid3",
          "theta1",
          "theta2",
          "theta3",
          "thetad1",
          "thetad2",
          "thetad3"
        ]
      },
      {
        "expr": "Math.sin(phi3)*(10*Math.cos(theta3)*(thetad2*Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(theta2)*(crd + thetad1) - thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2) + phid1*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)*(crd + thetad1)) + 10*Math.sin(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2)*(crd + thetad1) + thetad2*Math.sin(cr + theta1)*Math.cos(theta2) + phid1*Math.cos(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) - phid2*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)*(crd + thetad1) + phid1*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(phi2) + phid2*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 10*thetad3*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*thetad3*Math.cos(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) - phid3*Math.cos(phi3)*(10*Math.cos(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) - 10*Math.sin(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)))",
        "vars": [
          "cr",
          "crd",
          "phi1",
          "phi2",
          "phi3",
          "phid1",
          "phid2",
          "phid3",
          "theta1",
          "theta2",
          "theta3",
          "thetad1",
          "thetad2",
          "thetad3"
        ]
      },
      {
        "expr": "Math.cos(phi3)*(10*Math.sin(theta3)*(thetad2*Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(theta2)*(crd + thetad1) - thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2) + phid1*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)*(crd + thetad1)) - 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2)*(crd + thetad1) + thetad2*Math.sin(cr + theta1)*Math.cos(theta2) + phid1*Math.cos(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) - phid2*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - Math.sin(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)*(crd + thetad1) + phid1*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(phi2) + phid2*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)) + 10*thetad3*Math.sin(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2)) - 10*thetad3*Math.cos(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2))) + Math.sin(phi3)*(10*Math.sin(phi2)*(Math.cos(cr + theta1)*Math.sin(theta2)*(crd + thetad1) + thetad2*Math.sin(cr + theta1)*Math.cos(theta2) + phid1*Math.cos(cr + theta1)*Math.cos(theta2)*Math.sin(phi1) + thetad2*Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2) + Math.sin(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)*(crd + thetad1)) + 10*phid2*Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*phid1*Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(phi2) + 10*phid2*Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2) + 10*Math.sin(cr + theta1)*Math.cos(phi2)*Math.sin(phi1)*(crd + thetad1)) + phid3*Math.sin(phi3)*(10*Math.sin(theta3)*(Math.sin(cr + theta1)*Math.cos(theta2) + Math.cos(cr + theta1)*Math.cos(phi1)*Math.sin(theta2)) + 10*Math.cos(theta3)*(Math.cos(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) + Math.cos(cr + theta1)*Math.sin(phi1)*Math.sin(phi2))) + phid3*Math.cos(phi3)*(10*Math.sin(phi2)*(Math.sin(cr + theta1)*Math.sin(theta2) - Math.cos(cr + theta1)*Math.cos(phi1)*Math.cos(theta2)) - 10*Math.cos(cr + theta1)*Math.cos(phi2)*Math.sin(phi1))",
        "vars": [
          "cr",
          "crd",
          "phi1",
          "phi2",
          "phi3",
          "phid1",
          "phid2",
          "phid3",
          "theta1",
          "theta2",
          "theta3",
          "thetad1",
          "thetad2",
          "thetad3"
        ]
      }
    ],
    [
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "10*phid1*Math.cos(phi1) - Math.cos(phi3)*(10*phid2*Math.sin(phi1)*Math.sin(phi2) - 10*phid1*Math.cos(phi1)*Math.cos(phi2) - 10*phid2*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2) + 10*phid1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) + 10*thetad2*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta2)) - Math.sin(phi3)*(10*Math.cos(theta3)*(phid1*Math.cos(phi1)*Math.sin(phi2) + phid2*Math.cos(phi2)*Math.sin(phi1) + phid1*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1) + phid2*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2) + thetad2*Math.cos(phi1)*Math.cos(phi2)*Math.sin(theta2)) - 10*thetad3*Math.sin(theta3)*(Math.sin(phi1)*Math.sin(phi2) - Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2)) + 10*thetad2*Math.cos(phi1)*Math.cos(theta2)*Math.sin(theta3) + 10*thetad3*Math.cos(phi1)*Math.cos(theta3)*Math.sin(theta2) - 10*phid1*Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) - phid3*Math.sin(phi3)*(10*Math.cos(phi2)*Math.sin(phi1) + 10*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2)) + 10*phid1*Math.cos(phi1)*Math.cos(phi2) - 10*phid2*Math.sin(phi1)*Math.sin(phi2) - phid3*Math.cos(phi3)*(10*Math.cos(theta3)*(Math.sin(phi1)*Math.sin(phi2) - Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2)) + 10*Math.cos(phi1)*Math.sin(theta2)*Math.sin(theta3)) + 10*phid2*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2) - 10*phid1*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 10*thetad2*Math.cos(phi1)*Math.sin(phi2)*Math.sin(theta2)",
        "vars": [
          "phi1",
          "phi2",
          "phi3",
          "phid1",
          "phid2",
          "phid3",
          "theta2",
          "theta3",
          "thetad2",
          "thetad3"
        ]
      },
      {
        "expr": "- Math.sin(phi1)*(10*phid2*Math.cos(phi2)*Math.sin(theta2) + 10*thetad2*Math.cos(theta2)*Math.sin(phi2) + 10*phid2*Math.cos(phi2)*Math.cos(phi3)*Math.sin(theta2) + 10*thetad2*Math.cos(phi3)*Math.cos(theta2)*Math.sin(phi2) + 10*phid3*Math.cos(phi3)*Math.cos(theta2)*Math.sin(theta3) + 10*thetad3*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi3) - 10*phid3*Math.sin(phi2)*Math.sin(phi3)*Math.sin(theta2) - 10*thetad2*Math.sin(phi3)*Math.sin(theta2)*Math.sin(theta3) + 10*phid3*Math.cos(phi2)*Math.cos(phi3)*Math.cos(theta3)*Math.sin(theta2) + 10*thetad2*Math.cos(phi2)*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi3) - 10*phid2*Math.cos(theta3)*Math.sin(phi2)*Math.sin(phi3)*Math.sin(theta2) - 10*thetad3*Math.cos(phi2)*Math.sin(phi3)*Math.sin(theta2)*Math.sin(theta3)) - phid1*Math.cos(phi1)*(10*Math.sin(phi2)*Math.sin(theta2) + 10*Math.cos(theta2)*Math.sin(phi3)*Math.sin(theta3) + 10*Math.cos(phi3)*Math.sin(phi2)*Math.sin(theta2) + 10*Math.cos(phi2)*Math.cos(theta3)*Math.sin(phi3)*Math.sin(theta2))",
        "vars": [
          "phi1",
          "phi2",
          "phi3",
          "phid1",
          "phid2",
          "phid3",
          "theta2",
          "theta3",
          "thetad2",
          "thetad3"
        ]
      },
      {
        "expr": "10*phid2*Math.cos(phi1)*Math.cos(phi2) - phid3*Math.sin(phi3)*(10*Math.cos(phi1)*Math.sin(phi2) + 10*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.cos(phi3)*(10*phid1*Math.sin(phi1)*Math.sin(phi2) - 10*phid2*Math.cos(phi1)*Math.cos(phi2) - 10*phid1*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2) + 10*phid2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) + 10*thetad2*Math.cos(phi2)*Math.sin(phi1)*Math.sin(theta2)) - 10*phid1*Math.sin(phi1)*Math.sin(phi2) - Math.cos(theta3)*Math.sin(phi3)*(10*phid1*Math.cos(phi2)*Math.sin(phi1) + 10*phid2*Math.cos(phi1)*Math.sin(phi2) + 10*phid1*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2) + 10*phid2*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1) - 10*thetad2*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta2)) - thetad3*Math.sin(phi3)*Math.sin(theta3)*(10*Math.cos(phi1)*Math.cos(phi2) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) + 10*phid1*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2) - 10*phid2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) - 10*thetad2*Math.cos(phi2)*Math.sin(phi1)*Math.sin(theta2) + phid3*Math.cos(phi3)*Math.cos(theta3)*(10*Math.cos(phi1)*Math.cos(phi2) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2))",
        "vars": [
          "phi1",
          "phi2",
          "phi3",
          "phid1",
          "phid2",
          "phid3",
          "theta2",
          "theta3",
          "thetad2",
          "thetad3"
        ]
      },
      {
        "expr": "- Math.sin(phi3)*(10*thetad3*Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - 10*Math.sin(theta3)*(phid1*Math.sin(phi1)*Math.sin(phi2) - phid2*Math.cos(phi1)*Math.cos(phi2) - phid1*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2) + phid2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) + thetad2*Math.cos(phi2)*Math.sin(phi1)*Math.sin(theta2)) + 10*phid1*Math.cos(phi1)*Math.cos(theta3)*Math.sin(theta2) + 10*thetad2*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi1) - 10*thetad3*Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)) - phid3*Math.cos(phi3)*(10*Math.sin(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + 10*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2))",
        "vars": [
          "phi1",
          "phi2",
          "phi3",
          "phid1",
          "phid2",
          "phid3",
          "theta2",
          "theta3",
          "thetad2",
          "thetad3"
        ]
      },
      {
        "expr": "phid3*Math.cos(phi3)*(10*Math.cos(phi1)*Math.cos(phi2) - 10*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) - Math.sin(phi3)*(10*phid1*Math.cos(phi2)*Math.sin(phi1) + 10*phid2*Math.cos(phi1)*Math.sin(phi2) + 10*phid1*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2) + 10*phid2*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1) - 10*thetad2*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta2)) - Math.cos(phi3)*(10*Math.cos(theta3)*(phid1*Math.sin(phi1)*Math.sin(phi2) - phid2*Math.cos(phi1)*Math.cos(phi2) - phid1*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2) + phid2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) + thetad2*Math.cos(phi2)*Math.sin(phi1)*Math.sin(theta2)) + 10*thetad3*Math.sin(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + 10*phid1*Math.cos(phi1)*Math.sin(theta2)*Math.sin(theta3) + 10*thetad2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3) + 10*thetad3*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2)) - phid3*Math.sin(phi3)*(10*Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - 10*Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3))",
        "vars": [
          "phi1",
          "phi2",
          "phi3",
          "phid1",
          "phid2",
          "phid3",
          "theta2",
          "theta3",
          "thetad2",
          "thetad3"
        ]
      }
    ],
    [
      {
        "expr": "phid2*Math.cos(phi1)*Math.cos(phi2)*Math.sin(theta3) + phid1*Math.cos(phi1)*Math.cos(theta3)*Math.sin(theta2) + thetad3*Math.cos(phi1)*Math.cos(theta3)*Math.sin(phi2) + thetad2*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi1) - phid1*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta3) - thetad3*Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3) + phid1*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2)*Math.sin(theta3) + thetad3*Math.cos(phi2)*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi1) - phid2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta3) - thetad2*Math.cos(phi2)*Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)",
        "vars": [
          "phi1",
          "phi2",
          "phid1",
          "phid2",
          "theta2",
          "theta3",
          "thetad2",
          "thetad3"
        ]
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "phid2*Math.cos(phi1)*Math.cos(phi2)*Math.sin(theta3) + phid1*Math.cos(phi1)*Math.cos(theta3)*Math.sin(theta2) + thetad3*Math.cos(phi1)*Math.cos(theta3)*Math.sin(phi2) + thetad2*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi1) - phid1*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta3) - thetad3*Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3) + phid1*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2)*Math.sin(theta3) + thetad3*Math.cos(phi2)*Math.cos(theta2)*Math.cos(theta3)*Math.sin(phi1) - phid2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta3) - thetad2*Math.cos(phi2)*Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3)",
        "vars": [
          "phi1",
          "phi2",
          "phid1",
          "phid2",
          "theta2",
          "theta3",
          "thetad2",
          "thetad3"
        ]
      },
      {
        "expr": "phid2*Math.sin(phi2)*Math.sin(theta2)*Math.sin(theta3) - thetad3*Math.cos(theta2)*Math.sin(theta3) - thetad2*Math.cos(phi2)*Math.cos(theta2)*Math.sin(theta3) - thetad3*Math.cos(phi2)*Math.cos(theta3)*Math.sin(theta2) - thetad2*Math.cos(theta3)*Math.sin(theta2)",
        "vars": [
          "phi2",
          "phid2",
          "theta2",
          "theta3",
          "thetad2",
          "thetad3"
        ]
      },
      {
        "expr": "phid2*Math.cos(phi2)*Math.sin(theta3) + thetad3*Math.cos(theta3)*Math.sin(phi2)",
        "vars": [
          "phi2",
          "phid2",
          "theta3",
          "thetad3"
        ]
      },
      {
        "expr": "-thetad3*Math.sin(theta3)",
        "vars": [
          "theta3",
          "thetad3"
        ]
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "phid3*Math.cos(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) - Math.sin(phi3)*(phid1*Math.cos(phi2)*Math.sin(phi1) + phid2*Math.cos(phi1)*Math.sin(phi2) + phid1*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2) + phid2*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1) - thetad2*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta2)) - Math.cos(phi3)*(Math.cos(theta3)*(phid1*Math.sin(phi1)*Math.sin(phi2) - phid2*Math.cos(phi1)*Math.cos(phi2) - phid1*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2) + phid2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) + thetad2*Math.cos(phi2)*Math.sin(phi1)*Math.sin(theta2)) + thetad3*Math.sin(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + phid1*Math.cos(phi1)*Math.sin(theta2)*Math.sin(theta3) + thetad2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3) + thetad3*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2)) - phid3*Math.sin(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3))",
        "vars": [
          "phi1",
          "phi2",
          "phi3",
          "phid1",
          "phid2",
          "phid3",
          "theta2",
          "theta3",
          "thetad2",
          "thetad3"
        ]
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "phid3*Math.cos(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) - Math.sin(phi3)*(phid1*Math.cos(phi2)*Math.sin(phi1) + phid2*Math.cos(phi1)*Math.sin(phi2) + phid1*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2) + phid2*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1) - thetad2*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta2)) - Math.cos(phi3)*(Math.cos(theta3)*(phid1*Math.sin(phi1)*Math.sin(phi2) - phid2*Math.cos(phi1)*Math.cos(phi2) - phid1*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2) + phid2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) + thetad2*Math.cos(phi2)*Math.sin(phi1)*Math.sin(theta2)) + thetad3*Math.sin(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + phid1*Math.cos(phi1)*Math.sin(theta2)*Math.sin(theta3) + thetad2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3) + thetad3*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2)) - phid3*Math.sin(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3))",
        "vars": [
          "phi1",
          "phi2",
          "phi3",
          "phid1",
          "phid2",
          "phid3",
          "theta2",
          "theta3",
          "thetad2",
          "thetad3"
        ]
      },
      {
        "expr": "Math.cos(phi3)*(thetad2*Math.sin(theta2)*Math.sin(theta3) - thetad3*Math.cos(theta2)*Math.cos(theta3) - thetad2*Math.cos(phi2)*Math.cos(theta2)*Math.cos(theta3) + phid2*Math.cos(theta3)*Math.sin(phi2)*Math.sin(theta2) + thetad3*Math.cos(phi2)*Math.sin(theta2)*Math.sin(theta3)) + phid3*Math.sin(phi3)*(Math.cos(theta2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta3)*Math.sin(theta2)) + phid2*Math.cos(phi2)*Math.sin(phi3)*Math.sin(theta2) + phid3*Math.cos(phi3)*Math.sin(phi2)*Math.sin(theta2) + thetad2*Math.cos(theta2)*Math.sin(phi2)*Math.sin(phi3)",
        "vars": [
          "phi2",
          "phi3",
          "phid2",
          "phid3",
          "theta2",
          "theta3",
          "thetad2",
          "thetad3"
        ]
      },
      {
        "expr": "phid3*Math.cos(phi2)*Math.cos(phi3) - phid2*Math.sin(phi2)*Math.sin(phi3) + phid2*Math.cos(phi2)*Math.cos(phi3)*Math.cos(theta3) - phid3*Math.cos(theta3)*Math.sin(phi2)*Math.sin(phi3) - thetad3*Math.cos(phi3)*Math.sin(phi2)*Math.sin(theta3)",
        "vars": [
          "phi2",
          "phi3",
          "phid2",
          "phid3",
          "theta3",
          "thetad3"
        ]
      },
      {
        "expr": "phid3*Math.sin(phi3)*Math.sin(theta3) - thetad3*Math.cos(phi3)*Math.cos(theta3)",
        "vars": [
          "phi3",
          "phid3",
          "theta3",
          "thetad3"
        ]
      },
      {
        "expr": "phid3*Math.cos(phi3)",
        "vars": [
          "phi3",
          "phid3"
        ]
      },
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "Math.sin(phi3)*(Math.cos(theta3)*(phid1*Math.sin(phi1)*Math.sin(phi2) - phid2*Math.cos(phi1)*Math.cos(phi2) - phid1*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2) + phid2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) + thetad2*Math.cos(phi2)*Math.sin(phi1)*Math.sin(theta2)) + thetad3*Math.sin(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + phid1*Math.cos(phi1)*Math.sin(theta2)*Math.sin(theta3) + thetad2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3) + thetad3*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2)) - Math.cos(phi3)*(phid1*Math.cos(phi2)*Math.sin(phi1) + phid2*Math.cos(phi1)*Math.sin(phi2) + phid1*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2) + phid2*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1) - thetad2*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta2)) - phid3*Math.sin(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) - phid3*Math.cos(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3))",
        "vars": [
          "phi1",
          "phi2",
          "phi3",
          "phid1",
          "phid2",
          "phid3",
          "theta2",
          "theta3",
          "thetad2",
          "thetad3"
        ]
      },
      {
        "expr": "0",
        "vars": []
      },
      {
        "expr": "Math.sin(phi3)*(Math.cos(theta3)*(phid1*Math.sin(phi1)*Math.sin(phi2) - phid2*Math.cos(phi1)*Math.cos(phi2) - phid1*Math.cos(phi1)*Math.cos(phi2)*Math.cos(theta2) + phid2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2) + thetad2*Math.cos(phi2)*Math.sin(phi1)*Math.sin(theta2)) + thetad3*Math.sin(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) + phid1*Math.cos(phi1)*Math.sin(theta2)*Math.sin(theta3) + thetad2*Math.cos(theta2)*Math.sin(phi1)*Math.sin(theta3) + thetad3*Math.cos(theta3)*Math.sin(phi1)*Math.sin(theta2)) - Math.cos(phi3)*(phid1*Math.cos(phi2)*Math.sin(phi1) + phid2*Math.cos(phi1)*Math.sin(phi2) + phid1*Math.cos(phi1)*Math.cos(theta2)*Math.sin(phi2) + phid2*Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1) - thetad2*Math.sin(phi1)*Math.sin(phi2)*Math.sin(theta2)) - phid3*Math.sin(phi3)*(Math.cos(phi1)*Math.cos(phi2) - Math.cos(theta2)*Math.sin(phi1)*Math.sin(phi2)) - phid3*Math.cos(phi3)*(Math.cos(theta3)*(Math.cos(phi1)*Math.sin(phi2) + Math.cos(phi2)*Math.cos(theta2)*Math.sin(phi1)) - Math.sin(phi1)*Math.sin(theta2)*Math.sin(theta3))",
        "vars": [
          "phi1",
          "phi2",
          "phi3",
          "phid1",
          "phid2",
          "phid3",
          "theta2",
          "theta3",
          "thetad2",
          "thetad3"
        ]
      },
      {
        "expr": "phid3*Math.cos(phi3)*(Math.cos(theta2)*Math.sin(theta3) + Math.cos(phi2)*Math.cos(theta3)*Math.sin(theta2)) - Math.sin(phi3)*(thetad2*Math.sin(theta2)*Math.sin(theta3) - thetad3*Math.cos(theta2)*Math.cos(theta3) - thetad2*Math.cos(phi2)*Math.cos(theta2)*Math.cos(theta3) + phid2*Math.cos(theta3)*Math.sin(phi2)*Math.sin(theta2) + thetad3*Math.cos(phi2)*Math.sin(theta2)*Math.sin(theta3)) + phid2*Math.cos(phi2)*Math.cos(phi3)*Math.sin(theta2) + thetad2*Math.cos(phi3)*Math.cos(theta2)*Math.sin(phi2) - phid3*Math.sin(phi2)*Math.sin(phi3)*Math.sin(theta2)",
        "vars": [
          "phi2",
          "phi3",
          "phid2",
          "phid3",
          "theta2",
          "theta3",
          "thetad2",
          "thetad3"
        ]
      },
      {
        "expr": "thetad3*Math.sin(phi2)*Math.sin(phi3)*Math.sin(theta3) - phid3*Math.cos(phi2)*Math.sin(phi3) - phid2*Math.cos(phi2)*Math.cos(theta3)*Math.sin(phi3) - phid3*Math.cos(phi3)*Math.cos(theta3)*Math.sin(phi2) - phid2*Math.cos(phi3)*Math.sin(phi2)",
        "vars": [
          "phi2",
          "phi3",
          "phid2",
          "phid3",
          "theta3",
          "thetad3"
        ]
      },
      {
        "expr": "phid3*Math.cos(phi3)*Math.sin(theta3) + thetad3*Math.cos(theta3)*Math.sin(phi3)",
        "vars": [
          "phi3",
          "phid3",
          "theta3",
          "thetad3"
        ]
      },
      {
        "expr": "-phid3*Math.sin(phi3)",
        "vars": [
          "phi3",
          "phid3"
        ]
      },
      {
        "expr": "0",
        "vars": []
      }
    ]
  ],
  "F": [
    [
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "-1442070",
        "vars": []
      }
    ],
    [
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "-164808",
        "vars": []
      }
    ],
    [
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "-981/20",
        "vars": []
      }
    ],
    [
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "-981/20",
        "vars": []
      }
    ],
    [
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "-981/20",
        "vars": []
      }
    ],
    [
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "-981/20",
        "vars": []
      }
    ],
    [
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "-981/20",
        "vars": []
      }
    ],
    [
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "-981/20",
        "vars": []
      }
    ],
    [
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "-981/20",
        "vars": []
      }
    ],
    [
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "-981/20",
        "vars": []
      }
    ],
    [
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "-981/20",
        "vars": []
      }
    ],
    [
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "0",
        "vars": []
      }
    ],
    [
      {
        "expr": "0",
        "vars": []
      }
    ]
  ]
}