clear
clc
theta = sym('theta',[1, 5],'real');
thetadot = sym('thetadot',[1, 5],'real');
thetaddot = sym('thetaddot',[1, 5],'real');

phi = sym('phi',[1, 5],'real');
phidot = sym('phidot',[1, 5],'real');
phiddot = sym('phiddot',[1, 5],'real');

syms L1 L2 L3 L4 h1 d2 real; 

frames(1) = struct( ...
        'framenumber', [1], ...
        'rotationaxis', [3],...
        'rotationvar', [theta(1)], ...
        'rotationvardot', [thetadot(1)], ...
        'cm2joint', [0,0,0], ...
        'joint2cm', [1/2,0,0], ...
        'Qcoordinates', sym([theta(1), thetadot(1), thetaddot(1)]), ...
        'mass',[1],'Jmatrix',[],'Ematrix', [],'Edotmatrix', [],'Rmatrix', [],'Rdotmatrix', [],'Omatrix', [],'Bmatrix', [],'Bdotmatrix', []);

frames(2) = struct ( ...
        'framenumber', [2], ...
        'rotationaxis', [3],...
        'rotationvar', [theta(2)], ...
        'rotationvardot', [thetadot(2)], ...
        'cm2joint', [1/2,0,0], ...
        'joint2cm', [1/2,0,0], ...
        'Qcoordinates', sym([theta(2), thetadot(2), thetaddot(2)]), ...
        'mass',[1],'Jmatrix',[],'Ematrix', [],'Edotmatrix', [],'Rmatrix', [],'Rdotmatrix', [],'Omatrix', [],'Bmatrix', [],'Bdotmatrix', []);

frames(3) = struct ( ...
        'framenumber', [3], ...
        'rotationaxis', [1],...
        'rotationvar', [theta(3)], ...
        'rotationvardot', [thetadot(3)], ...
        'cm2joint', [0,L2/2,0], ...
        'joint2cm', [0,L3/2,0], ...
        'Qcoordinates', sym([theta(3), thetadot(3), thetaddot(3)]), ...
        'mass',[1],'Jmatrix',[],'Ematrix', [],'Edotmatrix', [],'Rmatrix', [],'Rdotmatrix', [],'Omatrix', [],'Bmatrix', [],'Bdotmatrix', []);

frames(1).Jmatrix = [frames(1).mass*L1^2/12,0,0;0,frames(1).mass*L1^2/12,0;0,0,0]
frames(2).Jmatrix = [frames(2).mass*L2^2/12,0,0;0,frames(2).mass*L2^2/12,0;0,0,0]
Q = getQs(2,frames)
B = makeB(2,frames)
Bdot = makeBdot(2,frames)
D = makeD(2,frames)
M = makeM(2,frames)
Mstar = B' * M * B;             Mstar = simplify(Mstar);
Nstar = B' * (M*Bdot + D*M*B);  Nstar = simplify(Nstar);

eqs_of_motion = Mstar * Q(:,3) + Nstar*Q(:,2); eqs_of_motion = simplify(eqs_of_motion)





